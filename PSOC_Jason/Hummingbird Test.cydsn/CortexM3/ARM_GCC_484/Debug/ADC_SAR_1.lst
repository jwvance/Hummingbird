ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_SAR_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_SAR_1_CalcGain,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	ADC_SAR_1_CalcGain, %function
  23              	ADC_SAR_1_CalcGain:
  24              	.LFB12:
  25              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_1.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * File Name: ADC_SAR_1.c
   3:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
   9:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  11:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  18:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #include "ADC_SAR_1.h"
  20:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  21:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
  22:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #include "ADC_SAR_1_theACLK.h"
  23:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  25:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  26:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  27:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Forward function references
  28:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  29:.\Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  31:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  32:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 2


  33:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  35:.\Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_initVar = 0u;
  36:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_offset;
  37:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int32 ADC_SAR_1_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_shift;
  40:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  41:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  42:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Start
  44:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  46:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  47:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  51:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  52:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  53:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  54:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  55:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
  56:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  57:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  58:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
  59:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  64:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  to zero before call of ADC_SAR_1_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() and ADC_SAR_1_Enable() as done in the
  67:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  68:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  69:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  72:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  73:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Start(void)
  75:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
  76:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  77:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_initVar == 0u)
  79:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
  80:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_Init();
  81:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
  82:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
  83:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_Enable();
  84:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
  85:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  86:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  87:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Init
  89:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 3


  90:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  91:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  92:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start().
  95:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  97:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  98:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 100:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 101:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 102:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
 103:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 105:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Init(void)
 107:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 108:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_theACLK_SetMode(CYCLK_DUTY);
 112:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 114:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntSetPriority(ADC_SAR_1_INTC_NUMBER, ADC_SAR_1_INTC_PRIOR_NUMBER);
 117:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 118:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 120:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR1_REG |= ADC_SAR_1_SAR_IRQ_MASK_EN | ADC_SAR_1_SAR_IRQ_MODE_EDGE;
 122:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 123:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SetResolution(ADC_SAR_1_DEFAULT_RESOLUTION);
 125:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 126:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 127:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 128:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Enable
 131:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 133:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 134:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 136:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 137:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 138:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 139:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 140:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 141:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 142:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Enable(void)
 144:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 145:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 4


 147:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 148:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 149:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG |= ADC_SAR_1_ACT_PWR_SAR_EN;
 151:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 152:.\Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG |= ADC_SAR_1_STBY_PWR_SAR_EN;
 154:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 155:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG |= ADC_SAR_1_ACT_PWR_CLK_EN;
 158:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 159:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 161:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR3_REG;
 163:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 164:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if((ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF) || \
 166:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg &= (uint8)~ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 168:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg |= ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 170:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 171:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR3_REG = tmpReg;
 172:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 173:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF)
 175:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF)
 176:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_VDDA_VREF;           /* S7 */
 179:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 180:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_VREF;            /* S3 + S4 */
 183:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 185:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 188:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_DLY_INC;
 193:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 194:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 195:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Increase comparator latch enable delay by 20%, 
 196:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Default for 1MSPS) 
 198:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 199:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 201:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* for <500ksps */
 202:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 203:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 5


 204:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 205:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_1_DEFAULT_POWER << ADC_SAR_1_SAR_POWER_SHIFT)
 207:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_1_DEFAULT_REFERENCE != ADC_SAR_1__EXT_REF))
 209:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_HIZ_CLEAR
 210:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* SAR_HIZ_CLEAR */
 211:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set Convertion mode */
 212:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)      /* If triggered mode */
 213:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_MX_SOF_UDB           /* source: UDB */
 214:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_CONV_MODE */
 216:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ; /* end of multiple line initialization */
 217:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 218:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_TR0_REG = ADC_SAR_1_SAR_CAP_TRIM_2;
 219:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 220:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable clock for SAR ADC*/
 221:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CLK_REG |= ADC_SAR_1_SAR_MX_CLK_EN;
 222:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 223:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 224:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 225:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 226:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Clear a pending interrupt */
 227:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntClearPending(ADC_SAR_1_INTC_NUMBER);
 228:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 229:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 230:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 231:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 232:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 233:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 234:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 235:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Stop
 236:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 237:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 238:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 239:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 241:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 242:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 243:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 244:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 245:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 246:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 247:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Stop(void)
 249:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 250:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 251:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 252:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 253:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Stop all conversions */
 254:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 255:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_ACT_PWR_SAR_EN;
 257:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_STBY_PWR_SAR_EN;
 259:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 260:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 6


 261:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 262:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_ACT_PWR_CLK_EN;
 263:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 264:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 265:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 266:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 267:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 269:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 270:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 271:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 272:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetPower
 273:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 274:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 275:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 276:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings with faster clock speeds.
 278:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 279:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 280:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  power:  Power setting for ADC
 281:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  0 ->    Normal
 282:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  1 ->    Medium power
 283:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  2 ->    1.25 power
 284:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  3 ->    Minimum power.
 285:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 287:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 288:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 289:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetPower(uint8 power)
 291:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 292:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 293:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 294:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* mask off invalid power settings */
 295:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     power &= ADC_SAR_1_SAR_API_POWER_MASK;
 296:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 297:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set Power parameter  */
 298:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR0_REG & (uint8)~ADC_SAR_1_SAR_POWER_MASK;
 299:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
 300:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 301:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 302:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 303:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 304:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 305:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetResolution
 306:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 307:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 308:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 309:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the Relution of the SAR.
 310:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 311:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 312:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  resolution:
 313:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  12 ->    RES12
 314:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  10 ->    RES10
 315:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  8  ->    RES8
 316:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 317:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 7


 318:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 319:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 320:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 321:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  recommended best practice is to stop conversions with
 323:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversions with ADC_StartConvert().
 325:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you decide not to stop conversions before calling this API, you
 326:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  before changing the resolution.
 328:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  not be changed until the current conversion is complete. Data will not be
 330:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  clock cycles.
 332:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  You may need add a delay of this number of clock cycles after
 333:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SetResolution() is called before data is valid again.
 334:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  input range, and voltage reference.
 338:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 339:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 340:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetResolution(uint8 resolution)
 341:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 342:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 343:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 344:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 346:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 347:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 348:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 349:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 350:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 351:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_10BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 352:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 353:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 354:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_8BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 355:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 356:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 357:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 358:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 360:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 361:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 362:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR2_REG = tmpReg;
 363:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 364:.\Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Calculate gain for convert counts to volts */
 365:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_CalcGain(resolution);
 366:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 367:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 368:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 369:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER)
 370:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 371:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 372:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StartConvert
 374:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 8


 375:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 376:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 377:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  version of the SOC and every conversion must be triggered by
 380:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  ADC_SAR_1_StartConvert(). This function is not available when the
 381:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Hardware Trigger sample mode is selected.
 382:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 383:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 385:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 386:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 387:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 388:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 389:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 390:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 395:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 396:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  external pin to the internal SOF generation. Application should not call
 398:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  StartConvert if external source used for SOF.
 399:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 400:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 401:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StartConvert(void)
 402:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 403:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 404:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 406:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 407:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start the conversion */
 408:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_SOF_START_CONV;
 409:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 410:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 411:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 412:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StopConvert
 414:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 416:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 417:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 421:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 422:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 423:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 424:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 425:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 426:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 427:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 428:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Stops ADC conversion in Free Running mode.
 429:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 430:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 431:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In Software Trigger sample mode, this function sets a software version of the
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 9


 432:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 434:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 435:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StopConvert(void)
 436:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 437:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 438:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 439:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 440:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 441:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Return source to UDB for hardware SOF signal */
 442:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_MX_SOF_UDB;    /* source: UDB */
 443:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 444:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 445:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 446:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 447:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER */
 448:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 449:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 450:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_IsEndConversion
 452:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 454:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Immediately returns the status of the conversion or does not return
 456:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  parameter.
 458:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 459:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 460:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  retMode:  Check conversion return mode.
 461:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_RETURN_STATUS: Immediately returns the status. If the
 462:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *     value returned is zero, the conversion is not complete, and this function
 463:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *     should be retried until a nonzero result is returned.
 464:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *     conversion is complete.
 466:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 467:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 468:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *           1 =>  The last conversion is complete.
 470:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 471:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 472:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 474:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_IsEndConversion(uint8 retMode)
 476:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 477:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 478:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 479:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     do
 480:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 481:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         status = ADC_SAR_1_SAR_CSR1_REG & ADC_SAR_1_SAR_EOF_1;
 482:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 483:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 484:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(status == ADC_SAR_1_SAR_EOF_1)
 485:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 486:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(1u);
 488:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 10


 489:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CY_GET_REG8(ADC_SAR_1_SAR_CSR1_PTR);
 490:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 491:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 492:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return(status);
 493:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 494:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 495:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 496:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult8
 498:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 500:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 501:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  than 8 bits, the function returns the LSB of the result.
 503:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 504:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready.
 505:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 506:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 508:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 510:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The LSB of the last ADC conversion.
 511:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 512:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 513:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 514:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 515:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 516:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 517:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 518:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 519:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 520:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int8 ADC_SAR_1_GetResult8( void )
 521:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 522:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 523:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 524:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 525:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 526:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult16
 528:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 529:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 530:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 531:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  of 8 to 12 bits.
 533:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 534:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready
 535:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 536:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 537:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 538:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 539:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 540:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The 16-bit result of the last ADC conversion
 541:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 542:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 543:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 544:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 545:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 11


 546:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 547:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 548:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 549:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_GetResult16( void )
 551:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 552:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 553:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 554:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     res = CY_GET_REG16(ADC_SAR_1_SAR_WRK_PTR);
 555:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 556:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int16)res - ADC_SAR_1_shift );
 557:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 558:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 559:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 560:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetOffset
 562:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 564:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 565:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC offset, which is used by ADC_SAR_1_CountsTo_Volts(),
 566:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts(), and ADC_SAR_1_CountsTo_uVolts()
 567:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversion.
 569:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 570:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 571:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:.\Generated_Source\PSoC5/ADC_SAR_1.c ****    the same input voltage.
 573:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 574:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 575:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 576:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 577:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable modified. This variable is used for
 579:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  offset calibration purpose.
 580:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects the ADC_SAR_1_CountsTo_Volts,
 581:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts, ADC_SAR_1_CountsTo_uVolts functions
 582:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  by subtracting the given offset.
 583:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 584:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetOffset(int16 offset)
 586:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 587:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 588:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 589:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 590:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 591:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 592:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CalcGain
 593:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 594:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 595:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 596:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 598:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 599:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  uint8: resolution
 600:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 601:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 602:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 12


 603:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 604:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 605:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift variable initialized. This variable is used to
 606:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  convert the ADC counts to the 2s compliment form.
 607:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable initialized. This variable is used
 608:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 609:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 610:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 611:.\Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain( uint8 resolution )
 612:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
  26              		.loc 1 612 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 613:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 counts;
 614:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 615:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 616:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 617:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         uint16 diff_zero;
 618:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 619:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 620:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
  35              		.loc 1 620 0
  36 0002 0A28     		cmp	r0, #10
  37 0004 13D0     		beq	.L7
  38 0006 0C28     		cmp	r0, #12
  39 0008 02D0     		beq	.L4
  40 000a 0828     		cmp	r0, #8
  41 000c 09D1     		bne	.L8
  42 000e 04E0     		b	.L5
  43              	.L4:
 621:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 622:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 623:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_12BIT;
 624:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 625:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 626:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 627:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT;
  44              		.loc 1 627 0
  45 0010 4FF40062 		mov	r2, #2048
 623:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_12BIT;
  46              		.loc 1 623 0
  47 0014 4FF48053 		mov	r3, #4096
  48 0018 0DE0     		b	.L3
  49              	.L5:
  50              	.LVL1:
 628:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 629:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 630:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 631:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_10BIT;
 632:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 633:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 13


 634:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 635:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 2u;
 636:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 637:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 638:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 639:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_8BIT;
 640:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 641:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 642:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 643:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 4u;
  51              		.loc 1 643 0
  52 001a 8022     		movs	r2, #128
 639:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_8BIT;
  53              		.loc 1 639 0
  54 001c 4FF48073 		mov	r3, #256
 644:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 645:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
  55              		.loc 1 645 0
  56 0020 09E0     		b	.L3
  57              	.LVL2:
  58              	.L8:
 646:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = 0;
 648:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 649:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 650:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 651:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = 0u;
 652:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 653:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
  59              		.loc 1 653 0
  60 0022 0020     		movs	r0, #0
  61              	.LVL3:
  62 0024 FFF7FEFF 		bl	CyHalt
  63              	.LVL4:
 651:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = 0u;
  64              		.loc 1 651 0
  65 0028 0022     		movs	r2, #0
 647:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = 0;
  66              		.loc 1 647 0
  67 002a 1346     		mov	r3, r2
  68 002c 03E0     		b	.L3
  69              	.LVL5:
  70              	.L7:
 635:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 2u;
  71              		.loc 1 635 0
  72 002e 4FF40072 		mov	r2, #512
 631:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_10BIT;
  73              		.loc 1 631 0
  74 0032 4FF48063 		mov	r3, #1024
  75              	.LVL6:
  76              	.L3:
 654:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 655:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 656:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPerVolt = 0; /* Clear obsolete variable */
  77              		.loc 1 656 0
  78 0036 0020     		movs	r0, #0
  79 0038 0849     		ldr	r1, .L9
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 14


  80 003a 0880     		strh	r0, [r1]	@ movhi
 657:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (((counts * ADC_SAR_1_10MV_COUNTS) +
  81              		.loc 1 658 0
  82 003c 42F21071 		movw	r1, #10000
  83 0040 01FB03F3 		mul	r3, r1, r3
  84              	.LVL7:
 659:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
  85              		.loc 1 659 0
  86 0044 13F58063 		adds	r3, r3, #1024
  87 0048 01D5     		bpl	.L6
  88 004a 03F2FF73 		addw	r3, r3, #2047
  89              	.L6:
  90 004e DB12     		asrs	r3, r3, #11
 658:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (((counts * ADC_SAR_1_10MV_COUNTS) +
  91              		.loc 1 658 0
  92 0050 0349     		ldr	r1, .L9+4
  93 0052 0B60     		str	r3, [r1]
 660:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 661:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if( (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 662:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 663:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC) )
 664:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = 0;
 665:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 666:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = diff_zero;
  94              		.loc 1 666 0
  95 0054 92B2     		uxth	r2, r2
  96              	.LVL8:
  97 0056 034B     		ldr	r3, .L9+8
  98 0058 1A80     		strh	r2, [r3]	@ movhi
  99 005a 08BD     		pop	{r3, pc}
 100              	.L10:
 101              		.align	2
 102              	.L9:
 103 005c 00000000 		.word	ADC_SAR_1_countsPerVolt
 104 0060 00000000 		.word	ADC_SAR_1_countsPer10Volt
 105 0064 00000000 		.word	ADC_SAR_1_shift
 106              		.cfi_endproc
 107              	.LFE12:
 108              		.size	ADC_SAR_1_CalcGain, .-ADC_SAR_1_CalcGain
 109              		.section	.text.ADC_SAR_1_Enable,"ax",%progbits
 110              		.align	2
 111              		.global	ADC_SAR_1_Enable
 112              		.thumb
 113              		.thumb_func
 114              		.type	ADC_SAR_1_Enable, %function
 115              	ADC_SAR_1_Enable:
 116              	.LFB2:
 144:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 117              		.loc 1 144 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 10B5     		push	{r4, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 15


 147:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 125              		.loc 1 147 0
 126 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 127              	.LVL9:
 128 0006 0446     		mov	r4, r0
 129              	.LVL10:
 150:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG |= ADC_SAR_1_ACT_PWR_SAR_EN;
 130              		.loc 1 150 0
 131 0008 1F4B     		ldr	r3, .L12
 132 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 133 000c 42F00102 		orr	r2, r2, #1
 134 0010 1A70     		strb	r2, [r3]
 153:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG |= ADC_SAR_1_STBY_PWR_SAR_EN;
 135              		.loc 1 153 0
 136 0012 1033     		adds	r3, r3, #16
 137 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 138 0016 42F00102 		orr	r2, r2, #1
 139 001a 1A70     		strb	r2, [r3]
 157:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG |= ADC_SAR_1_ACT_PWR_CLK_EN;
 140              		.loc 1 157 0
 141 001c 193B     		subs	r3, r3, #25
 142 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 143 0020 42F00202 		orr	r2, r2, #2
 144 0024 1A70     		strb	r2, [r3]
 158:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 145              		.loc 1 158 0
 146 0026 1033     		adds	r3, r3, #16
 147 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 148 002a 42F00202 		orr	r2, r2, #2
 149 002e 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR3_REG;
 150              		.loc 1 162 0
 151 0030 03F5AA53 		add	r3, r3, #5440
 152 0034 1133     		adds	r3, r3, #17
 153 0036 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 154              	.LVL11:
 169:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg |= ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 155              		.loc 1 169 0
 156 0038 42F00302 		orr	r2, r2, #3
 157              	.LVL12:
 171:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR3_REG = tmpReg;
 158              		.loc 1 171 0
 159 003c 1A70     		strb	r2, [r3]
 182:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_VREF;            /* S3 + S4 */
 160              		.loc 1 182 0
 161 003e 1822     		movs	r2, #24
 162              	.LVL13:
 163 0040 0333     		adds	r3, r3, #3
 164 0042 1A70     		strb	r2, [r3]
 192:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_DLY_INC;
 165              		.loc 1 192 0
 166 0044 013B     		subs	r3, r3, #1
 167 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 168 0048 42F04002 		orr	r2, r2, #64
 169 004c 1A70     		strb	r2, [r3]
 202:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 170              		.loc 1 202 0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 16


 171 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 172 0050 02F0FC02 		and	r2, r2, #252
 173 0054 1A70     		strb	r2, [r3]
 206:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_1_DEFAULT_POWER << ADC_SAR_1_SAR_POWER_SHIFT)
 174              		.loc 1 206 0
 175 0056 C822     		movs	r2, #200
 176 0058 053B     		subs	r3, r3, #5
 177 005a 1A70     		strb	r2, [r3]
 218:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_TR0_REG = ADC_SAR_1_SAR_CAP_TRIM_2;
 178              		.loc 1 218 0
 179 005c 0222     		movs	r2, #2
 180 005e A3F59753 		sub	r3, r3, #4832
 181 0062 0C3B     		subs	r3, r3, #12
 182 0064 1A70     		strb	r2, [r3]
 221:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CLK_REG |= ADC_SAR_1_SAR_MX_CLK_EN;
 183              		.loc 1 221 0
 184 0066 03F5A853 		add	r3, r3, #5376
 185 006a 1333     		adds	r3, r3, #19
 186 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 187 006e 42F00802 		orr	r2, r2, #8
 188 0072 1A70     		strb	r2, [r3]
 223:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 189              		.loc 1 223 0
 190 0074 0A20     		movs	r0, #10
 191              	.LVL14:
 192 0076 FFF7FEFF 		bl	CyDelayUs
 193              	.LVL15:
 227:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntClearPending(ADC_SAR_1_INTC_NUMBER);
 194              		.loc 1 227 0
 195 007a 0122     		movs	r2, #1
 196 007c 034B     		ldr	r3, .L12+4
 197 007e 1A60     		str	r2, [r3]
 230:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 198              		.loc 1 230 0
 199 0080 2046     		mov	r0, r4
 200 0082 FFF7FEFF 		bl	CyExitCriticalSection
 201              	.LVL16:
 202 0086 10BD     		pop	{r4, pc}
 203              	.LVL17:
 204              	.L13:
 205              		.align	2
 206              	.L12:
 207 0088 AB430040 		.word	1073759147
 208 008c 80E200E0 		.word	-536812928
 209              		.cfi_endproc
 210              	.LFE2:
 211              		.size	ADC_SAR_1_Enable, .-ADC_SAR_1_Enable
 212              		.section	.text.ADC_SAR_1_Stop,"ax",%progbits
 213              		.align	2
 214              		.global	ADC_SAR_1_Stop
 215              		.thumb
 216              		.thumb_func
 217              		.type	ADC_SAR_1_Stop, %function
 218              	ADC_SAR_1_Stop:
 219              	.LFB3:
 249:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 220              		.loc 1 249 0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 17


 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 08B5     		push	{r3, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 3, -8
 227              		.cfi_offset 14, -4
 251:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 228              		.loc 1 251 0
 229 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 230              	.LVL18:
 254:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 231              		.loc 1 254 0
 232 0006 0F4B     		ldr	r3, .L15
 233 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 234 000a 02F0FE02 		and	r2, r2, #254
 235 000e 1A70     		strb	r2, [r3]
 256:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_ACT_PWR_SAR_EN;
 236              		.loc 1 256 0
 237 0010 A3F5AA53 		sub	r3, r3, #5440
 238 0014 153B     		subs	r3, r3, #21
 239 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 240 0018 02F0FE02 		and	r2, r2, #254
 241 001c 1A70     		strb	r2, [r3]
 258:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_STBY_PWR_SAR_EN;
 242              		.loc 1 258 0
 243 001e 1033     		adds	r3, r3, #16
 244 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 245 0022 02F0FE02 		and	r2, r2, #254
 246 0026 1A70     		strb	r2, [r3]
 262:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_ACT_PWR_CLK_EN;
 247              		.loc 1 262 0
 248 0028 193B     		subs	r3, r3, #25
 249 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 250 002c 02F0FD02 		and	r2, r2, #253
 251 0030 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 252              		.loc 1 263 0
 253 0032 1033     		adds	r3, r3, #16
 254 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 255 0036 02F0FD02 		and	r2, r2, #253
 256 003a 1A70     		strb	r2, [r3]
 266:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 257              		.loc 1 266 0
 258 003c FFF7FEFF 		bl	CyExitCriticalSection
 259              	.LVL19:
 260 0040 08BD     		pop	{r3, pc}
 261              	.L16:
 262 0042 00BF     		.align	2
 263              	.L15:
 264 0044 00590040 		.word	1073764608
 265              		.cfi_endproc
 266              	.LFE3:
 267              		.size	ADC_SAR_1_Stop, .-ADC_SAR_1_Stop
 268              		.section	.text.ADC_SAR_1_SetPower,"ax",%progbits
 269              		.align	2
 270              		.global	ADC_SAR_1_SetPower
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 18


 271              		.thumb
 272              		.thumb_func
 273              		.type	ADC_SAR_1_SetPower, %function
 274              	ADC_SAR_1_SetPower:
 275              	.LFB4:
 291:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 276              		.loc 1 291 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281              	.LVL20:
 295:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     power &= ADC_SAR_1_SAR_API_POWER_MASK;
 282              		.loc 1 295 0
 283 0000 00F00300 		and	r0, r0, #3
 284              	.LVL21:
 298:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR0_REG & (uint8)~ADC_SAR_1_SAR_POWER_MASK;
 285              		.loc 1 298 0
 286 0004 034B     		ldr	r3, .L18
 287 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 288 0008 02F03F02 		and	r2, r2, #63
 289              	.LVL22:
 299:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
 290              		.loc 1 299 0
 291 000c 42EA8010 		orr	r0, r2, r0, lsl #6
 292              	.LVL23:
 300:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 293              		.loc 1 300 0
 294 0010 1870     		strb	r0, [r3]
 295 0012 7047     		bx	lr
 296              	.L19:
 297              		.align	2
 298              	.L18:
 299 0014 00590040 		.word	1073764608
 300              		.cfi_endproc
 301              	.LFE4:
 302              		.size	ADC_SAR_1_SetPower, .-ADC_SAR_1_SetPower
 303              		.section	.text.ADC_SAR_1_SetResolution,"ax",%progbits
 304              		.align	2
 305              		.global	ADC_SAR_1_SetResolution
 306              		.thumb
 307              		.thumb_func
 308              		.type	ADC_SAR_1_SetResolution, %function
 309              	ADC_SAR_1_SetResolution:
 310              	.LFB5:
 341:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 311              		.loc 1 341 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              	.LVL24:
 316 0000 10B5     		push	{r4, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 4, -8
 319              		.cfi_offset 14, -4
 320 0002 0446     		mov	r4, r0
 345:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 19


 321              		.loc 1 345 0
 322 0004 0A28     		cmp	r0, #10
 323 0006 0DD0     		beq	.L25
 324 0008 0C28     		cmp	r0, #12
 325 000a 02D0     		beq	.L23
 326 000c 0828     		cmp	r0, #8
 327 000e 04D1     		bne	.L26
 328 0010 01E0     		b	.L24
 329              	.L23:
 348:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 330              		.loc 1 348 0
 331 0012 C222     		movs	r2, #194
 332 0014 07E0     		b	.L22
 333              	.L24:
 334              	.LVL25:
 354:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_8BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 335              		.loc 1 354 0
 336 0016 4222     		movs	r2, #66
 355:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 337              		.loc 1 355 0
 338 0018 05E0     		b	.L22
 339              	.LVL26:
 340              	.L26:
 359:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 341              		.loc 1 359 0
 342 001a 0020     		movs	r0, #0
 343              	.LVL27:
 344 001c FFF7FEFF 		bl	CyHalt
 345              	.LVL28:
 357:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 346              		.loc 1 357 0
 347 0020 C222     		movs	r2, #194
 348 0022 00E0     		b	.L22
 349              	.LVL29:
 350              	.L25:
 351:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_10BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 351              		.loc 1 351 0
 352 0024 8222     		movs	r2, #130
 353              	.LVL30:
 354              	.L22:
 362:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR2_REG = tmpReg;
 355              		.loc 1 362 0
 356 0026 034B     		ldr	r3, .L27
 357 0028 1A70     		strb	r2, [r3]
 365:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_CalcGain(resolution);
 358              		.loc 1 365 0
 359 002a 2046     		mov	r0, r4
 360 002c FFF7FEFF 		bl	ADC_SAR_1_CalcGain
 361              	.LVL31:
 362 0030 10BD     		pop	{r4, pc}
 363              	.L28:
 364 0032 00BF     		.align	2
 365              	.L27:
 366 0034 02590040 		.word	1073764610
 367              		.cfi_endproc
 368              	.LFE5:
 369              		.size	ADC_SAR_1_SetResolution, .-ADC_SAR_1_SetResolution
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 20


 370              		.section	.text.ADC_SAR_1_Init,"ax",%progbits
 371              		.align	2
 372              		.global	ADC_SAR_1_Init
 373              		.thumb
 374              		.thumb_func
 375              		.type	ADC_SAR_1_Init, %function
 376              	ADC_SAR_1_Init:
 377              	.LFB1:
 107:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 378              		.loc 1 107 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382 0000 08B5     		push	{r3, lr}
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 3, -8
 385              		.cfi_offset 14, -4
 111:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_theACLK_SetMode(CYCLK_DUTY);
 386              		.loc 1 111 0
 387 0002 1020     		movs	r0, #16
 388 0004 FFF7FEFF 		bl	ADC_SAR_1_theACLK_SetModeRegister
 389              	.LVL32:
 116:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntSetPriority(ADC_SAR_1_INTC_NUMBER, ADC_SAR_1_INTC_PRIOR_NUMBER);
 390              		.loc 1 116 0
 391 0008 0020     		movs	r0, #0
 392 000a 0721     		movs	r1, #7
 393 000c FFF7FEFF 		bl	CyIntSetPriority
 394              	.LVL33:
 117:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 395              		.loc 1 117 0
 396 0010 0020     		movs	r0, #0
 397 0012 0749     		ldr	r1, .L30
 398 0014 FFF7FEFF 		bl	CyIntSetVector
 399              	.LVL34:
 121:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR1_REG |= ADC_SAR_1_SAR_IRQ_MASK_EN | ADC_SAR_1_SAR_IRQ_MODE_EDGE;
 400              		.loc 1 121 0
 401 0018 064B     		ldr	r3, .L30+4
 402 001a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 403 001c 42F00602 		orr	r2, r2, #6
 404 0020 1A70     		strb	r2, [r3]
 124:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SetResolution(ADC_SAR_1_DEFAULT_RESOLUTION);
 405              		.loc 1 124 0
 406 0022 0C20     		movs	r0, #12
 407 0024 FFF7FEFF 		bl	ADC_SAR_1_SetResolution
 408              	.LVL35:
 125:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 409              		.loc 1 125 0
 410 0028 0022     		movs	r2, #0
 411 002a 034B     		ldr	r3, .L30+8
 412 002c 1A80     		strh	r2, [r3]	@ movhi
 413 002e 08BD     		pop	{r3, pc}
 414              	.L31:
 415              		.align	2
 416              	.L30:
 417 0030 00000000 		.word	ADC_SAR_1_ISR
 418 0034 01590040 		.word	1073764609
 419 0038 00000000 		.word	ADC_SAR_1_offset
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 21


 420              		.cfi_endproc
 421              	.LFE1:
 422              		.size	ADC_SAR_1_Init, .-ADC_SAR_1_Init
 423              		.section	.text.ADC_SAR_1_Start,"ax",%progbits
 424              		.align	2
 425              		.global	ADC_SAR_1_Start
 426              		.thumb
 427              		.thumb_func
 428              		.type	ADC_SAR_1_Start, %function
 429              	ADC_SAR_1_Start:
 430              	.LFB0:
  75:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 431              		.loc 1 75 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435 0000 08B5     		push	{r3, lr}
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 3, -8
 438              		.cfi_offset 14, -4
  78:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_initVar == 0u)
 439              		.loc 1 78 0
 440 0002 054B     		ldr	r3, .L34
 441 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 442 0006 23B9     		cbnz	r3, .L33
  80:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_Init();
 443              		.loc 1 80 0
 444 0008 FFF7FEFF 		bl	ADC_SAR_1_Init
 445              	.LVL36:
  81:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
 446              		.loc 1 81 0
 447 000c 0122     		movs	r2, #1
 448 000e 024B     		ldr	r3, .L34
 449 0010 1A70     		strb	r2, [r3]
 450              	.L33:
  83:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_Enable();
 451              		.loc 1 83 0
 452 0012 FFF7FEFF 		bl	ADC_SAR_1_Enable
 453              	.LVL37:
 454 0016 08BD     		pop	{r3, pc}
 455              	.L35:
 456              		.align	2
 457              	.L34:
 458 0018 00000000 		.word	.LANCHOR0
 459              		.cfi_endproc
 460              	.LFE0:
 461              		.size	ADC_SAR_1_Start, .-ADC_SAR_1_Start
 462              		.section	.text.ADC_SAR_1_StartConvert,"ax",%progbits
 463              		.align	2
 464              		.global	ADC_SAR_1_StartConvert
 465              		.thumb
 466              		.thumb_func
 467              		.type	ADC_SAR_1_StartConvert, %function
 468              	ADC_SAR_1_StartConvert:
 469              	.LFB6:
 402:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 470              		.loc 1 402 0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 22


 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 408:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_SOF_START_CONV;
 475              		.loc 1 408 0
 476 0000 024B     		ldr	r3, .L37
 477 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 478 0004 42F00102 		orr	r2, r2, #1
 479 0008 1A70     		strb	r2, [r3]
 480 000a 7047     		bx	lr
 481              	.L38:
 482              		.align	2
 483              	.L37:
 484 000c 00590040 		.word	1073764608
 485              		.cfi_endproc
 486              	.LFE6:
 487              		.size	ADC_SAR_1_StartConvert, .-ADC_SAR_1_StartConvert
 488              		.section	.text.ADC_SAR_1_StopConvert,"ax",%progbits
 489              		.align	2
 490              		.global	ADC_SAR_1_StopConvert
 491              		.thumb
 492              		.thumb_func
 493              		.type	ADC_SAR_1_StopConvert, %function
 494              	ADC_SAR_1_StopConvert:
 495              	.LFB7:
 436:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 496              		.loc 1 436 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 438:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 501              		.loc 1 438 0
 502 0000 024B     		ldr	r3, .L40
 503 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 504 0004 02F0FE02 		and	r2, r2, #254
 505 0008 1A70     		strb	r2, [r3]
 506 000a 7047     		bx	lr
 507              	.L41:
 508              		.align	2
 509              	.L40:
 510 000c 00590040 		.word	1073764608
 511              		.cfi_endproc
 512              	.LFE7:
 513              		.size	ADC_SAR_1_StopConvert, .-ADC_SAR_1_StopConvert
 514              		.section	.text.ADC_SAR_1_IsEndConversion,"ax",%progbits
 515              		.align	2
 516              		.global	ADC_SAR_1_IsEndConversion
 517              		.thumb
 518              		.thumb_func
 519              		.type	ADC_SAR_1_IsEndConversion, %function
 520              	ADC_SAR_1_IsEndConversion:
 521              	.LFB8:
 476:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 522              		.loc 1 476 0
 523              		.cfi_startproc
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 23


 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              	.LVL38:
 527 0000 10B5     		push	{r4, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 481:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         status = ADC_SAR_1_SAR_CSR1_REG & ADC_SAR_1_SAR_EOF_1;
 531              		.loc 1 481 0
 532 0002 074A     		ldr	r2, .L47
 533              	.L44:
 481:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         status = ADC_SAR_1_SAR_CSR1_REG & ADC_SAR_1_SAR_EOF_1;
 534              		.loc 1 481 0 is_stmt 0 discriminator 1
 535 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 536              	.LVL39:
 482:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 537              		.loc 1 482 0 is_stmt 1 discriminator 1
 538 0006 13F00104 		ands	r4, r3, #1
 539 000a 01D1     		bne	.L43
 540 000c 0028     		cmp	r0, #0
 541 000e F9D0     		beq	.L44
 542              	.L43:
 484:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(status == ADC_SAR_1_SAR_EOF_1)
 543              		.loc 1 484 0
 544 0010 24B1     		cbz	r4, .L45
 487:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(1u);
 545              		.loc 1 487 0
 546 0012 0120     		movs	r0, #1
 547              	.LVL40:
 548 0014 FFF7FEFF 		bl	CyDelayUs
 549              	.LVL41:
 489:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CY_GET_REG8(ADC_SAR_1_SAR_CSR1_PTR);
 550              		.loc 1 489 0
 551 0018 014B     		ldr	r3, .L47
 552 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 553              	.L45:
 493:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 554              		.loc 1 493 0
 555 001c 2046     		mov	r0, r4
 556 001e 10BD     		pop	{r4, pc}
 557              	.L48:
 558              		.align	2
 559              	.L47:
 560 0020 01590040 		.word	1073764609
 561              		.cfi_endproc
 562              	.LFE8:
 563              		.size	ADC_SAR_1_IsEndConversion, .-ADC_SAR_1_IsEndConversion
 564              		.section	.text.ADC_SAR_1_GetResult8,"ax",%progbits
 565              		.align	2
 566              		.global	ADC_SAR_1_GetResult8
 567              		.thumb
 568              		.thumb_func
 569              		.type	ADC_SAR_1_GetResult8, %function
 570              	ADC_SAR_1_GetResult8:
 571              	.LFB9:
 521:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 572              		.loc 1 521 0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 24


 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 522:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 577              		.loc 1 522 0
 578 0000 034B     		ldr	r3, .L50
 579 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 580 0004 034B     		ldr	r3, .L50+4
 581 0006 1B88     		ldrh	r3, [r3]
 582 0008 C01A     		subs	r0, r0, r3
 523:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 583              		.loc 1 523 0
 584 000a 40B2     		sxtb	r0, r0
 585 000c 7047     		bx	lr
 586              	.L51:
 587 000e 00BF     		.align	2
 588              	.L50:
 589 0010 A05B0040 		.word	1073765280
 590 0014 00000000 		.word	ADC_SAR_1_shift
 591              		.cfi_endproc
 592              	.LFE9:
 593              		.size	ADC_SAR_1_GetResult8, .-ADC_SAR_1_GetResult8
 594              		.section	.text.ADC_SAR_1_GetResult16,"ax",%progbits
 595              		.align	2
 596              		.global	ADC_SAR_1_GetResult16
 597              		.thumb
 598              		.thumb_func
 599              		.type	ADC_SAR_1_GetResult16, %function
 600              	ADC_SAR_1_GetResult16:
 601              	.LFB10:
 551:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 602              		.loc 1 551 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 554:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     res = CY_GET_REG16(ADC_SAR_1_SAR_WRK_PTR);
 607              		.loc 1 554 0
 608 0000 034B     		ldr	r3, .L53
 609 0002 1888     		ldrh	r0, [r3]
 610              	.LVL42:
 556:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int16)res - ADC_SAR_1_shift );
 611              		.loc 1 556 0
 612 0004 034B     		ldr	r3, .L53+4
 613 0006 1B88     		ldrh	r3, [r3]
 614 0008 C01A     		subs	r0, r0, r3
 615              	.LVL43:
 557:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 616              		.loc 1 557 0
 617 000a 00B2     		sxth	r0, r0
 618 000c 7047     		bx	lr
 619              	.L54:
 620 000e 00BF     		.align	2
 621              	.L53:
 622 0010 A05B0040 		.word	1073765280
 623 0014 00000000 		.word	ADC_SAR_1_shift
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 25


 624              		.cfi_endproc
 625              	.LFE10:
 626              		.size	ADC_SAR_1_GetResult16, .-ADC_SAR_1_GetResult16
 627              		.section	.text.ADC_SAR_1_SetOffset,"ax",%progbits
 628              		.align	2
 629              		.global	ADC_SAR_1_SetOffset
 630              		.thumb
 631              		.thumb_func
 632              		.type	ADC_SAR_1_SetOffset, %function
 633              	ADC_SAR_1_SetOffset:
 634              	.LFB11:
 586:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 635              		.loc 1 586 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640              	.LVL44:
 587:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 641              		.loc 1 587 0
 642 0000 014B     		ldr	r3, .L56
 643 0002 1880     		strh	r0, [r3]	@ movhi
 644 0004 7047     		bx	lr
 645              	.L57:
 646 0006 00BF     		.align	2
 647              	.L56:
 648 0008 00000000 		.word	ADC_SAR_1_offset
 649              		.cfi_endproc
 650              	.LFE11:
 651              		.size	ADC_SAR_1_SetOffset, .-ADC_SAR_1_SetOffset
 652              		.section	.text.ADC_SAR_1_SetGain,"ax",%progbits
 653              		.align	2
 654              		.global	ADC_SAR_1_SetGain
 655              		.thumb
 656              		.thumb_func
 657              		.type	ADC_SAR_1_SetGain, %function
 658              	ADC_SAR_1_SetGain:
 659              	.LFB13:
 667:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 668:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 669:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 670:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 671:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetGain
 673:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 675:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 676:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 678:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 680:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 681:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 682:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcGain counts per volt
 683:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 684:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 685:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 26


 686:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 687:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 688:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 689:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 690:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 691:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 692:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetGain(int16 adcGain)
 693:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 660              		.loc 1 693 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665              	.LVL45:
 694:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (int32)adcGain * 10;
 666              		.loc 1 694 0
 667 0000 00EB8000 		add	r0, r0, r0, lsl #2
 668              	.LVL46:
 669 0004 4000     		lsls	r0, r0, #1
 670 0006 014B     		ldr	r3, .L59
 671 0008 1860     		str	r0, [r3]
 672 000a 7047     		bx	lr
 673              	.L60:
 674              		.align	2
 675              	.L59:
 676 000c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 677              		.cfi_endproc
 678              	.LFE13:
 679              		.size	ADC_SAR_1_SetGain, .-ADC_SAR_1_SetGain
 680              		.section	.text.ADC_SAR_1_SetScaledGain,"ax",%progbits
 681              		.align	2
 682              		.global	ADC_SAR_1_SetScaledGain
 683              		.thumb
 684              		.thumb_func
 685              		.type	ADC_SAR_1_SetScaledGain, %function
 686              	ADC_SAR_1_SetScaledGain:
 687              	.LFB14:
 695:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 696:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 697:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 698:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetScaledGain
 700:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 701:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 702:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 703:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 705:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 707:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 708:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 709:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 adcGain  counts per 10 volt
 710:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 711:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 712:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 713:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 714:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 27


 715:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 716:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 717:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 718:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 719:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetScaledGain(int32 adcGain)
 720:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 688              		.loc 1 720 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693              	.LVL47:
 721:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = adcGain;
 694              		.loc 1 721 0
 695 0000 014B     		ldr	r3, .L62
 696 0002 1860     		str	r0, [r3]
 697 0004 7047     		bx	lr
 698              	.L63:
 699 0006 00BF     		.align	2
 700              	.L62:
 701 0008 00000000 		.word	ADC_SAR_1_countsPer10Volt
 702              		.cfi_endproc
 703              	.LFE14:
 704              		.size	ADC_SAR_1_SetScaledGain, .-ADC_SAR_1_SetScaledGain
 705              		.section	.text.ADC_SAR_1_CountsTo_mVolts,"ax",%progbits
 706              		.align	2
 707              		.global	ADC_SAR_1_CountsTo_mVolts
 708              		.thumb
 709              		.thumb_func
 710              		.type	ADC_SAR_1_CountsTo_mVolts, %function
 711              	ADC_SAR_1_CountsTo_mVolts:
 712              	.LFB15:
 722:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 723:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 724:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 725:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 726:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_mVolts
 727:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 728:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 729:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 730:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 732:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 733:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 735:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 736:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 Result in mVolts
 737:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 738:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 739:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 740:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable used.
 741:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 742:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_CountsTo_mVolts(int16 adcCounts)
 744:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 713              		.loc 1 744 0
 714              		.cfi_startproc
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 28


 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 718              	.LVL48:
 745:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int16 mVolts;
 746:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 747:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 748:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 719              		.loc 1 748 0
 720 0000 114B     		ldr	r3, .L69
 721 0002 1B88     		ldrh	r3, [r3]
 722 0004 9BB2     		uxth	r3, r3
 723 0006 33B1     		cbz	r3, .L65
 749:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 750:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 724              		.loc 1 750 0
 725 0008 0F4B     		ldr	r3, .L69
 726 000a 1B88     		ldrh	r3, [r3]
 727 000c 1BB2     		sxth	r3, r3
 728 000e 03EB8303 		add	r3, r3, r3, lsl #2
 729 0012 5B00     		lsls	r3, r3, #1
 730              	.LVL49:
 731 0014 01E0     		b	.L66
 732              	.LVL50:
 733              	.L65:
 751:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 752:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 753:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 754:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 734              		.loc 1 754 0
 735 0016 0D4B     		ldr	r3, .L69+4
 736 0018 1B68     		ldr	r3, [r3]
 737              	.LVL51:
 738              	.L66:
 755:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 756:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 757:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 758:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 739              		.loc 1 758 0
 740 001a 0D4A     		ldr	r2, .L69+8
 741 001c 1288     		ldrh	r2, [r2]
 742 001e 801A     		subs	r0, r0, r2
 743              	.LVL52:
 744 0020 00B2     		sxth	r0, r0
 745              	.LVL53:
 759:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Convert to millivolts with rounding */
 760:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_1_10MV_COUNTS ) + ( (adcCounts > 0) ?
 746              		.loc 1 760 0
 747 0022 42F21071 		movw	r1, #10000
 748 0026 01FB00F1 		mul	r1, r1, r0
 761:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 749              		.loc 1 761 0
 750 002a 0028     		cmp	r0, #0
 751 002c 03DD     		ble	.L67
 752              		.loc 1 761 0 is_stmt 0 discriminator 1
 753 002e 03EBD372 		add	r2, r3, r3, lsr #31
 754 0032 5210     		asrs	r2, r2, #1
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 29


 755 0034 03E0     		b	.L68
 756              	.L67:
 757              		.loc 1 761 0 discriminator 2
 758 0036 03EBD372 		add	r2, r3, r3, lsr #31
 759 003a 5210     		asrs	r2, r2, #1
 760 003c 5242     		negs	r2, r2
 761              	.L68:
 760:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_1_10MV_COUNTS ) + ( (adcCounts > 0) ?
 762              		.loc 1 760 0 is_stmt 1
 763 003e 0A44     		add	r2, r2, r1
 764              		.loc 1 761 0
 765 0040 92FBF3F0 		sdiv	r0, r2, r3
 766              	.LVL54:
 762:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 763:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( mVolts );
 764:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 767              		.loc 1 764 0
 768 0044 00B2     		sxth	r0, r0
 769              	.LVL55:
 770 0046 7047     		bx	lr
 771              	.L70:
 772              		.align	2
 773              	.L69:
 774 0048 00000000 		.word	ADC_SAR_1_countsPerVolt
 775 004c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 776 0050 00000000 		.word	ADC_SAR_1_offset
 777              		.cfi_endproc
 778              	.LFE15:
 779              		.size	ADC_SAR_1_CountsTo_mVolts, .-ADC_SAR_1_CountsTo_mVolts
 780              		.global	__aeabi_ldivmod
 781              		.section	.text.ADC_SAR_1_CountsTo_uVolts,"ax",%progbits
 782              		.align	2
 783              		.global	ADC_SAR_1_CountsTo_uVolts
 784              		.thumb
 785              		.thumb_func
 786              		.type	ADC_SAR_1_CountsTo_uVolts, %function
 787              	ADC_SAR_1_CountsTo_uVolts:
 788              	.LFB16:
 765:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 766:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 767:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 768:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_uVolts
 769:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 771:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 772:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 774:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 775:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 776:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 777:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 778:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 Result in micro Volts
 779:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 780:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 781:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 782:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to uVolts.
 783:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 30


 784:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int32 ADC_SAR_1_CountsTo_uVolts(int16 adcCounts)
 786:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 789              		.loc 1 786 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              	.LVL56:
 794 0000 38B5     		push	{r3, r4, r5, lr}
 795              		.cfi_def_cfa_offset 16
 796              		.cfi_offset 3, -16
 797              		.cfi_offset 4, -12
 798              		.cfi_offset 5, -8
 799              		.cfi_offset 14, -4
 787:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 788:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int64 uVolts;
 789:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 790:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 791:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 800              		.loc 1 791 0
 801 0002 0D4B     		ldr	r3, .L74
 802 0004 1B88     		ldrh	r3, [r3]
 803 0006 9BB2     		uxth	r3, r3
 804 0008 33B1     		cbz	r3, .L72
 792:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 793:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 805              		.loc 1 793 0
 806 000a 0B4B     		ldr	r3, .L74
 807 000c 1A88     		ldrh	r2, [r3]
 808 000e 12B2     		sxth	r2, r2
 809 0010 02EB8202 		add	r2, r2, r2, lsl #2
 810 0014 5200     		lsls	r2, r2, #1
 811              	.LVL57:
 812 0016 01E0     		b	.L73
 813              	.LVL58:
 814              	.L72:
 794:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 795:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 796:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 797:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 815              		.loc 1 797 0
 816 0018 084B     		ldr	r3, .L74+4
 817 001a 1A68     		ldr	r2, [r3]
 818              	.LVL59:
 819              	.L73:
 798:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 799:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 800:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 801:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 820              		.loc 1 801 0
 821 001c 084B     		ldr	r3, .L74+8
 822 001e 1B88     		ldrh	r3, [r3]
 823              	.LVL60:
 802:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 805:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_1_10UV_COUNTS ) / countsPer10Volt);
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 31


 824              		.loc 1 805 0
 825 0020 C41A     		subs	r4, r0, r3
 826 0022 24B2     		sxth	r4, r4
 827 0024 E517     		asrs	r5, r4, #31
 828 0026 074B     		ldr	r3, .L74+12
 829              	.LVL61:
 830 0028 A4FB0301 		umull	r0, r1, r4, r3
 831 002c 03FB0511 		mla	r1, r3, r5, r1
 832 0030 D317     		asrs	r3, r2, #31
 833 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 834              	.LVL62:
 806:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 807:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( uVolts );
 808:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 835              		.loc 1 808 0
 836 0036 38BD     		pop	{r3, r4, r5, pc}
 837              	.L75:
 838              		.align	2
 839              	.L74:
 840 0038 00000000 		.word	ADC_SAR_1_countsPerVolt
 841 003c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 842 0040 00000000 		.word	ADC_SAR_1_offset
 843 0044 80969800 		.word	10000000
 844              		.cfi_endproc
 845              	.LFE16:
 846              		.size	ADC_SAR_1_CountsTo_uVolts, .-ADC_SAR_1_CountsTo_uVolts
 847              		.global	__aeabi_i2f
 848              		.global	__aeabi_fmul
 849              		.global	__aeabi_fdiv
 850              		.section	.text.ADC_SAR_1_CountsTo_Volts,"ax",%progbits
 851              		.align	2
 852              		.global	ADC_SAR_1_CountsTo_Volts
 853              		.thumb
 854              		.thumb_func
 855              		.type	ADC_SAR_1_CountsTo_Volts, %function
 856              	ADC_SAR_1_CountsTo_Volts:
 857              	.LFB17:
 809:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 810:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 811:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_Volts
 813:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 814:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 815:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 816:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to volts as a floating-point number.
 817:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 818:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 819:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 820:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 821:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 822:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  float Result in Volts
 823:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 824:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 825:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 826:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to Volts.
 827:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 828:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 32


 829:.\Generated_Source\PSoC5/ADC_SAR_1.c **** float32 ADC_SAR_1_CountsTo_Volts(int16 adcCounts)
 830:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 858              		.loc 1 830 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              	.LVL63:
 863 0000 38B5     		push	{r3, r4, r5, lr}
 864              		.cfi_def_cfa_offset 16
 865              		.cfi_offset 3, -16
 866              		.cfi_offset 4, -12
 867              		.cfi_offset 5, -8
 868              		.cfi_offset 14, -4
 831:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     float32 volts;
 832:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 833:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 834:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 869              		.loc 1 834 0
 870 0002 0F4B     		ldr	r3, .L79
 871 0004 1B88     		ldrh	r3, [r3]
 872 0006 9BB2     		uxth	r3, r3
 873 0008 33B1     		cbz	r3, .L77
 835:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 836:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 874              		.loc 1 836 0
 875 000a 0D4B     		ldr	r3, .L79
 876 000c 1D88     		ldrh	r5, [r3]
 877 000e 2DB2     		sxth	r5, r5
 878 0010 05EB8505 		add	r5, r5, r5, lsl #2
 879 0014 6D00     		lsls	r5, r5, #1
 880              	.LVL64:
 881 0016 01E0     		b	.L78
 882              	.LVL65:
 883              	.L77:
 837:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 838:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 839:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 840:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 884              		.loc 1 840 0
 885 0018 0A4B     		ldr	r3, .L79+4
 886 001a 1D68     		ldr	r5, [r3]
 887              	.LVL66:
 888              	.L78:
 841:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 842:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 843:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 844:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 889              		.loc 1 844 0
 890 001c 0A4B     		ldr	r3, .L79+8
 891 001e 1B88     		ldrh	r3, [r3]
 892 0020 C01A     		subs	r0, r0, r3
 893              	.LVL67:
 845:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 846:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     volts = ((float32)adcCounts * ADC_SAR_1_10V_COUNTS) / (float32)countsPer10Volt;
 894              		.loc 1 846 0
 895 0022 00B2     		sxth	r0, r0
 896              	.LVL68:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 33


 897 0024 FFF7FEFF 		bl	__aeabi_i2f
 898              	.LVL69:
 899 0028 0849     		ldr	r1, .L79+12
 900 002a FFF7FEFF 		bl	__aeabi_fmul
 901              	.LVL70:
 902 002e 0446     		mov	r4, r0
 903 0030 2846     		mov	r0, r5
 904 0032 FFF7FEFF 		bl	__aeabi_i2f
 905              	.LVL71:
 906 0036 0146     		mov	r1, r0
 907 0038 2046     		mov	r0, r4
 908 003a FFF7FEFF 		bl	__aeabi_fdiv
 909              	.LVL72:
 847:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 848:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( volts );
 849:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 910              		.loc 1 849 0
 911 003e 38BD     		pop	{r3, r4, r5, pc}
 912              	.LVL73:
 913              	.L80:
 914              		.align	2
 915              	.L79:
 916 0040 00000000 		.word	ADC_SAR_1_countsPerVolt
 917 0044 00000000 		.word	ADC_SAR_1_countsPer10Volt
 918 0048 00000000 		.word	ADC_SAR_1_offset
 919 004c 00002041 		.word	1092616192
 920              		.cfi_endproc
 921              	.LFE17:
 922              		.size	ADC_SAR_1_CountsTo_Volts, .-ADC_SAR_1_CountsTo_Volts
 923              		.comm	ADC_SAR_1_shift,2,2
 924              		.comm	ADC_SAR_1_countsPer10Volt,4,4
 925              		.comm	ADC_SAR_1_countsPerVolt,2,2
 926              		.comm	ADC_SAR_1_offset,2,2
 927              		.global	ADC_SAR_1_initVar
 928              		.bss
 929              		.set	.LANCHOR0,. + 0
 930              		.type	ADC_SAR_1_initVar, %object
 931              		.size	ADC_SAR_1_initVar, 1
 932              	ADC_SAR_1_initVar:
 933 0000 00       		.space	1
 934              		.text
 935              	.Letext0:
 936              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 937              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 938              		.file 4 ".\\Generated_Source\\PSoC5\\ADC_SAR_1_theACLK.h"
 939              		.section	.debug_info,"",%progbits
 940              	.Ldebug_info0:
 941 0000 00060000 		.4byte	0x600
 942 0004 0400     		.2byte	0x4
 943 0006 00000000 		.4byte	.Ldebug_abbrev0
 944 000a 04       		.byte	0x4
 945 000b 01       		.uleb128 0x1
 946 000c 32000000 		.4byte	.LASF66
 947 0010 01       		.byte	0x1
 948 0011 C8000000 		.4byte	.LASF67
 949 0015 37030000 		.4byte	.LASF68
 950 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 34


 951 001d 00000000 		.4byte	0
 952 0021 00000000 		.4byte	.Ldebug_line0
 953 0025 02       		.uleb128 0x2
 954 0026 04       		.byte	0x4
 955 0027 05       		.byte	0x5
 956 0028 696E7400 		.ascii	"int\000"
 957 002c 03       		.uleb128 0x3
 958 002d 04       		.byte	0x4
 959 002e 07       		.byte	0x7
 960 002f 89010000 		.4byte	.LASF0
 961 0033 03       		.uleb128 0x3
 962 0034 01       		.byte	0x1
 963 0035 06       		.byte	0x6
 964 0036 12010000 		.4byte	.LASF1
 965 003a 03       		.uleb128 0x3
 966 003b 01       		.byte	0x1
 967 003c 08       		.byte	0x8
 968 003d E2020000 		.4byte	.LASF2
 969 0041 03       		.uleb128 0x3
 970 0042 02       		.byte	0x2
 971 0043 05       		.byte	0x5
 972 0044 14030000 		.4byte	.LASF3
 973 0048 03       		.uleb128 0x3
 974 0049 02       		.byte	0x2
 975 004a 07       		.byte	0x7
 976 004b CC010000 		.4byte	.LASF4
 977 004f 03       		.uleb128 0x3
 978 0050 04       		.byte	0x4
 979 0051 05       		.byte	0x5
 980 0052 24010000 		.4byte	.LASF5
 981 0056 03       		.uleb128 0x3
 982 0057 04       		.byte	0x4
 983 0058 07       		.byte	0x7
 984 0059 9D010000 		.4byte	.LASF6
 985 005d 03       		.uleb128 0x3
 986 005e 08       		.byte	0x8
 987 005f 05       		.byte	0x5
 988 0060 04010000 		.4byte	.LASF7
 989 0064 03       		.uleb128 0x3
 990 0065 08       		.byte	0x8
 991 0066 07       		.byte	0x7
 992 0067 ED000000 		.4byte	.LASF8
 993 006b 03       		.uleb128 0x3
 994 006c 04       		.byte	0x4
 995 006d 07       		.byte	0x7
 996 006e 20020000 		.4byte	.LASF9
 997 0072 04       		.uleb128 0x4
 998 0073 04       		.byte	0x4
 999 0074 78000000 		.4byte	0x78
 1000 0078 05       		.uleb128 0x5
 1001 0079 03       		.uleb128 0x3
 1002 007a 01       		.byte	0x1
 1003 007b 08       		.byte	0x8
 1004 007c BE030000 		.4byte	.LASF10
 1005 0080 06       		.uleb128 0x6
 1006 0081 44010000 		.4byte	.LASF11
 1007 0085 02       		.byte	0x2
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 35


 1008 0086 B4       		.byte	0xb4
 1009 0087 3A000000 		.4byte	0x3a
 1010 008b 06       		.uleb128 0x6
 1011 008c 00000000 		.4byte	.LASF12
 1012 0090 02       		.byte	0x2
 1013 0091 B5       		.byte	0xb5
 1014 0092 48000000 		.4byte	0x48
 1015 0096 06       		.uleb128 0x6
 1016 0097 5B010000 		.4byte	.LASF13
 1017 009b 02       		.byte	0x2
 1018 009c B6       		.byte	0xb6
 1019 009d 56000000 		.4byte	0x56
 1020 00a1 06       		.uleb128 0x6
 1021 00a2 EE010000 		.4byte	.LASF14
 1022 00a6 02       		.byte	0x2
 1023 00a7 B7       		.byte	0xb7
 1024 00a8 33000000 		.4byte	0x33
 1025 00ac 06       		.uleb128 0x6
 1026 00ad 67040000 		.4byte	.LASF15
 1027 00b1 02       		.byte	0x2
 1028 00b2 B8       		.byte	0xb8
 1029 00b3 41000000 		.4byte	0x41
 1030 00b7 06       		.uleb128 0x6
 1031 00b8 1E010000 		.4byte	.LASF16
 1032 00bc 02       		.byte	0x2
 1033 00bd B9       		.byte	0xb9
 1034 00be 4F000000 		.4byte	0x4f
 1035 00c2 06       		.uleb128 0x6
 1036 00c3 18020000 		.4byte	.LASF17
 1037 00c7 02       		.byte	0x2
 1038 00c8 BA       		.byte	0xba
 1039 00c9 CD000000 		.4byte	0xcd
 1040 00cd 03       		.uleb128 0x3
 1041 00ce 04       		.byte	0x4
 1042 00cf 04       		.byte	0x4
 1043 00d0 B8020000 		.4byte	.LASF18
 1044 00d4 03       		.uleb128 0x3
 1045 00d5 08       		.byte	0x8
 1046 00d6 04       		.byte	0x4
 1047 00d7 54010000 		.4byte	.LASF19
 1048 00db 06       		.uleb128 0x6
 1049 00dc 8D020000 		.4byte	.LASF20
 1050 00e0 02       		.byte	0x2
 1051 00e1 BF       		.byte	0xbf
 1052 00e2 5D000000 		.4byte	0x5d
 1053 00e6 07       		.uleb128 0x7
 1054 00e7 D6020000 		.4byte	.LASF21
 1055 00eb 02       		.byte	0x2
 1056 00ec 5E01     		.2byte	0x15e
 1057 00ee F2000000 		.4byte	0xf2
 1058 00f2 08       		.uleb128 0x8
 1059 00f3 80000000 		.4byte	0x80
 1060 00f7 07       		.uleb128 0x7
 1061 00f8 3E010000 		.4byte	.LASF22
 1062 00fc 02       		.byte	0x2
 1063 00fd 5F01     		.2byte	0x15f
 1064 00ff 03010000 		.4byte	0x103
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 36


 1065 0103 08       		.uleb128 0x8
 1066 0104 8B000000 		.4byte	0x8b
 1067 0108 07       		.uleb128 0x7
 1068 0109 FA010000 		.4byte	.LASF23
 1069 010d 02       		.byte	0x2
 1070 010e 6001     		.2byte	0x160
 1071 0110 14010000 		.4byte	0x114
 1072 0114 08       		.uleb128 0x8
 1073 0115 96000000 		.4byte	0x96
 1074 0119 07       		.uleb128 0x7
 1075 011a C3030000 		.4byte	.LASF24
 1076 011e 02       		.byte	0x2
 1077 011f 7001     		.2byte	0x170
 1078 0121 72000000 		.4byte	0x72
 1079 0125 09       		.uleb128 0x9
 1080 0126 B5000000 		.4byte	.LASF69
 1081 012a 01       		.byte	0x1
 1082 012b 6302     		.2byte	0x263
 1083 012d 00000000 		.4byte	.LFB12
 1084 0131 68000000 		.4byte	.LFE12-.LFB12
 1085 0135 01       		.uleb128 0x1
 1086 0136 9C       		.byte	0x9c
 1087 0137 7B010000 		.4byte	0x17b
 1088 013b 0A       		.uleb128 0xa
 1089 013c B3030000 		.4byte	.LASF32
 1090 0140 01       		.byte	0x1
 1091 0141 6302     		.2byte	0x263
 1092 0143 80000000 		.4byte	0x80
 1093 0147 00000000 		.4byte	.LLST0
 1094 014b 0B       		.uleb128 0xb
 1095 014c AE000000 		.4byte	.LASF25
 1096 0150 01       		.byte	0x1
 1097 0151 6502     		.2byte	0x265
 1098 0153 B7000000 		.4byte	0xb7
 1099 0157 3A000000 		.4byte	.LLST1
 1100 015b 0B       		.uleb128 0xb
 1101 015c F0020000 		.4byte	.LASF26
 1102 0160 01       		.byte	0x1
 1103 0161 6902     		.2byte	0x269
 1104 0163 8B000000 		.4byte	0x8b
 1105 0167 67000000 		.4byte	.LLST2
 1106 016b 0C       		.uleb128 0xc
 1107 016c 28000000 		.4byte	.LVL4
 1108 0170 88050000 		.4byte	0x588
 1109 0174 0D       		.uleb128 0xd
 1110 0175 01       		.uleb128 0x1
 1111 0176 50       		.byte	0x50
 1112 0177 01       		.uleb128 0x1
 1113 0178 30       		.byte	0x30
 1114 0179 00       		.byte	0
 1115 017a 00       		.byte	0
 1116 017b 0E       		.uleb128 0xe
 1117 017c 26030000 		.4byte	.LASF29
 1118 0180 01       		.byte	0x1
 1119 0181 8F       		.byte	0x8f
 1120 0182 00000000 		.4byte	.LFB2
 1121 0186 90000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 37


 1122 018a 01       		.uleb128 0x1
 1123 018b 9C       		.byte	0x9c
 1124 018c DB010000 		.4byte	0x1db
 1125 0190 0F       		.uleb128 0xf
 1126 0191 9E040000 		.4byte	.LASF27
 1127 0195 01       		.byte	0x1
 1128 0196 91       		.byte	0x91
 1129 0197 80000000 		.4byte	0x80
 1130 019b 93000000 		.4byte	.LLST3
 1131 019f 0F       		.uleb128 0xf
 1132 01a0 10040000 		.4byte	.LASF28
 1133 01a4 01       		.byte	0x1
 1134 01a5 92       		.byte	0x92
 1135 01a6 80000000 		.4byte	0x80
 1136 01aa B5000000 		.4byte	.LLST4
 1137 01ae 10       		.uleb128 0x10
 1138 01af 06000000 		.4byte	.LVL9
 1139 01b3 99050000 		.4byte	0x599
 1140 01b7 11       		.uleb128 0x11
 1141 01b8 7A000000 		.4byte	.LVL15
 1142 01bc A4050000 		.4byte	0x5a4
 1143 01c0 CA010000 		.4byte	0x1ca
 1144 01c4 0D       		.uleb128 0xd
 1145 01c5 01       		.uleb128 0x1
 1146 01c6 50       		.byte	0x50
 1147 01c7 01       		.uleb128 0x1
 1148 01c8 3A       		.byte	0x3a
 1149 01c9 00       		.byte	0
 1150 01ca 0C       		.uleb128 0xc
 1151 01cb 86000000 		.4byte	.LVL16
 1152 01cf B5050000 		.4byte	0x5b5
 1153 01d3 0D       		.uleb128 0xd
 1154 01d4 01       		.uleb128 0x1
 1155 01d5 50       		.byte	0x50
 1156 01d6 02       		.uleb128 0x2
 1157 01d7 74       		.byte	0x74
 1158 01d8 00       		.sleb128 0
 1159 01d9 00       		.byte	0
 1160 01da 00       		.byte	0
 1161 01db 0E       		.uleb128 0xe
 1162 01dc B5040000 		.4byte	.LASF30
 1163 01e0 01       		.byte	0x1
 1164 01e1 F8       		.byte	0xf8
 1165 01e2 00000000 		.4byte	.LFB3
 1166 01e6 48000000 		.4byte	.LFE3-.LFB3
 1167 01ea 01       		.uleb128 0x1
 1168 01eb 9C       		.byte	0x9c
 1169 01ec 12020000 		.4byte	0x212
 1170 01f0 0F       		.uleb128 0xf
 1171 01f1 10040000 		.4byte	.LASF28
 1172 01f5 01       		.byte	0x1
 1173 01f6 FA       		.byte	0xfa
 1174 01f7 80000000 		.4byte	0x80
 1175 01fb D3000000 		.4byte	.LLST5
 1176 01ff 10       		.uleb128 0x10
 1177 0200 06000000 		.4byte	.LVL18
 1178 0204 99050000 		.4byte	0x599
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 38


 1179 0208 10       		.uleb128 0x10
 1180 0209 40000000 		.4byte	.LVL19
 1181 020d B5050000 		.4byte	0x5b5
 1182 0211 00       		.byte	0
 1183 0212 12       		.uleb128 0x12
 1184 0213 42040000 		.4byte	.LASF31
 1185 0217 01       		.byte	0x1
 1186 0218 2201     		.2byte	0x122
 1187 021a 00000000 		.4byte	.LFB4
 1188 021e 18000000 		.4byte	.LFE4-.LFB4
 1189 0222 01       		.uleb128 0x1
 1190 0223 9C       		.byte	0x9c
 1191 0224 49020000 		.4byte	0x249
 1192 0228 0A       		.uleb128 0xa
 1193 0229 D0020000 		.4byte	.LASF33
 1194 022d 01       		.byte	0x1
 1195 022e 2201     		.2byte	0x122
 1196 0230 80000000 		.4byte	0x80
 1197 0234 E6000000 		.4byte	.LLST6
 1198 0238 0B       		.uleb128 0xb
 1199 0239 9E040000 		.4byte	.LASF27
 1200 023d 01       		.byte	0x1
 1201 023e 2401     		.2byte	0x124
 1202 0240 80000000 		.4byte	0x80
 1203 0244 04010000 		.4byte	.LLST7
 1204 0248 00       		.byte	0
 1205 0249 12       		.uleb128 0x12
 1206 024a 29020000 		.4byte	.LASF34
 1207 024e 01       		.byte	0x1
 1208 024f 5401     		.2byte	0x154
 1209 0251 00000000 		.4byte	.LFB5
 1210 0255 38000000 		.4byte	.LFE5-.LFB5
 1211 0259 01       		.uleb128 0x1
 1212 025a 9C       		.byte	0x9c
 1213 025b A3020000 		.4byte	0x2a3
 1214 025f 0A       		.uleb128 0xa
 1215 0260 B3030000 		.4byte	.LASF32
 1216 0264 01       		.byte	0x1
 1217 0265 5401     		.2byte	0x154
 1218 0267 80000000 		.4byte	0x80
 1219 026b 22010000 		.4byte	.LLST8
 1220 026f 0B       		.uleb128 0xb
 1221 0270 9E040000 		.4byte	.LASF27
 1222 0274 01       		.byte	0x1
 1223 0275 5601     		.2byte	0x156
 1224 0277 80000000 		.4byte	0x80
 1225 027b 5C010000 		.4byte	.LLST9
 1226 027f 11       		.uleb128 0x11
 1227 0280 20000000 		.4byte	.LVL28
 1228 0284 88050000 		.4byte	0x588
 1229 0288 92020000 		.4byte	0x292
 1230 028c 0D       		.uleb128 0xd
 1231 028d 01       		.uleb128 0x1
 1232 028e 50       		.byte	0x50
 1233 028f 01       		.uleb128 0x1
 1234 0290 30       		.byte	0x30
 1235 0291 00       		.byte	0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 39


 1236 0292 0C       		.uleb128 0xc
 1237 0293 30000000 		.4byte	.LVL31
 1238 0297 25010000 		.4byte	0x125
 1239 029b 0D       		.uleb128 0xd
 1240 029c 01       		.uleb128 0x1
 1241 029d 50       		.byte	0x50
 1242 029e 02       		.uleb128 0x2
 1243 029f 74       		.byte	0x74
 1244 02a0 00       		.sleb128 0
 1245 02a1 00       		.byte	0
 1246 02a2 00       		.byte	0
 1247 02a3 0E       		.uleb128 0xe
 1248 02a4 DF010000 		.4byte	.LASF35
 1249 02a8 01       		.byte	0x1
 1250 02a9 6A       		.byte	0x6a
 1251 02aa 00000000 		.4byte	.LFB1
 1252 02ae 3C000000 		.4byte	.LFE1-.LFB1
 1253 02b2 01       		.uleb128 0x1
 1254 02b3 9C       		.byte	0x9c
 1255 02b4 06030000 		.4byte	0x306
 1256 02b8 11       		.uleb128 0x11
 1257 02b9 08000000 		.4byte	.LVL32
 1258 02bd C6050000 		.4byte	0x5c6
 1259 02c1 CB020000 		.4byte	0x2cb
 1260 02c5 0D       		.uleb128 0xd
 1261 02c6 01       		.uleb128 0x1
 1262 02c7 50       		.byte	0x50
 1263 02c8 01       		.uleb128 0x1
 1264 02c9 40       		.byte	0x40
 1265 02ca 00       		.byte	0
 1266 02cb 11       		.uleb128 0x11
 1267 02cc 10000000 		.4byte	.LVL33
 1268 02d0 D7050000 		.4byte	0x5d7
 1269 02d4 E3020000 		.4byte	0x2e3
 1270 02d8 0D       		.uleb128 0xd
 1271 02d9 01       		.uleb128 0x1
 1272 02da 51       		.byte	0x51
 1273 02db 01       		.uleb128 0x1
 1274 02dc 37       		.byte	0x37
 1275 02dd 0D       		.uleb128 0xd
 1276 02de 01       		.uleb128 0x1
 1277 02df 50       		.byte	0x50
 1278 02e0 01       		.uleb128 0x1
 1279 02e1 30       		.byte	0x30
 1280 02e2 00       		.byte	0
 1281 02e3 11       		.uleb128 0x11
 1282 02e4 18000000 		.4byte	.LVL34
 1283 02e8 ED050000 		.4byte	0x5ed
 1284 02ec F6020000 		.4byte	0x2f6
 1285 02f0 0D       		.uleb128 0xd
 1286 02f1 01       		.uleb128 0x1
 1287 02f2 50       		.byte	0x50
 1288 02f3 01       		.uleb128 0x1
 1289 02f4 30       		.byte	0x30
 1290 02f5 00       		.byte	0
 1291 02f6 0C       		.uleb128 0xc
 1292 02f7 28000000 		.4byte	.LVL35
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 40


 1293 02fb 49020000 		.4byte	0x249
 1294 02ff 0D       		.uleb128 0xd
 1295 0300 01       		.uleb128 0x1
 1296 0301 50       		.byte	0x50
 1297 0302 01       		.uleb128 0x1
 1298 0303 3C       		.byte	0x3c
 1299 0304 00       		.byte	0
 1300 0305 00       		.byte	0
 1301 0306 0E       		.uleb128 0xe
 1302 0307 7D020000 		.4byte	.LASF36
 1303 030b 01       		.byte	0x1
 1304 030c 4A       		.byte	0x4a
 1305 030d 00000000 		.4byte	.LFB0
 1306 0311 1C000000 		.4byte	.LFE0-.LFB0
 1307 0315 01       		.uleb128 0x1
 1308 0316 9C       		.byte	0x9c
 1309 0317 2E030000 		.4byte	0x32e
 1310 031b 10       		.uleb128 0x10
 1311 031c 0C000000 		.4byte	.LVL36
 1312 0320 A3020000 		.4byte	0x2a3
 1313 0324 10       		.uleb128 0x10
 1314 0325 16000000 		.4byte	.LVL37
 1315 0329 7B010000 		.4byte	0x17b
 1316 032d 00       		.byte	0
 1317 032e 13       		.uleb128 0x13
 1318 032f 87040000 		.4byte	.LASF37
 1319 0333 01       		.byte	0x1
 1320 0334 9101     		.2byte	0x191
 1321 0336 00000000 		.4byte	.LFB6
 1322 033a 10000000 		.4byte	.LFE6-.LFB6
 1323 033e 01       		.uleb128 0x1
 1324 033f 9C       		.byte	0x9c
 1325 0340 13       		.uleb128 0x13
 1326 0341 F0030000 		.4byte	.LASF38
 1327 0345 01       		.byte	0x1
 1328 0346 B301     		.2byte	0x1b3
 1329 0348 00000000 		.4byte	.LFB7
 1330 034c 10000000 		.4byte	.LFE7-.LFB7
 1331 0350 01       		.uleb128 0x1
 1332 0351 9C       		.byte	0x9c
 1333 0352 14       		.uleb128 0x14
 1334 0353 28040000 		.4byte	.LASF41
 1335 0357 01       		.byte	0x1
 1336 0358 DB01     		.2byte	0x1db
 1337 035a 80000000 		.4byte	0x80
 1338 035e 00000000 		.4byte	.LFB8
 1339 0362 24000000 		.4byte	.LFE8-.LFB8
 1340 0366 01       		.uleb128 0x1
 1341 0367 9C       		.byte	0x9c
 1342 0368 9C030000 		.4byte	0x39c
 1343 036c 0A       		.uleb128 0xa
 1344 036d 81010000 		.4byte	.LASF39
 1345 0371 01       		.byte	0x1
 1346 0372 DB01     		.2byte	0x1db
 1347 0374 80000000 		.4byte	0x80
 1348 0378 89010000 		.4byte	.LLST10
 1349 037c 0B       		.uleb128 0xb
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 41


 1350 037d 21040000 		.4byte	.LASF40
 1351 0381 01       		.byte	0x1
 1352 0382 DD01     		.2byte	0x1dd
 1353 0384 80000000 		.4byte	0x80
 1354 0388 AA010000 		.4byte	.LLST11
 1355 038c 0C       		.uleb128 0xc
 1356 038d 18000000 		.4byte	.LVL41
 1357 0391 A4050000 		.4byte	0x5a4
 1358 0395 0D       		.uleb128 0xd
 1359 0396 01       		.uleb128 0x1
 1360 0397 50       		.byte	0x50
 1361 0398 01       		.uleb128 0x1
 1362 0399 31       		.byte	0x31
 1363 039a 00       		.byte	0
 1364 039b 00       		.byte	0
 1365 039c 15       		.uleb128 0x15
 1366 039d 07000000 		.4byte	.LASF70
 1367 03a1 01       		.byte	0x1
 1368 03a2 0802     		.2byte	0x208
 1369 03a4 A1000000 		.4byte	0xa1
 1370 03a8 00000000 		.4byte	.LFB9
 1371 03ac 18000000 		.4byte	.LFE9-.LFB9
 1372 03b0 01       		.uleb128 0x1
 1373 03b1 9C       		.byte	0x9c
 1374 03b2 14       		.uleb128 0x14
 1375 03b3 9D030000 		.4byte	.LASF42
 1376 03b7 01       		.byte	0x1
 1377 03b8 2602     		.2byte	0x226
 1378 03ba AC000000 		.4byte	0xac
 1379 03be 00000000 		.4byte	.LFB10
 1380 03c2 18000000 		.4byte	.LFE10-.LFB10
 1381 03c6 01       		.uleb128 0x1
 1382 03c7 9C       		.byte	0x9c
 1383 03c8 DD030000 		.4byte	0x3dd
 1384 03cc 16       		.uleb128 0x16
 1385 03cd 72657300 		.ascii	"res\000"
 1386 03d1 01       		.byte	0x1
 1387 03d2 2802     		.2byte	0x228
 1388 03d4 8B000000 		.4byte	0x8b
 1389 03d8 C1010000 		.4byte	.LLST12
 1390 03dc 00       		.byte	0
 1391 03dd 12       		.uleb128 0x12
 1392 03de 93020000 		.4byte	.LASF43
 1393 03e2 01       		.byte	0x1
 1394 03e3 4902     		.2byte	0x249
 1395 03e5 00000000 		.4byte	.LFB11
 1396 03e9 0C000000 		.4byte	.LFE11-.LFB11
 1397 03ed 01       		.uleb128 0x1
 1398 03ee 9C       		.byte	0x9c
 1399 03ef 02040000 		.4byte	0x402
 1400 03f3 17       		.uleb128 0x17
 1401 03f4 E9030000 		.4byte	.LASF44
 1402 03f8 01       		.byte	0x1
 1403 03f9 4902     		.2byte	0x249
 1404 03fb AC000000 		.4byte	0xac
 1405 03ff 01       		.uleb128 0x1
 1406 0400 50       		.byte	0x50
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 42


 1407 0401 00       		.byte	0
 1408 0402 12       		.uleb128 0x12
 1409 0403 55040000 		.4byte	.LASF45
 1410 0407 01       		.byte	0x1
 1411 0408 B402     		.2byte	0x2b4
 1412 040a 00000000 		.4byte	.LFB13
 1413 040e 10000000 		.4byte	.LFE13-.LFB13
 1414 0412 01       		.uleb128 0x1
 1415 0413 9C       		.byte	0x9c
 1416 0414 29040000 		.4byte	0x429
 1417 0418 0A       		.uleb128 0xa
 1418 0419 1E030000 		.4byte	.LASF46
 1419 041d 01       		.byte	0x1
 1420 041e B402     		.2byte	0x2b4
 1421 0420 AC000000 		.4byte	0xac
 1422 0424 D4010000 		.4byte	.LLST13
 1423 0428 00       		.byte	0
 1424 0429 12       		.uleb128 0x12
 1425 042a 85030000 		.4byte	.LASF47
 1426 042e 01       		.byte	0x1
 1427 042f CF02     		.2byte	0x2cf
 1428 0431 00000000 		.4byte	.LFB14
 1429 0435 0C000000 		.4byte	.LFE14-.LFB14
 1430 0439 01       		.uleb128 0x1
 1431 043a 9C       		.byte	0x9c
 1432 043b 4E040000 		.4byte	0x44e
 1433 043f 17       		.uleb128 0x17
 1434 0440 1E030000 		.4byte	.LASF46
 1435 0444 01       		.byte	0x1
 1436 0445 CF02     		.2byte	0x2cf
 1437 0447 B7000000 		.4byte	0xb7
 1438 044b 01       		.uleb128 0x1
 1439 044c 50       		.byte	0x50
 1440 044d 00       		.byte	0
 1441 044e 14       		.uleb128 0x14
 1442 044f FA020000 		.4byte	.LASF48
 1443 0453 01       		.byte	0x1
 1444 0454 E702     		.2byte	0x2e7
 1445 0456 AC000000 		.4byte	0xac
 1446 045a 00000000 		.4byte	.LFB15
 1447 045e 54000000 		.4byte	.LFE15-.LFB15
 1448 0462 01       		.uleb128 0x1
 1449 0463 9C       		.byte	0x9c
 1450 0464 99040000 		.4byte	0x499
 1451 0468 0A       		.uleb128 0xa
 1452 0469 06040000 		.4byte	.LASF49
 1453 046d 01       		.byte	0x1
 1454 046e E702     		.2byte	0x2e7
 1455 0470 AC000000 		.4byte	0xac
 1456 0474 F5010000 		.4byte	.LLST14
 1457 0478 0B       		.uleb128 0xb
 1458 0479 F3010000 		.4byte	.LASF50
 1459 047d 01       		.byte	0x1
 1460 047e E902     		.2byte	0x2e9
 1461 0480 AC000000 		.4byte	0xac
 1462 0484 21020000 		.4byte	.LLST15
 1463 0488 0B       		.uleb128 0xb
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 43


 1464 0489 62010000 		.4byte	.LASF51
 1465 048d 01       		.byte	0x1
 1466 048e EA02     		.2byte	0x2ea
 1467 0490 B7000000 		.4byte	0xb7
 1468 0494 44020000 		.4byte	.LLST16
 1469 0498 00       		.byte	0
 1470 0499 18       		.uleb128 0x18
 1471 049a 41020000 		.4byte	.LASF52
 1472 049e 01       		.byte	0x1
 1473 049f 1103     		.2byte	0x311
 1474 04a1 B7000000 		.4byte	0xb7
 1475 04a5 00000000 		.4byte	.LFB16
 1476 04a9 48000000 		.4byte	.LFE16-.LFB16
 1477 04ad 01       		.uleb128 0x1
 1478 04ae 9C       		.byte	0x9c
 1479 04af E0040000 		.4byte	0x4e0
 1480 04b3 0A       		.uleb128 0xa
 1481 04b4 06040000 		.4byte	.LASF49
 1482 04b8 01       		.byte	0x1
 1483 04b9 1103     		.2byte	0x311
 1484 04bb AC000000 		.4byte	0xac
 1485 04bf 62020000 		.4byte	.LLST17
 1486 04c3 19       		.uleb128 0x19
 1487 04c4 96010000 		.4byte	.LASF71
 1488 04c8 01       		.byte	0x1
 1489 04c9 1403     		.2byte	0x314
 1490 04cb DB000000 		.4byte	0xdb
 1491 04cf 0B       		.uleb128 0xb
 1492 04d0 62010000 		.4byte	.LASF51
 1493 04d4 01       		.byte	0x1
 1494 04d5 1503     		.2byte	0x315
 1495 04d7 B7000000 		.4byte	0xb7
 1496 04db 85020000 		.4byte	.LLST18
 1497 04df 00       		.byte	0
 1498 04e0 18       		.uleb128 0x18
 1499 04e1 D0030000 		.4byte	.LASF53
 1500 04e5 01       		.byte	0x1
 1501 04e6 3D03     		.2byte	0x33d
 1502 04e8 C2000000 		.4byte	0xc2
 1503 04ec 00000000 		.4byte	.LFB17
 1504 04f0 50000000 		.4byte	.LFE17-.LFB17
 1505 04f4 01       		.uleb128 0x1
 1506 04f5 9C       		.byte	0x9c
 1507 04f6 29050000 		.4byte	0x529
 1508 04fa 0A       		.uleb128 0xa
 1509 04fb 06040000 		.4byte	.LASF49
 1510 04ff 01       		.byte	0x1
 1511 0500 3D03     		.2byte	0x33d
 1512 0502 AC000000 		.4byte	0xac
 1513 0506 A3020000 		.4byte	.LLST19
 1514 050a 1A       		.uleb128 0x1a
 1515 050b AF010000 		.4byte	.LASF54
 1516 050f 01       		.byte	0x1
 1517 0510 3F03     		.2byte	0x33f
 1518 0512 C2000000 		.4byte	0xc2
 1519 0516 01       		.uleb128 0x1
 1520 0517 50       		.byte	0x50
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 44


 1521 0518 0B       		.uleb128 0xb
 1522 0519 62010000 		.4byte	.LASF51
 1523 051d 01       		.byte	0x1
 1524 051e 4003     		.2byte	0x340
 1525 0520 B7000000 		.4byte	0xb7
 1526 0524 C1020000 		.4byte	.LLST20
 1527 0528 00       		.byte	0
 1528 0529 1B       		.uleb128 0x1b
 1529 052a BE020000 		.4byte	.LASF55
 1530 052e 01       		.byte	0x1
 1531 052f 23       		.byte	0x23
 1532 0530 80000000 		.4byte	0x80
 1533 0534 05       		.uleb128 0x5
 1534 0535 03       		.byte	0x3
 1535 0536 00000000 		.4byte	ADC_SAR_1_initVar
 1536 053a 1B       		.uleb128 0x1b
 1537 053b 2D010000 		.4byte	.LASF56
 1538 053f 01       		.byte	0x1
 1539 0540 24       		.byte	0x24
 1540 0541 4B050000 		.4byte	0x54b
 1541 0545 05       		.uleb128 0x5
 1542 0546 03       		.byte	0x3
 1543 0547 00000000 		.4byte	ADC_SAR_1_offset
 1544 054b 08       		.uleb128 0x8
 1545 054c AC000000 		.4byte	0xac
 1546 0550 1B       		.uleb128 0x1b
 1547 0551 00020000 		.4byte	.LASF57
 1548 0555 01       		.byte	0x1
 1549 0556 25       		.byte	0x25
 1550 0557 4B050000 		.4byte	0x54b
 1551 055b 05       		.uleb128 0x5
 1552 055c 03       		.byte	0x3
 1553 055d 00000000 		.4byte	ADC_SAR_1_countsPerVolt
 1554 0561 1B       		.uleb128 0x1b
 1555 0562 6D040000 		.4byte	.LASF58
 1556 0566 01       		.byte	0x1
 1557 0567 26       		.byte	0x26
 1558 0568 72050000 		.4byte	0x572
 1559 056c 05       		.uleb128 0x5
 1560 056d 03       		.byte	0x3
 1561 056e 00000000 		.4byte	ADC_SAR_1_countsPer10Volt
 1562 0572 08       		.uleb128 0x8
 1563 0573 B7000000 		.4byte	0xb7
 1564 0577 1B       		.uleb128 0x1b
 1565 0578 A5040000 		.4byte	.LASF59
 1566 057c 01       		.byte	0x1
 1567 057d 27       		.byte	0x27
 1568 057e 4B050000 		.4byte	0x54b
 1569 0582 05       		.uleb128 0x5
 1570 0583 03       		.byte	0x3
 1571 0584 00000000 		.4byte	ADC_SAR_1_shift
 1572 0588 1C       		.uleb128 0x1c
 1573 0589 DB020000 		.4byte	.LASF60
 1574 058d 03       		.byte	0x3
 1575 058e 80       		.byte	0x80
 1576 058f 99050000 		.4byte	0x599
 1577 0593 1D       		.uleb128 0x1d
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 45


 1578 0594 80000000 		.4byte	0x80
 1579 0598 00       		.byte	0
 1580 0599 1E       		.uleb128 0x1e
 1581 059a B5010000 		.4byte	.LASF72
 1582 059e 03       		.byte	0x3
 1583 059f 7E       		.byte	0x7e
 1584 05a0 80000000 		.4byte	0x80
 1585 05a4 1C       		.uleb128 0x1c
 1586 05a5 4A010000 		.4byte	.LASF61
 1587 05a9 03       		.byte	0x3
 1588 05aa 78       		.byte	0x78
 1589 05ab B5050000 		.4byte	0x5b5
 1590 05af 1D       		.uleb128 0x1d
 1591 05b0 8B000000 		.4byte	0x8b
 1592 05b4 00       		.byte	0
 1593 05b5 1C       		.uleb128 0x1c
 1594 05b6 1C000000 		.4byte	.LASF62
 1595 05ba 03       		.byte	0x3
 1596 05bb 7F       		.byte	0x7f
 1597 05bc C6050000 		.4byte	0x5c6
 1598 05c0 1D       		.uleb128 0x1d
 1599 05c1 80000000 		.4byte	0x80
 1600 05c5 00       		.byte	0
 1601 05c6 1C       		.uleb128 0x1c
 1602 05c7 5B020000 		.4byte	.LASF63
 1603 05cb 04       		.byte	0x4
 1604 05cc 32       		.byte	0x32
 1605 05cd D7050000 		.4byte	0x5d7
 1606 05d1 1D       		.uleb128 0x1d
 1607 05d2 80000000 		.4byte	0x80
 1608 05d6 00       		.byte	0
 1609 05d7 1C       		.uleb128 0x1c
 1610 05d8 A7020000 		.4byte	.LASF64
 1611 05dc 03       		.byte	0x3
 1612 05dd 8C       		.byte	0x8c
 1613 05de ED050000 		.4byte	0x5ed
 1614 05e2 1D       		.uleb128 0x1d
 1615 05e3 80000000 		.4byte	0x80
 1616 05e7 1D       		.uleb128 0x1d
 1617 05e8 80000000 		.4byte	0x80
 1618 05ec 00       		.byte	0
 1619 05ed 1F       		.uleb128 0x1f
 1620 05ee 72010000 		.4byte	.LASF65
 1621 05f2 03       		.byte	0x3
 1622 05f3 89       		.byte	0x89
 1623 05f4 19010000 		.4byte	0x119
 1624 05f8 1D       		.uleb128 0x1d
 1625 05f9 80000000 		.4byte	0x80
 1626 05fd 1D       		.uleb128 0x1d
 1627 05fe 19010000 		.4byte	0x119
 1628 0602 00       		.byte	0
 1629 0603 00       		.byte	0
 1630              		.section	.debug_abbrev,"",%progbits
 1631              	.Ldebug_abbrev0:
 1632 0000 01       		.uleb128 0x1
 1633 0001 11       		.uleb128 0x11
 1634 0002 01       		.byte	0x1
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 46


 1635 0003 25       		.uleb128 0x25
 1636 0004 0E       		.uleb128 0xe
 1637 0005 13       		.uleb128 0x13
 1638 0006 0B       		.uleb128 0xb
 1639 0007 03       		.uleb128 0x3
 1640 0008 0E       		.uleb128 0xe
 1641 0009 1B       		.uleb128 0x1b
 1642 000a 0E       		.uleb128 0xe
 1643 000b 55       		.uleb128 0x55
 1644 000c 17       		.uleb128 0x17
 1645 000d 11       		.uleb128 0x11
 1646 000e 01       		.uleb128 0x1
 1647 000f 10       		.uleb128 0x10
 1648 0010 17       		.uleb128 0x17
 1649 0011 00       		.byte	0
 1650 0012 00       		.byte	0
 1651 0013 02       		.uleb128 0x2
 1652 0014 24       		.uleb128 0x24
 1653 0015 00       		.byte	0
 1654 0016 0B       		.uleb128 0xb
 1655 0017 0B       		.uleb128 0xb
 1656 0018 3E       		.uleb128 0x3e
 1657 0019 0B       		.uleb128 0xb
 1658 001a 03       		.uleb128 0x3
 1659 001b 08       		.uleb128 0x8
 1660 001c 00       		.byte	0
 1661 001d 00       		.byte	0
 1662 001e 03       		.uleb128 0x3
 1663 001f 24       		.uleb128 0x24
 1664 0020 00       		.byte	0
 1665 0021 0B       		.uleb128 0xb
 1666 0022 0B       		.uleb128 0xb
 1667 0023 3E       		.uleb128 0x3e
 1668 0024 0B       		.uleb128 0xb
 1669 0025 03       		.uleb128 0x3
 1670 0026 0E       		.uleb128 0xe
 1671 0027 00       		.byte	0
 1672 0028 00       		.byte	0
 1673 0029 04       		.uleb128 0x4
 1674 002a 0F       		.uleb128 0xf
 1675 002b 00       		.byte	0
 1676 002c 0B       		.uleb128 0xb
 1677 002d 0B       		.uleb128 0xb
 1678 002e 49       		.uleb128 0x49
 1679 002f 13       		.uleb128 0x13
 1680 0030 00       		.byte	0
 1681 0031 00       		.byte	0
 1682 0032 05       		.uleb128 0x5
 1683 0033 15       		.uleb128 0x15
 1684 0034 00       		.byte	0
 1685 0035 27       		.uleb128 0x27
 1686 0036 19       		.uleb128 0x19
 1687 0037 00       		.byte	0
 1688 0038 00       		.byte	0
 1689 0039 06       		.uleb128 0x6
 1690 003a 16       		.uleb128 0x16
 1691 003b 00       		.byte	0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 47


 1692 003c 03       		.uleb128 0x3
 1693 003d 0E       		.uleb128 0xe
 1694 003e 3A       		.uleb128 0x3a
 1695 003f 0B       		.uleb128 0xb
 1696 0040 3B       		.uleb128 0x3b
 1697 0041 0B       		.uleb128 0xb
 1698 0042 49       		.uleb128 0x49
 1699 0043 13       		.uleb128 0x13
 1700 0044 00       		.byte	0
 1701 0045 00       		.byte	0
 1702 0046 07       		.uleb128 0x7
 1703 0047 16       		.uleb128 0x16
 1704 0048 00       		.byte	0
 1705 0049 03       		.uleb128 0x3
 1706 004a 0E       		.uleb128 0xe
 1707 004b 3A       		.uleb128 0x3a
 1708 004c 0B       		.uleb128 0xb
 1709 004d 3B       		.uleb128 0x3b
 1710 004e 05       		.uleb128 0x5
 1711 004f 49       		.uleb128 0x49
 1712 0050 13       		.uleb128 0x13
 1713 0051 00       		.byte	0
 1714 0052 00       		.byte	0
 1715 0053 08       		.uleb128 0x8
 1716 0054 35       		.uleb128 0x35
 1717 0055 00       		.byte	0
 1718 0056 49       		.uleb128 0x49
 1719 0057 13       		.uleb128 0x13
 1720 0058 00       		.byte	0
 1721 0059 00       		.byte	0
 1722 005a 09       		.uleb128 0x9
 1723 005b 2E       		.uleb128 0x2e
 1724 005c 01       		.byte	0x1
 1725 005d 03       		.uleb128 0x3
 1726 005e 0E       		.uleb128 0xe
 1727 005f 3A       		.uleb128 0x3a
 1728 0060 0B       		.uleb128 0xb
 1729 0061 3B       		.uleb128 0x3b
 1730 0062 05       		.uleb128 0x5
 1731 0063 27       		.uleb128 0x27
 1732 0064 19       		.uleb128 0x19
 1733 0065 11       		.uleb128 0x11
 1734 0066 01       		.uleb128 0x1
 1735 0067 12       		.uleb128 0x12
 1736 0068 06       		.uleb128 0x6
 1737 0069 40       		.uleb128 0x40
 1738 006a 18       		.uleb128 0x18
 1739 006b 9742     		.uleb128 0x2117
 1740 006d 19       		.uleb128 0x19
 1741 006e 01       		.uleb128 0x1
 1742 006f 13       		.uleb128 0x13
 1743 0070 00       		.byte	0
 1744 0071 00       		.byte	0
 1745 0072 0A       		.uleb128 0xa
 1746 0073 05       		.uleb128 0x5
 1747 0074 00       		.byte	0
 1748 0075 03       		.uleb128 0x3
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 48


 1749 0076 0E       		.uleb128 0xe
 1750 0077 3A       		.uleb128 0x3a
 1751 0078 0B       		.uleb128 0xb
 1752 0079 3B       		.uleb128 0x3b
 1753 007a 05       		.uleb128 0x5
 1754 007b 49       		.uleb128 0x49
 1755 007c 13       		.uleb128 0x13
 1756 007d 02       		.uleb128 0x2
 1757 007e 17       		.uleb128 0x17
 1758 007f 00       		.byte	0
 1759 0080 00       		.byte	0
 1760 0081 0B       		.uleb128 0xb
 1761 0082 34       		.uleb128 0x34
 1762 0083 00       		.byte	0
 1763 0084 03       		.uleb128 0x3
 1764 0085 0E       		.uleb128 0xe
 1765 0086 3A       		.uleb128 0x3a
 1766 0087 0B       		.uleb128 0xb
 1767 0088 3B       		.uleb128 0x3b
 1768 0089 05       		.uleb128 0x5
 1769 008a 49       		.uleb128 0x49
 1770 008b 13       		.uleb128 0x13
 1771 008c 02       		.uleb128 0x2
 1772 008d 17       		.uleb128 0x17
 1773 008e 00       		.byte	0
 1774 008f 00       		.byte	0
 1775 0090 0C       		.uleb128 0xc
 1776 0091 898201   		.uleb128 0x4109
 1777 0094 01       		.byte	0x1
 1778 0095 11       		.uleb128 0x11
 1779 0096 01       		.uleb128 0x1
 1780 0097 31       		.uleb128 0x31
 1781 0098 13       		.uleb128 0x13
 1782 0099 00       		.byte	0
 1783 009a 00       		.byte	0
 1784 009b 0D       		.uleb128 0xd
 1785 009c 8A8201   		.uleb128 0x410a
 1786 009f 00       		.byte	0
 1787 00a0 02       		.uleb128 0x2
 1788 00a1 18       		.uleb128 0x18
 1789 00a2 9142     		.uleb128 0x2111
 1790 00a4 18       		.uleb128 0x18
 1791 00a5 00       		.byte	0
 1792 00a6 00       		.byte	0
 1793 00a7 0E       		.uleb128 0xe
 1794 00a8 2E       		.uleb128 0x2e
 1795 00a9 01       		.byte	0x1
 1796 00aa 3F       		.uleb128 0x3f
 1797 00ab 19       		.uleb128 0x19
 1798 00ac 03       		.uleb128 0x3
 1799 00ad 0E       		.uleb128 0xe
 1800 00ae 3A       		.uleb128 0x3a
 1801 00af 0B       		.uleb128 0xb
 1802 00b0 3B       		.uleb128 0x3b
 1803 00b1 0B       		.uleb128 0xb
 1804 00b2 27       		.uleb128 0x27
 1805 00b3 19       		.uleb128 0x19
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 49


 1806 00b4 11       		.uleb128 0x11
 1807 00b5 01       		.uleb128 0x1
 1808 00b6 12       		.uleb128 0x12
 1809 00b7 06       		.uleb128 0x6
 1810 00b8 40       		.uleb128 0x40
 1811 00b9 18       		.uleb128 0x18
 1812 00ba 9742     		.uleb128 0x2117
 1813 00bc 19       		.uleb128 0x19
 1814 00bd 01       		.uleb128 0x1
 1815 00be 13       		.uleb128 0x13
 1816 00bf 00       		.byte	0
 1817 00c0 00       		.byte	0
 1818 00c1 0F       		.uleb128 0xf
 1819 00c2 34       		.uleb128 0x34
 1820 00c3 00       		.byte	0
 1821 00c4 03       		.uleb128 0x3
 1822 00c5 0E       		.uleb128 0xe
 1823 00c6 3A       		.uleb128 0x3a
 1824 00c7 0B       		.uleb128 0xb
 1825 00c8 3B       		.uleb128 0x3b
 1826 00c9 0B       		.uleb128 0xb
 1827 00ca 49       		.uleb128 0x49
 1828 00cb 13       		.uleb128 0x13
 1829 00cc 02       		.uleb128 0x2
 1830 00cd 17       		.uleb128 0x17
 1831 00ce 00       		.byte	0
 1832 00cf 00       		.byte	0
 1833 00d0 10       		.uleb128 0x10
 1834 00d1 898201   		.uleb128 0x4109
 1835 00d4 00       		.byte	0
 1836 00d5 11       		.uleb128 0x11
 1837 00d6 01       		.uleb128 0x1
 1838 00d7 31       		.uleb128 0x31
 1839 00d8 13       		.uleb128 0x13
 1840 00d9 00       		.byte	0
 1841 00da 00       		.byte	0
 1842 00db 11       		.uleb128 0x11
 1843 00dc 898201   		.uleb128 0x4109
 1844 00df 01       		.byte	0x1
 1845 00e0 11       		.uleb128 0x11
 1846 00e1 01       		.uleb128 0x1
 1847 00e2 31       		.uleb128 0x31
 1848 00e3 13       		.uleb128 0x13
 1849 00e4 01       		.uleb128 0x1
 1850 00e5 13       		.uleb128 0x13
 1851 00e6 00       		.byte	0
 1852 00e7 00       		.byte	0
 1853 00e8 12       		.uleb128 0x12
 1854 00e9 2E       		.uleb128 0x2e
 1855 00ea 01       		.byte	0x1
 1856 00eb 3F       		.uleb128 0x3f
 1857 00ec 19       		.uleb128 0x19
 1858 00ed 03       		.uleb128 0x3
 1859 00ee 0E       		.uleb128 0xe
 1860 00ef 3A       		.uleb128 0x3a
 1861 00f0 0B       		.uleb128 0xb
 1862 00f1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 50


 1863 00f2 05       		.uleb128 0x5
 1864 00f3 27       		.uleb128 0x27
 1865 00f4 19       		.uleb128 0x19
 1866 00f5 11       		.uleb128 0x11
 1867 00f6 01       		.uleb128 0x1
 1868 00f7 12       		.uleb128 0x12
 1869 00f8 06       		.uleb128 0x6
 1870 00f9 40       		.uleb128 0x40
 1871 00fa 18       		.uleb128 0x18
 1872 00fb 9742     		.uleb128 0x2117
 1873 00fd 19       		.uleb128 0x19
 1874 00fe 01       		.uleb128 0x1
 1875 00ff 13       		.uleb128 0x13
 1876 0100 00       		.byte	0
 1877 0101 00       		.byte	0
 1878 0102 13       		.uleb128 0x13
 1879 0103 2E       		.uleb128 0x2e
 1880 0104 00       		.byte	0
 1881 0105 3F       		.uleb128 0x3f
 1882 0106 19       		.uleb128 0x19
 1883 0107 03       		.uleb128 0x3
 1884 0108 0E       		.uleb128 0xe
 1885 0109 3A       		.uleb128 0x3a
 1886 010a 0B       		.uleb128 0xb
 1887 010b 3B       		.uleb128 0x3b
 1888 010c 05       		.uleb128 0x5
 1889 010d 27       		.uleb128 0x27
 1890 010e 19       		.uleb128 0x19
 1891 010f 11       		.uleb128 0x11
 1892 0110 01       		.uleb128 0x1
 1893 0111 12       		.uleb128 0x12
 1894 0112 06       		.uleb128 0x6
 1895 0113 40       		.uleb128 0x40
 1896 0114 18       		.uleb128 0x18
 1897 0115 9742     		.uleb128 0x2117
 1898 0117 19       		.uleb128 0x19
 1899 0118 00       		.byte	0
 1900 0119 00       		.byte	0
 1901 011a 14       		.uleb128 0x14
 1902 011b 2E       		.uleb128 0x2e
 1903 011c 01       		.byte	0x1
 1904 011d 3F       		.uleb128 0x3f
 1905 011e 19       		.uleb128 0x19
 1906 011f 03       		.uleb128 0x3
 1907 0120 0E       		.uleb128 0xe
 1908 0121 3A       		.uleb128 0x3a
 1909 0122 0B       		.uleb128 0xb
 1910 0123 3B       		.uleb128 0x3b
 1911 0124 05       		.uleb128 0x5
 1912 0125 27       		.uleb128 0x27
 1913 0126 19       		.uleb128 0x19
 1914 0127 49       		.uleb128 0x49
 1915 0128 13       		.uleb128 0x13
 1916 0129 11       		.uleb128 0x11
 1917 012a 01       		.uleb128 0x1
 1918 012b 12       		.uleb128 0x12
 1919 012c 06       		.uleb128 0x6
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 51


 1920 012d 40       		.uleb128 0x40
 1921 012e 18       		.uleb128 0x18
 1922 012f 9742     		.uleb128 0x2117
 1923 0131 19       		.uleb128 0x19
 1924 0132 01       		.uleb128 0x1
 1925 0133 13       		.uleb128 0x13
 1926 0134 00       		.byte	0
 1927 0135 00       		.byte	0
 1928 0136 15       		.uleb128 0x15
 1929 0137 2E       		.uleb128 0x2e
 1930 0138 00       		.byte	0
 1931 0139 3F       		.uleb128 0x3f
 1932 013a 19       		.uleb128 0x19
 1933 013b 03       		.uleb128 0x3
 1934 013c 0E       		.uleb128 0xe
 1935 013d 3A       		.uleb128 0x3a
 1936 013e 0B       		.uleb128 0xb
 1937 013f 3B       		.uleb128 0x3b
 1938 0140 05       		.uleb128 0x5
 1939 0141 27       		.uleb128 0x27
 1940 0142 19       		.uleb128 0x19
 1941 0143 49       		.uleb128 0x49
 1942 0144 13       		.uleb128 0x13
 1943 0145 11       		.uleb128 0x11
 1944 0146 01       		.uleb128 0x1
 1945 0147 12       		.uleb128 0x12
 1946 0148 06       		.uleb128 0x6
 1947 0149 40       		.uleb128 0x40
 1948 014a 18       		.uleb128 0x18
 1949 014b 9742     		.uleb128 0x2117
 1950 014d 19       		.uleb128 0x19
 1951 014e 00       		.byte	0
 1952 014f 00       		.byte	0
 1953 0150 16       		.uleb128 0x16
 1954 0151 34       		.uleb128 0x34
 1955 0152 00       		.byte	0
 1956 0153 03       		.uleb128 0x3
 1957 0154 08       		.uleb128 0x8
 1958 0155 3A       		.uleb128 0x3a
 1959 0156 0B       		.uleb128 0xb
 1960 0157 3B       		.uleb128 0x3b
 1961 0158 05       		.uleb128 0x5
 1962 0159 49       		.uleb128 0x49
 1963 015a 13       		.uleb128 0x13
 1964 015b 02       		.uleb128 0x2
 1965 015c 17       		.uleb128 0x17
 1966 015d 00       		.byte	0
 1967 015e 00       		.byte	0
 1968 015f 17       		.uleb128 0x17
 1969 0160 05       		.uleb128 0x5
 1970 0161 00       		.byte	0
 1971 0162 03       		.uleb128 0x3
 1972 0163 0E       		.uleb128 0xe
 1973 0164 3A       		.uleb128 0x3a
 1974 0165 0B       		.uleb128 0xb
 1975 0166 3B       		.uleb128 0x3b
 1976 0167 05       		.uleb128 0x5
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 52


 1977 0168 49       		.uleb128 0x49
 1978 0169 13       		.uleb128 0x13
 1979 016a 02       		.uleb128 0x2
 1980 016b 18       		.uleb128 0x18
 1981 016c 00       		.byte	0
 1982 016d 00       		.byte	0
 1983 016e 18       		.uleb128 0x18
 1984 016f 2E       		.uleb128 0x2e
 1985 0170 01       		.byte	0x1
 1986 0171 3F       		.uleb128 0x3f
 1987 0172 19       		.uleb128 0x19
 1988 0173 03       		.uleb128 0x3
 1989 0174 0E       		.uleb128 0xe
 1990 0175 3A       		.uleb128 0x3a
 1991 0176 0B       		.uleb128 0xb
 1992 0177 3B       		.uleb128 0x3b
 1993 0178 05       		.uleb128 0x5
 1994 0179 27       		.uleb128 0x27
 1995 017a 19       		.uleb128 0x19
 1996 017b 49       		.uleb128 0x49
 1997 017c 13       		.uleb128 0x13
 1998 017d 11       		.uleb128 0x11
 1999 017e 01       		.uleb128 0x1
 2000 017f 12       		.uleb128 0x12
 2001 0180 06       		.uleb128 0x6
 2002 0181 40       		.uleb128 0x40
 2003 0182 18       		.uleb128 0x18
 2004 0183 9642     		.uleb128 0x2116
 2005 0185 19       		.uleb128 0x19
 2006 0186 01       		.uleb128 0x1
 2007 0187 13       		.uleb128 0x13
 2008 0188 00       		.byte	0
 2009 0189 00       		.byte	0
 2010 018a 19       		.uleb128 0x19
 2011 018b 34       		.uleb128 0x34
 2012 018c 00       		.byte	0
 2013 018d 03       		.uleb128 0x3
 2014 018e 0E       		.uleb128 0xe
 2015 018f 3A       		.uleb128 0x3a
 2016 0190 0B       		.uleb128 0xb
 2017 0191 3B       		.uleb128 0x3b
 2018 0192 05       		.uleb128 0x5
 2019 0193 49       		.uleb128 0x49
 2020 0194 13       		.uleb128 0x13
 2021 0195 00       		.byte	0
 2022 0196 00       		.byte	0
 2023 0197 1A       		.uleb128 0x1a
 2024 0198 34       		.uleb128 0x34
 2025 0199 00       		.byte	0
 2026 019a 03       		.uleb128 0x3
 2027 019b 0E       		.uleb128 0xe
 2028 019c 3A       		.uleb128 0x3a
 2029 019d 0B       		.uleb128 0xb
 2030 019e 3B       		.uleb128 0x3b
 2031 019f 05       		.uleb128 0x5
 2032 01a0 49       		.uleb128 0x49
 2033 01a1 13       		.uleb128 0x13
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 53


 2034 01a2 02       		.uleb128 0x2
 2035 01a3 18       		.uleb128 0x18
 2036 01a4 00       		.byte	0
 2037 01a5 00       		.byte	0
 2038 01a6 1B       		.uleb128 0x1b
 2039 01a7 34       		.uleb128 0x34
 2040 01a8 00       		.byte	0
 2041 01a9 03       		.uleb128 0x3
 2042 01aa 0E       		.uleb128 0xe
 2043 01ab 3A       		.uleb128 0x3a
 2044 01ac 0B       		.uleb128 0xb
 2045 01ad 3B       		.uleb128 0x3b
 2046 01ae 0B       		.uleb128 0xb
 2047 01af 49       		.uleb128 0x49
 2048 01b0 13       		.uleb128 0x13
 2049 01b1 3F       		.uleb128 0x3f
 2050 01b2 19       		.uleb128 0x19
 2051 01b3 02       		.uleb128 0x2
 2052 01b4 18       		.uleb128 0x18
 2053 01b5 00       		.byte	0
 2054 01b6 00       		.byte	0
 2055 01b7 1C       		.uleb128 0x1c
 2056 01b8 2E       		.uleb128 0x2e
 2057 01b9 01       		.byte	0x1
 2058 01ba 3F       		.uleb128 0x3f
 2059 01bb 19       		.uleb128 0x19
 2060 01bc 03       		.uleb128 0x3
 2061 01bd 0E       		.uleb128 0xe
 2062 01be 3A       		.uleb128 0x3a
 2063 01bf 0B       		.uleb128 0xb
 2064 01c0 3B       		.uleb128 0x3b
 2065 01c1 0B       		.uleb128 0xb
 2066 01c2 27       		.uleb128 0x27
 2067 01c3 19       		.uleb128 0x19
 2068 01c4 3C       		.uleb128 0x3c
 2069 01c5 19       		.uleb128 0x19
 2070 01c6 01       		.uleb128 0x1
 2071 01c7 13       		.uleb128 0x13
 2072 01c8 00       		.byte	0
 2073 01c9 00       		.byte	0
 2074 01ca 1D       		.uleb128 0x1d
 2075 01cb 05       		.uleb128 0x5
 2076 01cc 00       		.byte	0
 2077 01cd 49       		.uleb128 0x49
 2078 01ce 13       		.uleb128 0x13
 2079 01cf 00       		.byte	0
 2080 01d0 00       		.byte	0
 2081 01d1 1E       		.uleb128 0x1e
 2082 01d2 2E       		.uleb128 0x2e
 2083 01d3 00       		.byte	0
 2084 01d4 3F       		.uleb128 0x3f
 2085 01d5 19       		.uleb128 0x19
 2086 01d6 03       		.uleb128 0x3
 2087 01d7 0E       		.uleb128 0xe
 2088 01d8 3A       		.uleb128 0x3a
 2089 01d9 0B       		.uleb128 0xb
 2090 01da 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 54


 2091 01db 0B       		.uleb128 0xb
 2092 01dc 27       		.uleb128 0x27
 2093 01dd 19       		.uleb128 0x19
 2094 01de 49       		.uleb128 0x49
 2095 01df 13       		.uleb128 0x13
 2096 01e0 3C       		.uleb128 0x3c
 2097 01e1 19       		.uleb128 0x19
 2098 01e2 00       		.byte	0
 2099 01e3 00       		.byte	0
 2100 01e4 1F       		.uleb128 0x1f
 2101 01e5 2E       		.uleb128 0x2e
 2102 01e6 01       		.byte	0x1
 2103 01e7 3F       		.uleb128 0x3f
 2104 01e8 19       		.uleb128 0x19
 2105 01e9 03       		.uleb128 0x3
 2106 01ea 0E       		.uleb128 0xe
 2107 01eb 3A       		.uleb128 0x3a
 2108 01ec 0B       		.uleb128 0xb
 2109 01ed 3B       		.uleb128 0x3b
 2110 01ee 0B       		.uleb128 0xb
 2111 01ef 27       		.uleb128 0x27
 2112 01f0 19       		.uleb128 0x19
 2113 01f1 49       		.uleb128 0x49
 2114 01f2 13       		.uleb128 0x13
 2115 01f3 3C       		.uleb128 0x3c
 2116 01f4 19       		.uleb128 0x19
 2117 01f5 00       		.byte	0
 2118 01f6 00       		.byte	0
 2119 01f7 00       		.byte	0
 2120              		.section	.debug_loc,"",%progbits
 2121              	.Ldebug_loc0:
 2122              	.LLST0:
 2123 0000 00000000 		.4byte	.LVL0
 2124 0004 24000000 		.4byte	.LVL3
 2125 0008 0100     		.2byte	0x1
 2126 000a 50       		.byte	0x50
 2127 000b 24000000 		.4byte	.LVL3
 2128 000f 2E000000 		.4byte	.LVL5
 2129 0013 0400     		.2byte	0x4
 2130 0015 F3       		.byte	0xf3
 2131 0016 01       		.uleb128 0x1
 2132 0017 50       		.byte	0x50
 2133 0018 9F       		.byte	0x9f
 2134 0019 2E000000 		.4byte	.LVL5
 2135 001d 36000000 		.4byte	.LVL6
 2136 0021 0100     		.2byte	0x1
 2137 0023 50       		.byte	0x50
 2138 0024 36000000 		.4byte	.LVL6
 2139 0028 68000000 		.4byte	.LFE12
 2140 002c 0400     		.2byte	0x4
 2141 002e F3       		.byte	0xf3
 2142 002f 01       		.uleb128 0x1
 2143 0030 50       		.byte	0x50
 2144 0031 9F       		.byte	0x9f
 2145 0032 00000000 		.4byte	0
 2146 0036 00000000 		.4byte	0
 2147              	.LLST1:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 55


 2148 003a 1A000000 		.4byte	.LVL1
 2149 003e 22000000 		.4byte	.LVL2
 2150 0042 0400     		.2byte	0x4
 2151 0044 0A       		.byte	0xa
 2152 0045 0001     		.2byte	0x100
 2153 0047 9F       		.byte	0x9f
 2154 0048 22000000 		.4byte	.LVL2
 2155 004c 2E000000 		.4byte	.LVL5
 2156 0050 0200     		.2byte	0x2
 2157 0052 30       		.byte	0x30
 2158 0053 9F       		.byte	0x9f
 2159 0054 36000000 		.4byte	.LVL6
 2160 0058 44000000 		.4byte	.LVL7
 2161 005c 0100     		.2byte	0x1
 2162 005e 53       		.byte	0x53
 2163 005f 00000000 		.4byte	0
 2164 0063 00000000 		.4byte	0
 2165              	.LLST2:
 2166 0067 1A000000 		.4byte	.LVL1
 2167 006b 22000000 		.4byte	.LVL2
 2168 006f 0300     		.2byte	0x3
 2169 0071 08       		.byte	0x8
 2170 0072 80       		.byte	0x80
 2171 0073 9F       		.byte	0x9f
 2172 0074 22000000 		.4byte	.LVL2
 2173 0078 2E000000 		.4byte	.LVL5
 2174 007c 0200     		.2byte	0x2
 2175 007e 30       		.byte	0x30
 2176 007f 9F       		.byte	0x9f
 2177 0080 36000000 		.4byte	.LVL6
 2178 0084 56000000 		.4byte	.LVL8
 2179 0088 0100     		.2byte	0x1
 2180 008a 52       		.byte	0x52
 2181 008b 00000000 		.4byte	0
 2182 008f 00000000 		.4byte	0
 2183              	.LLST3:
 2184 0093 38000000 		.4byte	.LVL11
 2185 0097 3C000000 		.4byte	.LVL12
 2186 009b 0500     		.2byte	0x5
 2187 009d 72       		.byte	0x72
 2188 009e 00       		.sleb128 0
 2189 009f 32       		.byte	0x32
 2190 00a0 21       		.byte	0x21
 2191 00a1 9F       		.byte	0x9f
 2192 00a2 3C000000 		.4byte	.LVL12
 2193 00a6 40000000 		.4byte	.LVL13
 2194 00aa 0100     		.2byte	0x1
 2195 00ac 52       		.byte	0x52
 2196 00ad 00000000 		.4byte	0
 2197 00b1 00000000 		.4byte	0
 2198              	.LLST4:
 2199 00b5 08000000 		.4byte	.LVL10
 2200 00b9 76000000 		.4byte	.LVL14
 2201 00bd 0100     		.2byte	0x1
 2202 00bf 50       		.byte	0x50
 2203 00c0 76000000 		.4byte	.LVL14
 2204 00c4 88000000 		.4byte	.LVL17
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 56


 2205 00c8 0100     		.2byte	0x1
 2206 00ca 54       		.byte	0x54
 2207 00cb 00000000 		.4byte	0
 2208 00cf 00000000 		.4byte	0
 2209              	.LLST5:
 2210 00d3 06000000 		.4byte	.LVL18
 2211 00d7 3F000000 		.4byte	.LVL19-1
 2212 00db 0100     		.2byte	0x1
 2213 00dd 50       		.byte	0x50
 2214 00de 00000000 		.4byte	0
 2215 00e2 00000000 		.4byte	0
 2216              	.LLST6:
 2217 00e6 00000000 		.4byte	.LVL20
 2218 00ea 04000000 		.4byte	.LVL21
 2219 00ee 0100     		.2byte	0x1
 2220 00f0 50       		.byte	0x50
 2221 00f1 04000000 		.4byte	.LVL21
 2222 00f5 10000000 		.4byte	.LVL23
 2223 00f9 0100     		.2byte	0x1
 2224 00fb 50       		.byte	0x50
 2225 00fc 00000000 		.4byte	0
 2226 0100 00000000 		.4byte	0
 2227              	.LLST7:
 2228 0104 0C000000 		.4byte	.LVL22
 2229 0108 10000000 		.4byte	.LVL23
 2230 010c 0100     		.2byte	0x1
 2231 010e 52       		.byte	0x52
 2232 010f 10000000 		.4byte	.LVL23
 2233 0113 18000000 		.4byte	.LFE4
 2234 0117 0100     		.2byte	0x1
 2235 0119 50       		.byte	0x50
 2236 011a 00000000 		.4byte	0
 2237 011e 00000000 		.4byte	0
 2238              	.LLST8:
 2239 0122 00000000 		.4byte	.LVL24
 2240 0126 1C000000 		.4byte	.LVL27
 2241 012a 0100     		.2byte	0x1
 2242 012c 50       		.byte	0x50
 2243 012d 1C000000 		.4byte	.LVL27
 2244 0131 24000000 		.4byte	.LVL29
 2245 0135 0400     		.2byte	0x4
 2246 0137 F3       		.byte	0xf3
 2247 0138 01       		.uleb128 0x1
 2248 0139 50       		.byte	0x50
 2249 013a 9F       		.byte	0x9f
 2250 013b 24000000 		.4byte	.LVL29
 2251 013f 26000000 		.4byte	.LVL30
 2252 0143 0100     		.2byte	0x1
 2253 0145 50       		.byte	0x50
 2254 0146 26000000 		.4byte	.LVL30
 2255 014a 38000000 		.4byte	.LFE5
 2256 014e 0400     		.2byte	0x4
 2257 0150 F3       		.byte	0xf3
 2258 0151 01       		.uleb128 0x1
 2259 0152 50       		.byte	0x50
 2260 0153 9F       		.byte	0x9f
 2261 0154 00000000 		.4byte	0
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 57


 2262 0158 00000000 		.4byte	0
 2263              	.LLST9:
 2264 015c 16000000 		.4byte	.LVL25
 2265 0160 1A000000 		.4byte	.LVL26
 2266 0164 0300     		.2byte	0x3
 2267 0166 08       		.byte	0x8
 2268 0167 42       		.byte	0x42
 2269 0168 9F       		.byte	0x9f
 2270 0169 1A000000 		.4byte	.LVL26
 2271 016d 24000000 		.4byte	.LVL29
 2272 0171 0300     		.2byte	0x3
 2273 0173 09       		.byte	0x9
 2274 0174 C2       		.byte	0xc2
 2275 0175 9F       		.byte	0x9f
 2276 0176 26000000 		.4byte	.LVL30
 2277 017a 2F000000 		.4byte	.LVL31-1
 2278 017e 0100     		.2byte	0x1
 2279 0180 52       		.byte	0x52
 2280 0181 00000000 		.4byte	0
 2281 0185 00000000 		.4byte	0
 2282              	.LLST10:
 2283 0189 00000000 		.4byte	.LVL38
 2284 018d 14000000 		.4byte	.LVL40
 2285 0191 0100     		.2byte	0x1
 2286 0193 50       		.byte	0x50
 2287 0194 14000000 		.4byte	.LVL40
 2288 0198 24000000 		.4byte	.LFE8
 2289 019c 0400     		.2byte	0x4
 2290 019e F3       		.byte	0xf3
 2291 019f 01       		.uleb128 0x1
 2292 01a0 50       		.byte	0x50
 2293 01a1 9F       		.byte	0x9f
 2294 01a2 00000000 		.4byte	0
 2295 01a6 00000000 		.4byte	0
 2296              	.LLST11:
 2297 01aa 06000000 		.4byte	.LVL39
 2298 01ae 17000000 		.4byte	.LVL41-1
 2299 01b2 0500     		.2byte	0x5
 2300 01b4 73       		.byte	0x73
 2301 01b5 00       		.sleb128 0
 2302 01b6 31       		.byte	0x31
 2303 01b7 1A       		.byte	0x1a
 2304 01b8 9F       		.byte	0x9f
 2305 01b9 00000000 		.4byte	0
 2306 01bd 00000000 		.4byte	0
 2307              	.LLST12:
 2308 01c1 04000000 		.4byte	.LVL42
 2309 01c5 0A000000 		.4byte	.LVL43
 2310 01c9 0100     		.2byte	0x1
 2311 01cb 50       		.byte	0x50
 2312 01cc 00000000 		.4byte	0
 2313 01d0 00000000 		.4byte	0
 2314              	.LLST13:
 2315 01d4 00000000 		.4byte	.LVL45
 2316 01d8 04000000 		.4byte	.LVL46
 2317 01dc 0100     		.2byte	0x1
 2318 01de 50       		.byte	0x50
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 58


 2319 01df 04000000 		.4byte	.LVL46
 2320 01e3 10000000 		.4byte	.LFE13
 2321 01e7 0400     		.2byte	0x4
 2322 01e9 F3       		.byte	0xf3
 2323 01ea 01       		.uleb128 0x1
 2324 01eb 50       		.byte	0x50
 2325 01ec 9F       		.byte	0x9f
 2326 01ed 00000000 		.4byte	0
 2327 01f1 00000000 		.4byte	0
 2328              	.LLST14:
 2329 01f5 00000000 		.4byte	.LVL48
 2330 01f9 20000000 		.4byte	.LVL52
 2331 01fd 0100     		.2byte	0x1
 2332 01ff 50       		.byte	0x50
 2333 0200 20000000 		.4byte	.LVL52
 2334 0204 22000000 		.4byte	.LVL53
 2335 0208 0400     		.2byte	0x4
 2336 020a F3       		.byte	0xf3
 2337 020b 01       		.uleb128 0x1
 2338 020c 50       		.byte	0x50
 2339 020d 9F       		.byte	0x9f
 2340 020e 22000000 		.4byte	.LVL53
 2341 0212 44000000 		.4byte	.LVL54
 2342 0216 0100     		.2byte	0x1
 2343 0218 50       		.byte	0x50
 2344 0219 00000000 		.4byte	0
 2345 021d 00000000 		.4byte	0
 2346              	.LLST15:
 2347 0221 44000000 		.4byte	.LVL54
 2348 0225 46000000 		.4byte	.LVL55
 2349 0229 0100     		.2byte	0x1
 2350 022b 50       		.byte	0x50
 2351 022c 46000000 		.4byte	.LVL55
 2352 0230 54000000 		.4byte	.LFE15
 2353 0234 0600     		.2byte	0x6
 2354 0236 72       		.byte	0x72
 2355 0237 00       		.sleb128 0
 2356 0238 73       		.byte	0x73
 2357 0239 00       		.sleb128 0
 2358 023a 1B       		.byte	0x1b
 2359 023b 9F       		.byte	0x9f
 2360 023c 00000000 		.4byte	0
 2361 0240 00000000 		.4byte	0
 2362              	.LLST16:
 2363 0244 14000000 		.4byte	.LVL49
 2364 0248 16000000 		.4byte	.LVL50
 2365 024c 0100     		.2byte	0x1
 2366 024e 53       		.byte	0x53
 2367 024f 1A000000 		.4byte	.LVL51
 2368 0253 54000000 		.4byte	.LFE15
 2369 0257 0100     		.2byte	0x1
 2370 0259 53       		.byte	0x53
 2371 025a 00000000 		.4byte	0
 2372 025e 00000000 		.4byte	0
 2373              	.LLST17:
 2374 0262 00000000 		.4byte	.LVL56
 2375 0266 20000000 		.4byte	.LVL60
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 59


 2376 026a 0100     		.2byte	0x1
 2377 026c 50       		.byte	0x50
 2378 026d 20000000 		.4byte	.LVL60
 2379 0271 28000000 		.4byte	.LVL61
 2380 0275 0600     		.2byte	0x6
 2381 0277 70       		.byte	0x70
 2382 0278 00       		.sleb128 0
 2383 0279 73       		.byte	0x73
 2384 027a 00       		.sleb128 0
 2385 027b 1C       		.byte	0x1c
 2386 027c 9F       		.byte	0x9f
 2387 027d 00000000 		.4byte	0
 2388 0281 00000000 		.4byte	0
 2389              	.LLST18:
 2390 0285 16000000 		.4byte	.LVL57
 2391 0289 18000000 		.4byte	.LVL58
 2392 028d 0100     		.2byte	0x1
 2393 028f 52       		.byte	0x52
 2394 0290 1C000000 		.4byte	.LVL59
 2395 0294 35000000 		.4byte	.LVL62-1
 2396 0298 0100     		.2byte	0x1
 2397 029a 52       		.byte	0x52
 2398 029b 00000000 		.4byte	0
 2399 029f 00000000 		.4byte	0
 2400              	.LLST19:
 2401 02a3 00000000 		.4byte	.LVL63
 2402 02a7 22000000 		.4byte	.LVL67
 2403 02ab 0100     		.2byte	0x1
 2404 02ad 50       		.byte	0x50
 2405 02ae 22000000 		.4byte	.LVL67
 2406 02b2 24000000 		.4byte	.LVL68
 2407 02b6 0100     		.2byte	0x1
 2408 02b8 50       		.byte	0x50
 2409 02b9 00000000 		.4byte	0
 2410 02bd 00000000 		.4byte	0
 2411              	.LLST20:
 2412 02c1 16000000 		.4byte	.LVL64
 2413 02c5 18000000 		.4byte	.LVL65
 2414 02c9 0100     		.2byte	0x1
 2415 02cb 55       		.byte	0x55
 2416 02cc 1C000000 		.4byte	.LVL66
 2417 02d0 40000000 		.4byte	.LVL73
 2418 02d4 0100     		.2byte	0x1
 2419 02d6 55       		.byte	0x55
 2420 02d7 00000000 		.4byte	0
 2421 02db 00000000 		.4byte	0
 2422              		.section	.debug_aranges,"",%progbits
 2423 0000 A4000000 		.4byte	0xa4
 2424 0004 0200     		.2byte	0x2
 2425 0006 00000000 		.4byte	.Ldebug_info0
 2426 000a 04       		.byte	0x4
 2427 000b 00       		.byte	0
 2428 000c 0000     		.2byte	0
 2429 000e 0000     		.2byte	0
 2430 0010 00000000 		.4byte	.LFB12
 2431 0014 68000000 		.4byte	.LFE12-.LFB12
 2432 0018 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 60


 2433 001c 90000000 		.4byte	.LFE2-.LFB2
 2434 0020 00000000 		.4byte	.LFB3
 2435 0024 48000000 		.4byte	.LFE3-.LFB3
 2436 0028 00000000 		.4byte	.LFB4
 2437 002c 18000000 		.4byte	.LFE4-.LFB4
 2438 0030 00000000 		.4byte	.LFB5
 2439 0034 38000000 		.4byte	.LFE5-.LFB5
 2440 0038 00000000 		.4byte	.LFB1
 2441 003c 3C000000 		.4byte	.LFE1-.LFB1
 2442 0040 00000000 		.4byte	.LFB0
 2443 0044 1C000000 		.4byte	.LFE0-.LFB0
 2444 0048 00000000 		.4byte	.LFB6
 2445 004c 10000000 		.4byte	.LFE6-.LFB6
 2446 0050 00000000 		.4byte	.LFB7
 2447 0054 10000000 		.4byte	.LFE7-.LFB7
 2448 0058 00000000 		.4byte	.LFB8
 2449 005c 24000000 		.4byte	.LFE8-.LFB8
 2450 0060 00000000 		.4byte	.LFB9
 2451 0064 18000000 		.4byte	.LFE9-.LFB9
 2452 0068 00000000 		.4byte	.LFB10
 2453 006c 18000000 		.4byte	.LFE10-.LFB10
 2454 0070 00000000 		.4byte	.LFB11
 2455 0074 0C000000 		.4byte	.LFE11-.LFB11
 2456 0078 00000000 		.4byte	.LFB13
 2457 007c 10000000 		.4byte	.LFE13-.LFB13
 2458 0080 00000000 		.4byte	.LFB14
 2459 0084 0C000000 		.4byte	.LFE14-.LFB14
 2460 0088 00000000 		.4byte	.LFB15
 2461 008c 54000000 		.4byte	.LFE15-.LFB15
 2462 0090 00000000 		.4byte	.LFB16
 2463 0094 48000000 		.4byte	.LFE16-.LFB16
 2464 0098 00000000 		.4byte	.LFB17
 2465 009c 50000000 		.4byte	.LFE17-.LFB17
 2466 00a0 00000000 		.4byte	0
 2467 00a4 00000000 		.4byte	0
 2468              		.section	.debug_ranges,"",%progbits
 2469              	.Ldebug_ranges0:
 2470 0000 00000000 		.4byte	.LFB12
 2471 0004 68000000 		.4byte	.LFE12
 2472 0008 00000000 		.4byte	.LFB2
 2473 000c 90000000 		.4byte	.LFE2
 2474 0010 00000000 		.4byte	.LFB3
 2475 0014 48000000 		.4byte	.LFE3
 2476 0018 00000000 		.4byte	.LFB4
 2477 001c 18000000 		.4byte	.LFE4
 2478 0020 00000000 		.4byte	.LFB5
 2479 0024 38000000 		.4byte	.LFE5
 2480 0028 00000000 		.4byte	.LFB1
 2481 002c 3C000000 		.4byte	.LFE1
 2482 0030 00000000 		.4byte	.LFB0
 2483 0034 1C000000 		.4byte	.LFE0
 2484 0038 00000000 		.4byte	.LFB6
 2485 003c 10000000 		.4byte	.LFE6
 2486 0040 00000000 		.4byte	.LFB7
 2487 0044 10000000 		.4byte	.LFE7
 2488 0048 00000000 		.4byte	.LFB8
 2489 004c 24000000 		.4byte	.LFE8
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 61


 2490 0050 00000000 		.4byte	.LFB9
 2491 0054 18000000 		.4byte	.LFE9
 2492 0058 00000000 		.4byte	.LFB10
 2493 005c 18000000 		.4byte	.LFE10
 2494 0060 00000000 		.4byte	.LFB11
 2495 0064 0C000000 		.4byte	.LFE11
 2496 0068 00000000 		.4byte	.LFB13
 2497 006c 10000000 		.4byte	.LFE13
 2498 0070 00000000 		.4byte	.LFB14
 2499 0074 0C000000 		.4byte	.LFE14
 2500 0078 00000000 		.4byte	.LFB15
 2501 007c 54000000 		.4byte	.LFE15
 2502 0080 00000000 		.4byte	.LFB16
 2503 0084 48000000 		.4byte	.LFE16
 2504 0088 00000000 		.4byte	.LFB17
 2505 008c 50000000 		.4byte	.LFE17
 2506 0090 00000000 		.4byte	0
 2507 0094 00000000 		.4byte	0
 2508              		.section	.debug_line,"",%progbits
 2509              	.Ldebug_line0:
 2510 0000 1D020000 		.section	.debug_str,"MS",%progbits,1
 2510      02006A00 
 2510      00000201 
 2510      FB0E0D00 
 2510      01010101 
 2511              	.LASF12:
 2512 0000 75696E74 		.ascii	"uint16\000"
 2512      313600
 2513              	.LASF70:
 2514 0007 4144435F 		.ascii	"ADC_SAR_1_GetResult8\000"
 2514      5341525F 
 2514      315F4765 
 2514      74526573 
 2514      756C7438 
 2515              	.LASF62:
 2516 001c 43794578 		.ascii	"CyExitCriticalSection\000"
 2516      69744372 
 2516      69746963 
 2516      616C5365 
 2516      6374696F 
 2517              	.LASF66:
 2518 0032 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2518      4320342E 
 2518      382E3420 
 2518      32303134 
 2518      30353236 
 2519 0065 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2519      20726576 
 2519      6973696F 
 2519      6E203231 
 2519      31333538 
 2520 0098 67202D66 		.ascii	"g -ffunction-sections\000"
 2520      66756E63 
 2520      74696F6E 
 2520      2D736563 
 2520      74696F6E 
 2521              	.LASF25:
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 62


 2522 00ae 636F756E 		.ascii	"counts\000"
 2522      747300
 2523              	.LASF69:
 2524 00b5 4144435F 		.ascii	"ADC_SAR_1_CalcGain\000"
 2524      5341525F 
 2524      315F4361 
 2524      6C634761 
 2524      696E00
 2525              	.LASF67:
 2526 00c8 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_1.c\000"
 2526      6E657261 
 2526      7465645F 
 2526      536F7572 
 2526      63655C50 
 2527              	.LASF8:
 2528 00ed 6C6F6E67 		.ascii	"long long unsigned int\000"
 2528      206C6F6E 
 2528      6720756E 
 2528      7369676E 
 2528      65642069 
 2529              	.LASF7:
 2530 0104 6C6F6E67 		.ascii	"long long int\000"
 2530      206C6F6E 
 2530      6720696E 
 2530      7400
 2531              	.LASF1:
 2532 0112 7369676E 		.ascii	"signed char\000"
 2532      65642063 
 2532      68617200 
 2533              	.LASF16:
 2534 011e 696E7433 		.ascii	"int32\000"
 2534      3200
 2535              	.LASF5:
 2536 0124 6C6F6E67 		.ascii	"long int\000"
 2536      20696E74 
 2536      00
 2537              	.LASF56:
 2538 012d 4144435F 		.ascii	"ADC_SAR_1_offset\000"
 2538      5341525F 
 2538      315F6F66 
 2538      66736574 
 2538      00
 2539              	.LASF22:
 2540 013e 72656731 		.ascii	"reg16\000"
 2540      3600
 2541              	.LASF11:
 2542 0144 75696E74 		.ascii	"uint8\000"
 2542      3800
 2543              	.LASF61:
 2544 014a 43794465 		.ascii	"CyDelayUs\000"
 2544      6C617955 
 2544      7300
 2545              	.LASF19:
 2546 0154 646F7562 		.ascii	"double\000"
 2546      6C6500
 2547              	.LASF13:
 2548 015b 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 63


 2548      333200
 2549              	.LASF51:
 2550 0162 636F756E 		.ascii	"countsPer10Volt\000"
 2550      74735065 
 2550      72313056 
 2550      6F6C7400 
 2551              	.LASF65:
 2552 0172 4379496E 		.ascii	"CyIntSetVector\000"
 2552      74536574 
 2552      56656374 
 2552      6F7200
 2553              	.LASF39:
 2554 0181 7265744D 		.ascii	"retMode\000"
 2554      6F646500 
 2555              	.LASF0:
 2556 0189 756E7369 		.ascii	"unsigned int\000"
 2556      676E6564 
 2556      20696E74 
 2556      00
 2557              	.LASF71:
 2558 0196 75566F6C 		.ascii	"uVolts\000"
 2558      747300
 2559              	.LASF6:
 2560 019d 6C6F6E67 		.ascii	"long unsigned int\000"
 2560      20756E73 
 2560      69676E65 
 2560      6420696E 
 2560      7400
 2561              	.LASF54:
 2562 01af 766F6C74 		.ascii	"volts\000"
 2562      7300
 2563              	.LASF72:
 2564 01b5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2564      74657243 
 2564      72697469 
 2564      63616C53 
 2564      65637469 
 2565              	.LASF4:
 2566 01cc 73686F72 		.ascii	"short unsigned int\000"
 2566      7420756E 
 2566      7369676E 
 2566      65642069 
 2566      6E7400
 2567              	.LASF35:
 2568 01df 4144435F 		.ascii	"ADC_SAR_1_Init\000"
 2568      5341525F 
 2568      315F496E 
 2568      697400
 2569              	.LASF14:
 2570 01ee 696E7438 		.ascii	"int8\000"
 2570      00
 2571              	.LASF50:
 2572 01f3 6D566F6C 		.ascii	"mVolts\000"
 2572      747300
 2573              	.LASF23:
 2574 01fa 72656733 		.ascii	"reg32\000"
 2574      3200
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 64


 2575              	.LASF57:
 2576 0200 4144435F 		.ascii	"ADC_SAR_1_countsPerVolt\000"
 2576      5341525F 
 2576      315F636F 
 2576      756E7473 
 2576      50657256 
 2577              	.LASF17:
 2578 0218 666C6F61 		.ascii	"float32\000"
 2578      74333200 
 2579              	.LASF9:
 2580 0220 73697A65 		.ascii	"sizetype\000"
 2580      74797065 
 2580      00
 2581              	.LASF34:
 2582 0229 4144435F 		.ascii	"ADC_SAR_1_SetResolution\000"
 2582      5341525F 
 2582      315F5365 
 2582      74526573 
 2582      6F6C7574 
 2583              	.LASF52:
 2584 0241 4144435F 		.ascii	"ADC_SAR_1_CountsTo_uVolts\000"
 2584      5341525F 
 2584      315F436F 
 2584      756E7473 
 2584      546F5F75 
 2585              	.LASF63:
 2586 025b 4144435F 		.ascii	"ADC_SAR_1_theACLK_SetModeRegister\000"
 2586      5341525F 
 2586      315F7468 
 2586      6541434C 
 2586      4B5F5365 
 2587              	.LASF36:
 2588 027d 4144435F 		.ascii	"ADC_SAR_1_Start\000"
 2588      5341525F 
 2588      315F5374 
 2588      61727400 
 2589              	.LASF20:
 2590 028d 696E7436 		.ascii	"int64\000"
 2590      3400
 2591              	.LASF43:
 2592 0293 4144435F 		.ascii	"ADC_SAR_1_SetOffset\000"
 2592      5341525F 
 2592      315F5365 
 2592      744F6666 
 2592      73657400 
 2593              	.LASF64:
 2594 02a7 4379496E 		.ascii	"CyIntSetPriority\000"
 2594      74536574 
 2594      5072696F 
 2594      72697479 
 2594      00
 2595              	.LASF18:
 2596 02b8 666C6F61 		.ascii	"float\000"
 2596      7400
 2597              	.LASF55:
 2598 02be 4144435F 		.ascii	"ADC_SAR_1_initVar\000"
 2598      5341525F 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 65


 2598      315F696E 
 2598      69745661 
 2598      7200
 2599              	.LASF33:
 2600 02d0 706F7765 		.ascii	"power\000"
 2600      7200
 2601              	.LASF21:
 2602 02d6 72656738 		.ascii	"reg8\000"
 2602      00
 2603              	.LASF60:
 2604 02db 43794861 		.ascii	"CyHalt\000"
 2604      6C7400
 2605              	.LASF2:
 2606 02e2 756E7369 		.ascii	"unsigned char\000"
 2606      676E6564 
 2606      20636861 
 2606      7200
 2607              	.LASF26:
 2608 02f0 64696666 		.ascii	"diff_zero\000"
 2608      5F7A6572 
 2608      6F00
 2609              	.LASF48:
 2610 02fa 4144435F 		.ascii	"ADC_SAR_1_CountsTo_mVolts\000"
 2610      5341525F 
 2610      315F436F 
 2610      756E7473 
 2610      546F5F6D 
 2611              	.LASF3:
 2612 0314 73686F72 		.ascii	"short int\000"
 2612      7420696E 
 2612      7400
 2613              	.LASF46:
 2614 031e 61646347 		.ascii	"adcGain\000"
 2614      61696E00 
 2615              	.LASF29:
 2616 0326 4144435F 		.ascii	"ADC_SAR_1_Enable\000"
 2616      5341525F 
 2616      315F456E 
 2616      61626C65 
 2616      00
 2617              	.LASF68:
 2618 0337 433A5C55 		.ascii	"C:\\Users\\jason\\Documents\\PSoC Creator\\Hummingb"
 2618      73657273 
 2618      5C6A6173 
 2618      6F6E5C44 
 2618      6F63756D 
 2619 0365 69726420 		.ascii	"ird Test\\Hummingbird Test.cydsn\000"
 2619      54657374 
 2619      5C48756D 
 2619      6D696E67 
 2619      62697264 
 2620              	.LASF47:
 2621 0385 4144435F 		.ascii	"ADC_SAR_1_SetScaledGain\000"
 2621      5341525F 
 2621      315F5365 
 2621      74536361 
 2621      6C656447 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 66


 2622              	.LASF42:
 2623 039d 4144435F 		.ascii	"ADC_SAR_1_GetResult16\000"
 2623      5341525F 
 2623      315F4765 
 2623      74526573 
 2623      756C7431 
 2624              	.LASF32:
 2625 03b3 7265736F 		.ascii	"resolution\000"
 2625      6C757469 
 2625      6F6E00
 2626              	.LASF10:
 2627 03be 63686172 		.ascii	"char\000"
 2627      00
 2628              	.LASF24:
 2629 03c3 63796973 		.ascii	"cyisraddress\000"
 2629      72616464 
 2629      72657373 
 2629      00
 2630              	.LASF53:
 2631 03d0 4144435F 		.ascii	"ADC_SAR_1_CountsTo_Volts\000"
 2631      5341525F 
 2631      315F436F 
 2631      756E7473 
 2631      546F5F56 
 2632              	.LASF44:
 2633 03e9 6F666673 		.ascii	"offset\000"
 2633      657400
 2634              	.LASF38:
 2635 03f0 4144435F 		.ascii	"ADC_SAR_1_StopConvert\000"
 2635      5341525F 
 2635      315F5374 
 2635      6F70436F 
 2635      6E766572 
 2636              	.LASF49:
 2637 0406 61646343 		.ascii	"adcCounts\000"
 2637      6F756E74 
 2637      7300
 2638              	.LASF28:
 2639 0410 656E6162 		.ascii	"enableInterrupts\000"
 2639      6C65496E 
 2639      74657272 
 2639      75707473 
 2639      00
 2640              	.LASF40:
 2641 0421 73746174 		.ascii	"status\000"
 2641      757300
 2642              	.LASF41:
 2643 0428 4144435F 		.ascii	"ADC_SAR_1_IsEndConversion\000"
 2643      5341525F 
 2643      315F4973 
 2643      456E6443 
 2643      6F6E7665 
 2644              	.LASF31:
 2645 0442 4144435F 		.ascii	"ADC_SAR_1_SetPower\000"
 2645      5341525F 
 2645      315F5365 
 2645      74506F77 
ARM GAS  C:\Users\jason\AppData\Local\Temp\ccZj8gMh.s 			page 67


 2645      657200
 2646              	.LASF45:
 2647 0455 4144435F 		.ascii	"ADC_SAR_1_SetGain\000"
 2647      5341525F 
 2647      315F5365 
 2647      74476169 
 2647      6E00
 2648              	.LASF15:
 2649 0467 696E7431 		.ascii	"int16\000"
 2649      3600
 2650              	.LASF58:
 2651 046d 4144435F 		.ascii	"ADC_SAR_1_countsPer10Volt\000"
 2651      5341525F 
 2651      315F636F 
 2651      756E7473 
 2651      50657231 
 2652              	.LASF37:
 2653 0487 4144435F 		.ascii	"ADC_SAR_1_StartConvert\000"
 2653      5341525F 
 2653      315F5374 
 2653      61727443 
 2653      6F6E7665 
 2654              	.LASF27:
 2655 049e 746D7052 		.ascii	"tmpReg\000"
 2655      656700
 2656              	.LASF59:
 2657 04a5 4144435F 		.ascii	"ADC_SAR_1_shift\000"
 2657      5341525F 
 2657      315F7368 
 2657      69667400 
 2658              	.LASF30:
 2659 04b5 4144435F 		.ascii	"ADC_SAR_1_Stop\000"
 2659      5341525F 
 2659      315F5374 
 2659      6F7000
 2660              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
