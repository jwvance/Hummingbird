C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USB_MIDI
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\USB_midi.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\USB_midi.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.
                    -\DP8051\DP8051_Keil_951\Debug/USB_midi.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\USB_midi.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USB_midi.c
   3          * Version 2.70
   4          *
   5          * Description:
   6          *  MIDI Streaming request handler.
   7          *  This file contains routines for sending and receiving MIDI
   8          *  messages, and handles running status in both directions.
   9          *
  10          * Related Document:
  11          *  Universal Serial Bus Device Class Definition for MIDI Devices Release 1.0
  12          *  MIDI 1.0 Detailed Specification Document Version 4.2
  13          *
  14          ********************************************************************************
  15          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  16          * You may use this file only in accordance with the license, terms, conditions,
  17          * disclaimers, and limitations in the end user license agreement accompanying
  18          * the software package with which this file was provided.
  19          *******************************************************************************/
  20          
  21          #include "USB.h"
  22          
  23          #if defined(USB_ENABLE_MIDI_STREAMING)
  24          
  25          #include "USB_midi.h"
  26          #include "USB_pvt.h"
  27          
  28          
  29          /***************************************
  30          *    MIDI Constants
  31          ***************************************/
  32          
  33          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
  34              /* The Size of the MIDI messages (MIDI Table 4-1) */
  35              static const uint8 CYCODE USB_MIDI_SIZE[] = {
  36              /*  Miscellaneous function codes(Reserved)  */ 0x03u,
  37              /*  Cable events (Reserved)                 */ 0x03u,
  38              /*  Two-byte System Common messages         */ 0x02u,
  39              /*  Three-byte System Common messages       */ 0x03u,
  40              /*  SysEx starts or continues               */ 0x03u,
  41              /*  Single-byte System Common Message or
  42                  SysEx ends with following single byte   */ 0x01u,
  43              /*  SysEx ends with following two bytes     */ 0x02u,
  44              /*  SysEx ends with following three bytes   */ 0x03u,
  45              /*  Note-off                                */ 0x03u,
  46              /*  Note-on                                 */ 0x03u,
  47              /*  Poly-KeyPress                           */ 0x03u,
  48              /*  Control Change                          */ 0x03u,
  49              /*  Program Change                          */ 0x02u,
  50              /*  Channel Pressure                        */ 0x02u,
  51              /*  PitchBend Change                        */ 0x03u,
  52              /*  Single Byte                             */ 0x01u
  53              };
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 2   

  54          #endif  /* USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */
  55          
  56          
  57          
  58          /***************************************
  59          *  Global variables
  60          ***************************************/
  61          
  62          #if (USB_MIDI_IN_BUFF_SIZE > 0)
  63              #if (USB_MIDI_IN_BUFF_SIZE >= 256)
                      volatile uint16 USB_midiInPointer;                            /* Input endpoint buffer pointer */
                  #else
  66                  volatile uint8 USB_midiInPointer;                             /* Input endpoint buffer pointer */
  67              #endif /* (USB_MIDI_IN_BUFF_SIZE >= 256) */
  68              volatile uint8 USB_midi_in_ep;                                    /* Input endpoint number */
  69              uint8 USB_midiInBuffer[USB_MIDI_IN_BUFF_SIZE];       /* Input endpoint buffer */
  70          #endif /* (USB_MIDI_IN_BUFF_SIZE > 0) */
  71          
  72          #if (USB_MIDI_OUT_BUFF_SIZE > 0)
  73              volatile uint8 USB_midi_out_ep;                                   /* Output endpoint number */
  74              uint8 USB_midiOutBuffer[USB_MIDI_OUT_BUFF_SIZE];     /* Output endpoint buffer */
  75          #endif /* (USB_MIDI_OUT_BUFF_SIZE > 0) */
  76          
  77          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
  78              static USB_MIDI_RX_STATUS USB_MIDI1_Event;            /* MIDI RX status structure */
  79              static volatile uint8 USB_MIDI1_TxRunStat;                         /* MIDI Output running status */
  80              volatile uint8 USB_MIDI1_InqFlags;                                 /* Device inquiry flag */
  81          
  82              #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
  83                  static USB_MIDI_RX_STATUS USB_MIDI2_Event;        /* MIDI RX status structure */
  84                  static volatile uint8 USB_MIDI2_TxRunStat;                     /* MIDI Output running status */
  85                  volatile uint8 USB_MIDI2_InqFlags;                             /* Device inquiry flag */
  86              #endif /* (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF) */
  87          #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
  88          
  89          
  90          /***************************************
  91          * Custom Declarations
  92          ***************************************/
  93          
  94          /* `#START MIDI_CUSTOM_DECLARATIONS` Place your declaration here */
  95          #include "LED_OutA.h"
  96          #include "LED_OutB.h"
  97          /* `#END` */
  98          
  99          
 100          /***************************************
 101          * Optional MIDI APIs
 102          ***************************************/
 103          #if (USB_ENABLE_MIDI_API != 0u)
 104          
 105          
 106          /*******************************************************************************
 107          * Function Name: USB_MIDI_EP_Init
 108          ********************************************************************************
 109          *
 110          * Summary:
 111          *  This function initializes the MIDI interface and UART(s) to be ready to
 112          *   receive data from the PC and MIDI ports.
 113          *
 114          * Parameters:
 115          *  None
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 3   

 116          *
 117          * Return:
 118          *  None
 119          *
 120          * Global variables:
 121          *  USB_midiInBuffer: This buffer is used for saving and combining
 122          *    the received data from UART(s) and(or) generated internally by
 123          *    PutUsbMidiIn() function messages. USB_MIDI_IN_EP_Service()
 124          *    function transfers the data from this buffer to the PC.
 125          *  USB_midiOutBuffer: This buffer is used by the
 126          *    USB_MIDI_OUT_EP_Service() function for saving the received
 127          *    from the PC data, then the data are parsed and transferred to UART(s)
 128          *    buffer and to the internal processing by the
 129          *    USB_callbackLocalMidiEvent function.
 130          *  USB_midi_out_ep: Used as an OUT endpoint number.
 131          *  USB_midi_in_ep: Used as an IN endpoint number.
 132          *   USB_midiInPointer: Initialized to zero.
 133          *
 134          * Reentrant:
 135          *  No
 136          *
 137          *******************************************************************************/
 138          void USB_MIDI_EP_Init(void) 
 139          {
 140   1          #if (USB_MIDI_IN_BUFF_SIZE > 0)
 141   1             USB_midiInPointer = 0u;
 142   1          #endif /* (USB_MIDI_IN_BUFF_SIZE > 0) */
 143   1      
 144   1          #if(USB_EP_MM == USB__EP_DMAAUTO)
                      #if (USB_MIDI_IN_BUFF_SIZE > 0)
                          /* Init DMA configurations for IN EP*/
                          USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,
                                                                                              USB_MIDI_IN_BUFF_SIZE);
              
                      #endif  /* (USB_MIDI_IN_BUFF_SIZE > 0) */
                      #if (USB_MIDI_OUT_BUFF_SIZE > 0)
                          /* Init DMA configurations for OUT EP*/
                          (void)USB_ReadOutEP(USB_midi_out_ep, USB_midiOutBuffer,
                                                                                              USB_MIDI_OUT_BUFF_SIZE);
                      #endif /* (USB_MIDI_OUT_BUFF_SIZE > 0) */
                  #endif /* (USB_EP_MM == USB__EP_DMAAUTO) */
 157   1      
 158   1          #if (USB_MIDI_OUT_BUFF_SIZE > 0)
 159   1              USB_EnableOutEP(USB_midi_out_ep);
 160   1          #endif /* (USB_MIDI_OUT_BUFF_SIZE > 0) */
 161   1      
 162   1          /* Initialize the MIDI port(s) */
 163   1          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 164   1              USB_MIDI_Init();
 165   1          #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 166   1      }
 167          
 168          #if (USB_MIDI_OUT_BUFF_SIZE > 0)
 169          
 170          
 171              /*******************************************************************************
 172              * Function Name: USB_MIDI_OUT_EP_Service
 173              ********************************************************************************
 174              *
 175              * Summary:
 176              *  Services the USB MIDI OUT endpoints.
 177              *  This function is called from OUT EP ISR. It transfers the received from PC
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 4   

 178              *  data to the external MIDI port(UART TX buffer) and calls the
 179              *  USB_callbackLocalMidiEvent() function to internal process
 180              *  of the MIDI data.
 181              *  This function is blocked by UART, if not enough space is available in UART
 182              *  TX buffer. Therefore it is recommended to use large UART TX buffer size.
 183              *
 184              * Parameters:
 185              *  None
 186              *
 187              * Return:
 188              *  None
 189              *
 190              * Global variables:
 191              *  USB_midiOutBuffer: Used as temporary buffer between USB internal
 192              *   memory and UART TX buffer.
 193              *  USB_midi_out_ep: Used as an OUT endpoint number.
 194              *
 195              * Reentrant:
 196              *  No
 197              *
 198              *******************************************************************************/
 199              void USB_MIDI_OUT_EP_Service(void) CYREENTRANT
 200              {
 201   1              #if USB_MIDI_OUT_BUFF_SIZE >= 256
                          uint16 outLength;
                          uint16 outPointer;
                      #else
 205   1                  uint8 outLength;
 206   1                  uint8 outPointer;
 207   1              #endif /*  USB_MIDI_OUT_BUFF_SIZE >=256 */
 208   1      
 209   1              uint8 dmaState = 0u;
 210   1      
 211   1              /* Service the USB MIDI output endpoint */
 212   1              if (USB_GetEPState(USB_midi_out_ep) == USB_OUT_BUFFER_FULL)
 213   1              {
 214   2                  #if(USB_MIDI_OUT_BUFF_SIZE >= 256)
                              outLength = USB_GetEPCount(USB_midi_out_ep);
                          #else
 217   2                      outLength = (uint8)USB_GetEPCount(USB_midi_out_ep);
 218   2                  #endif /* (USB_MIDI_OUT_BUFF_SIZE >= 256) */
 219   2                  
 220   2                  #if(USB_EP_MM != USB__EP_DMAAUTO)
 221   2                      #if (USB_MIDI_OUT_BUFF_SIZE >= 256)
                                  outLength = USB_ReadOutEP(USB_midi_out_ep,
                                                                                  USB_midiOutBuffer, outLength);
                              #else
 225   2                          outLength = (uint8)USB_ReadOutEP(USB_midi_out_ep,
 226   2                                                                          USB_midiOutBuffer, (uint16)outLength);
 227   2                      #endif /* (USB_MIDI_OUT_BUFF_SIZE >= 256) */
 228   2                      
 229   2                      #if(USB_EP_MM == USB__EP_DMAMANUAL)
                                  do  /* wait for DMA transfer complete */
                                  {
                                      (void) CyDmaChStatus(USB_DmaChan[USB_midi_out_ep], NULL, &dmaState);
                                  }
                                  while((dmaState & (STATUS_TD_ACTIVE | STATUS_CHAIN_ACTIVE)) != 0u);
                              #endif /* (USBFS_EP_MM == USBFS__EP_DMAMANUAL) */
 236   2                      
 237   2                  #endif /* (USB_EP_MM != USB__EP_DMAAUTO) */
 238   2                  
 239   2                  if(dmaState != 0u)
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 5   

 240   2                  {
 241   3                      /* Suppress compiler warning */
 242   3                  }
 243   2                  
 244   2                  if (outLength >= USB_EVENT_LENGTH)
 245   2                  {
 246   3                      outPointer = 0u;
 247   3                      while (outPointer < outLength)
 248   3                      {
 249   4                          /* In some OS OUT packet could be appended by nulls which could be skipped */
 250   4                          if (USB_midiOutBuffer[outPointer] == 0u)
 251   4                          {
 252   5                              break;
 253   5                          }
 254   4                          /* Route USB MIDI to the External connection */
 255   4                          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 256   4                              if ((USB_midiOutBuffer[outPointer] & USB_CABLE_MASK) ==
 257   4                                  USB_MIDI_CABLE_00)
 258   4                              {
 259   5                                  USB_MIDI1_ProcessUsbOut(&USB_midiOutBuffer[outPointer]);
 260   5                              }
 261   4                              else if ((USB_midiOutBuffer[outPointer] & USB_CABLE_MASK) ==
 262   4                                       USB_MIDI_CABLE_01)
 263   4                              {
 264   5                                  #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 265   5                                      USB_MIDI2_ProcessUsbOut(&USB_midiOutBuffer[outPointer]);
 266   5                                  #endif /*  USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 267   5                              }
 268   4                              else
 269   4                              {
 270   5                                  /* `#START CUSTOM_MIDI_OUT_EP_SERV` Place your code here */
 271   5      
 272   5                                  /* `#END` */
 273   5                              }
 274   4                          #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 275   4      
 276   4                          /* Process any local MIDI output functions */
 277   4                          USB_callbackLocalMidiEvent(
 278   4                              USB_midiOutBuffer[outPointer] & USB_CABLE_MASK,
 279   4                              &USB_midiOutBuffer[outPointer + USB_EVENT_BYTE1]);
 280   4                          outPointer += USB_EVENT_LENGTH;
 281   4                      }
 282   3                  }
 283   2                  #if(USB_EP_MM == USB__EP_DMAAUTO)
                              /* Enable Out EP*/
                              USB_EnableOutEP(USB_midi_out_ep);
                          #endif  /* (USB_EP_MM == USB__EP_DMAAUTO) */
 287   2              }
 288   1          }
 289          
 290          #endif /* #if (USB_MIDI_OUT_BUFF_SIZE > 0) */
 291          
 292          #if (USB_MIDI_IN_BUFF_SIZE > 0)
 293          
 294          
 295              /*******************************************************************************
 296              * Function Name: USB_MIDI_IN_EP_Service
 297              ********************************************************************************
 298              *
 299              * Summary:
 300              *  Services the USB MIDI IN endpoint. Non-blocking.
 301              *  Checks that previous packet was processed by HOST, otherwise service the
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 6   

 302              *  input endpoint on the subsequent call. It is called from the
 303              *  USB_MIDI_IN_Service() and from the
 304              *  USB_PutUsbMidiIn() function.
 305              *
 306              * Parameters:
 307              *  None
 308              *
 309              * Return:
 310              *  None
 311              *
 312              * Global variables:
 313              *  USB_midi_in_ep: Used as an IN endpoint number.
 314              *  USB_midiInBuffer: Function loads the data from this buffer to
 315              *    the USB IN endpoint.
 316              *   USB_midiInPointer: Cleared to zero when data are sent.
 317              *
 318              * Reentrant:
 319              *  No
 320              *
 321              *******************************************************************************/
 322              void USB_MIDI_IN_EP_Service(void) CYREENTRANT
 323              {
 324   1              /* Service the USB MIDI input endpoint */
 325   1              /* Check that previous packet was processed by HOST, otherwise service the USB later */
 326   1              if (USB_midiInPointer != 0u)
 327   1              {
 328   2                  if(USB_GetEPState(USB_midi_in_ep) == USB_EVENT_PENDING)
 329   2                  {
 330   3                  #if(USB_EP_MM != USB__EP_DMAAUTO)
 331   3                      USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,
 332   3                                                                                      (uint16)USB_midiInPointer)
             -;
 333   3                  #else /* USB_EP_MM != USB__EP_DMAAUTO */
                              /* rearm IN EP */
                              USB_LoadInEP(USB_midi_in_ep, NULL, (uint16)USB_midiInPointer);
                          #endif /* (USB_EP_MM != USB__EP_DMAAUTO) */
 337   3      
 338   3                  /* Clear the midiInPointer. For DMA mode, clear this pointer in the ARB ISR when data are move
             -d by DMA */
 339   3                  #if(USB_EP_MM == USB__EP_MANUAL)
 340   3                      USB_midiInPointer = 0u;
 341   3                  #endif /* (USB_EP_MM == USB__EP_MANUAL) */
 342   3                  }
 343   2              }
 344   1          }
 345          
 346          
 347              /*******************************************************************************
 348              * Function Name: USB_MIDI_IN_Service
 349              ********************************************************************************
 350              *
 351              * Summary:
 352              *  Services the traffic from the MIDI input ports (RX UART) and prepare data
 353              *  in USB MIDI IN endpoint buffer.
 354              *  Calls the USB_MIDI_IN_EP_Service() function to sent the
 355              *  data from buffer to PC. Non-blocking. Should be called from main foreground
 356              *  task.
 357              *  This function is not protected from the reentrant calls. When it is required
 358              *  to use this function in UART RX ISR to guaranty low latency, care should be
 359              *  taken to protect from reentrant calls.
 360              *
 361              * Parameters:
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 7   

 362              *  None
 363              *
 364              * Return:
 365              *  None
 366              *
 367              * Global variables:
 368              *   USB_midiInPointer: Cleared to zero when data are sent.
 369              *
 370              * Reentrant:
 371              *  No
 372              *
 373              *******************************************************************************/
 374              void USB_MIDI_IN_Service(void) CYREENTRANT
 375              {
 376   1              /* Service the MIDI UART inputs until either both receivers have no more
 377   1              *  events or until the input endpoint buffer fills up.
 378   1              */
 379   1              #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 380   1                  uint8 m1 = 0u;
 381   1                  uint8 m2 = 0u;
 382   1                  do
 383   1                  {
 384   2                      if (USB_midiInPointer <=
 385   2                          (USB_MIDI_IN_BUFF_SIZE - USB_EVENT_LENGTH))
 386   2                      {
 387   3                          /* Check MIDI1 input port for a complete event */
 388   3                          m1 = USB_MIDI1_GetEvent();
 389   3                          if (m1 != 0u)
 390   3                          {
 391   4                              USB_PrepareInBuffer(m1, (uint8 *)&USB_MIDI1_Event.msgBuff[0],
 392   4                                                          USB_MIDI1_Event.size, USB_MIDI_CABLE_00);
 393   4                          }
 394   3                      }
 395   2      
 396   2                  #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 397   2                      if (USB_midiInPointer <=
 398   2                          (USB_MIDI_IN_BUFF_SIZE - USB_EVENT_LENGTH))
 399   2                      {
 400   3                          /* Check MIDI2 input port for a complete event */
 401   3                          m2 = USB_MIDI2_GetEvent();
 402   3                          if (m2 != 0u)
 403   3                          {
 404   4                              USB_PrepareInBuffer(m2, (uint8 *)&USB_MIDI2_Event.msgBuff[0],
 405   4                                                          USB_MIDI2_Event.size, USB_MIDI_CABLE_01);
 406   4                          }
 407   3                      }
 408   2                  #endif /*  USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 409   2      
 410   2                  }while( (USB_midiInPointer <=
 411   1                          (USB_MIDI_IN_BUFF_SIZE - USB_EVENT_LENGTH)) &&
 412   1                          ((m1 != 0u) || (m2 != 0u)) );
 413   1              #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 414   1      
 415   1              /* Service the USB MIDI input endpoint */
 416   1              USB_MIDI_IN_EP_Service();
 417   1          }
 418          
 419          
 420              /*******************************************************************************
 421              * Function Name: USB_PutUsbMidiIn
 422              ********************************************************************************
 423              *
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 8   

 424              * Summary:
 425              *  Puts one MIDI messages into the USB MIDI In endpoint buffer. These are
 426              *  MIDI input messages to the host. This function is only used if the device
 427              *  has internal MIDI input functionality. USBMIDI_MIDI_IN_Service() function
 428              *  should additionally be called to send the message from local buffer to
 429              *  IN endpoint.
 430              *
 431              * Parameters:
 432              *  ic:   0 = No message (should never happen)
 433              *        1 - 3 = Complete MIDI message in midiMsg
 434              *        3 - IN EP LENGTH = Complete SySEx message(without EOSEX byte) in
 435              *            midiMsg. The length is limited by the max BULK EP size(64)
 436              *        MIDI_SYSEX = Start or continuation of SysEx message
 437              *                     (put event bytes in midiMsg buffer)
 438              *        MIDI_EOSEX = End of SysEx message
 439              *                     (put event bytes in midiMsg buffer)
 440              *        MIDI_TUNEREQ = Tune Request message (single byte system common msg)
 441              *        0xf8 - 0xff = Single byte real-time message
 442              *  midiMsg: pointer to MIDI message.
 443              *  cable:   cable number.
 444              *
 445              * Return:
 446              *  USB_TRUE if error.
 447              *  USB_FALSE if success.
 448              *
 449              * Global variables:
 450              *  USB_midi_in_ep: MIDI IN endpoint number used for sending data.
 451              *  USB_midiInPointer: Checked this variable to see if there is
 452              *    enough free space in the IN endpoint buffer. If buffer is full, initiate
 453              *    sending to PC.
 454              *
 455              * Reentrant:
 456              *  No
 457              *
 458              *******************************************************************************/
 459              uint8 USB_PutUsbMidiIn(uint8 ic, const uint8 midiMsg[], uint8 cable)
 460                                                                          
 461              {
 462   1              uint8 retError = USB_FALSE;
 463   1              uint8 msgIndex;
 464   1      
 465   1              /* Protect PrepareInBuffer() function from concurrent calls */
 466   1              #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 467   1                  MIDI1_UART_DisableRxInt();
 468   1                  #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 469   1                      MIDI2_UART_DisableRxInt();
 470   1                  #endif /* (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF) */
 471   1              #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 472   1      
 473   1              if (USB_midiInPointer >
 474   1                          (USB_EP[USB_midi_in_ep].bufferSize - USB_EVENT_LENGTH))
 475   1              {
 476   2                  USB_MIDI_IN_EP_Service();
 477   2              }
 478   1              if (USB_midiInPointer <=
 479   1                          (USB_EP[USB_midi_in_ep].bufferSize - USB_EVENT_LENGTH))
 480   1              {
 481   2                  if((ic < USB_EVENT_LENGTH) || (ic >= USB_MIDI_STATUS_MASK))
 482   2                  {
 483   3                      USB_PrepareInBuffer(ic, midiMsg, ic, cable);
 484   3                  }
 485   2                  else
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 9   

 486   2                  {   /* Only SysEx message is greater than 4 bytes */
 487   3                      msgIndex = 0u;
 488   3                      do
 489   3                      {
 490   4                          USB_PrepareInBuffer(USB_MIDI_SYSEX, &midiMsg[msgIndex],
 491   4                                                           USB_EVENT_BYTE3, cable);
 492   4                          ic -= USB_EVENT_BYTE3;
 493   4                          msgIndex += USB_EVENT_BYTE3;
 494   4                          if (USB_midiInPointer >
 495   4                              (USB_EP[USB_midi_in_ep].bufferSize - USB_EVENT_LENGTH))
 496   4                          {
 497   5                              USB_MIDI_IN_EP_Service();
 498   5                              if(USB_midiInPointer > 
 499   5                                (USB_EP[USB_midi_in_ep].bufferSize - USB_EVENT_LENGTH))
 500   5                              {
 501   6                                  /* Error condition. HOST is not ready to receive this packet. */
 502   6                                  retError = USB_TRUE;
 503   6                                  break;
 504   6                              }
 505   5                          }
 506   4                      }
 507   3                      while(ic > USB_EVENT_BYTE3);
 508   3      
 509   3                      if(retError == USB_FALSE)
 510   3                      {
 511   4                          USB_PrepareInBuffer(USB_MIDI_EOSEX, midiMsg, ic, cable);
 512   4                      }
 513   3                  }
 514   2              }
 515   1              else
 516   1              {
 517   2                  /* Error condition. HOST is not ready to receive this packet. */
 518   2                  retError = USB_TRUE;
 519   2              }
 520   1      
 521   1              #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 522   1                  MIDI1_UART_EnableRxInt();
 523   1                  #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 524   1                      MIDI2_UART_EnableRxInt();
 525   1                  #endif /* (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF) */
 526   1              #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 527   1      
 528   1              return (retError);
 529   1          }
 530          
 531          
 532              /*******************************************************************************
 533              * Function Name: USB_PrepareInBuffer
 534              ********************************************************************************
 535              *
 536              * Summary:
 537              *  Builds a USB MIDI event in the input endpoint buffer at the current pointer.
 538              *  Puts one MIDI message into the USB MIDI In endpoint buffer.
 539              *
 540              * Parameters:
 541              *  ic:   0 = No message (should never happen)
 542              *        1 - 3 = Complete MIDI message at pMdat[0]
 543              *        MIDI_SYSEX = Start or continuation of SysEx message
 544              *                     (put eventLen bytes in buffer)
 545              *        MIDI_EOSEX = End of SysEx message
 546              *                     (put eventLen bytes in buffer,
 547              *                      and append MIDI_EOSEX)
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 10  

 548              *        MIDI_TUNEREQ = Tune Request message (single byte system common msg)
 549              *        0xf8 - 0xff = Single byte real-time message
 550              *
 551              *  srcBuff: pointer to MIDI data
 552              *  eventLen: number of bytes in MIDI event
 553              *  cable: MIDI source port number
 554              *
 555              * Return:
 556              *  None
 557              *
 558              * Global variables:
 559              *  USB_midiInBuffer: This buffer is used for saving and combine the
 560              *    received from UART(s) and(or) generated internally by
 561              *    USB_PutUsbMidiIn() function messages.
 562              *  USB_midiInPointer: Used as an index for midiInBuffer to
 563              *     write data.
 564              *
 565              * Reentrant:
 566              *  No
 567              *
 568              *******************************************************************************/
 569              void USB_PrepareInBuffer(uint8 ic, const uint8 srcBuff[], uint8 eventLen, uint8 cable)
 570                                                                           CYREENTRANT
 571              {
 572   1              uint8 srcBuffZero;
 573   1              uint8 srcBuffOne;
 574   1      
 575   1              srcBuffZero = srcBuff[0u];
 576   1              srcBuffOne  = srcBuff[1u];
 577   1      
 578   1              if (ic >= (USB_MIDI_STATUS_MASK | USB_MIDI_SINGLE_BYTE_MASK))
 579   1              {
 580   2                  USB_midiInBuffer[USB_midiInPointer] = USB_SINGLE_BYTE | cable;
 581   2                  USB_midiInPointer++;
 582   2                  USB_midiInBuffer[USB_midiInPointer] = ic;
 583   2                  USB_midiInPointer++;
 584   2                  USB_midiInBuffer[USB_midiInPointer] = 0u;
 585   2                  USB_midiInPointer++;
 586   2                  USB_midiInBuffer[USB_midiInPointer] = 0u;
 587   2                  USB_midiInPointer++;
 588   2              }
 589   1              else if((ic < USB_EVENT_LENGTH) || (ic == USB_MIDI_SYSEX))
 590   1              {
 591   2                  if(ic == USB_MIDI_SYSEX)
 592   2                  {
 593   3                      USB_midiInBuffer[USB_midiInPointer] = USB_SYSEX | cable;
 594   3                      USB_midiInPointer++;
 595   3                  }
 596   2                  else if (srcBuffZero < USB_MIDI_SYSEX)
 597   2                  {
 598   3                      USB_midiInBuffer[USB_midiInPointer] = (srcBuffZero >> 4u) | cable;
 599   3                      USB_midiInPointer++;
 600   3                  }
 601   2                  else if (srcBuffZero == USB_MIDI_TUNEREQ)
 602   2                  {
 603   3                      USB_midiInBuffer[USB_midiInPointer] = USB_1BYTE_COMMON | cable;
 604   3                      USB_midiInPointer++;
 605   3                  }
 606   2                  else if ((srcBuffZero == USB_MIDI_QFM) || (srcBuffZero == USB_MIDI_SONGSEL))
 607   2                  {
 608   3                      USB_midiInBuffer[USB_midiInPointer] = USB_2BYTE_COMMON | cable;
 609   3                      USB_midiInPointer++;
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 11  

 610   3                  }
 611   2                  else if (srcBuffZero == USB_MIDI_SPP)
 612   2                  {
 613   3                      USB_midiInBuffer[USB_midiInPointer] = USB_3BYTE_COMMON | cable;
 614   3                      USB_midiInPointer++;
 615   3                  }
 616   2                  else
 617   2                  {
 618   3                  }
 619   2      
 620   2                  USB_midiInBuffer[USB_midiInPointer] = srcBuffZero;
 621   2                  USB_midiInPointer++;
 622   2                  USB_midiInBuffer[USB_midiInPointer] = srcBuffOne;
 623   2                  USB_midiInPointer++;
 624   2                  USB_midiInBuffer[USB_midiInPointer] = srcBuff[2u];
 625   2                  USB_midiInPointer++;
 626   2              }
 627   1              else if (ic == USB_MIDI_EOSEX)
 628   1              {
 629   2                  switch (eventLen)
 630   2                  {
 631   3                      case 0u:
 632   3                          USB_midiInBuffer[USB_midiInPointer] =
 633   3                                                                              USB_SYSEX_ENDS_WITH1 | cable;
 634   3                          USB_midiInPointer++;
 635   3                          USB_midiInBuffer[USB_midiInPointer] = USB_MIDI_EOSEX;
 636   3                          USB_midiInPointer++;
 637   3                          USB_midiInBuffer[USB_midiInPointer] = 0u;
 638   3                          USB_midiInPointer++;
 639   3                          USB_midiInBuffer[USB_midiInPointer] = 0u;
 640   3                          USB_midiInPointer++;
 641   3                          break;
 642   3                      case 1u:
 643   3                          USB_midiInBuffer[USB_midiInPointer] =
 644   3                                                                              USB_SYSEX_ENDS_WITH2 | cable;
 645   3                          USB_midiInPointer++;
 646   3                          USB_midiInBuffer[USB_midiInPointer] = srcBuffZero;
 647   3                          USB_midiInPointer++;
 648   3                          USB_midiInBuffer[USB_midiInPointer] = USB_MIDI_EOSEX;
 649   3                          USB_midiInPointer++;
 650   3                          USB_midiInBuffer[USB_midiInPointer] = 0u;
 651   3                          USB_midiInPointer++;
 652   3                          break;
 653   3                      case 2u:
 654   3                          USB_midiInBuffer[USB_midiInPointer] =
 655   3                                                                              USB_SYSEX_ENDS_WITH3 | cable;
 656   3                          USB_midiInPointer++;
 657   3                          USB_midiInBuffer[USB_midiInPointer] = srcBuffZero;
 658   3                          USB_midiInPointer++;
 659   3                          USB_midiInBuffer[USB_midiInPointer] = srcBuffOne;
 660   3                          USB_midiInPointer++;
 661   3                          USB_midiInBuffer[USB_midiInPointer] = USB_MIDI_EOSEX;
 662   3                          USB_midiInPointer++;
 663   3                          break;
 664   3                      default:
 665   3                          break;
 666   3                  }
 667   2              }
 668   1              else
 669   1              {
 670   2              }
 671   1          }
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 12  

 672          
 673          #endif /* #if (USB_MIDI_IN_BUFF_SIZE > 0) */
 674          
 675          
 676          /* The implementation for external serial input and output connections
 677          *  to route USB MIDI data to and from those connections.
 678          */
 679          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 680          
 681          
 682              /*******************************************************************************
 683              * Function Name: USB_MIDI_Init
 684              ********************************************************************************
 685              *
 686              * Summary:
 687              *  Initializes MIDI variables and starts the UART(s) hardware block(s).
 688              *
 689              * Parameters:
 690              *  None
 691              *
 692              * Return:
 693              *  None
 694              *
 695              * Side Effects:
 696              *  Change the priority of the UART(s) TX interrupts to be higher than the
 697              *  default EP ISR priority.
 698              *
 699              * Global variables:
 700              *   USB_MIDI_Event: initialized to zero.
 701              *   USB_MIDI_TxRunStat: initialized to zero.
 702              *
 703              *******************************************************************************/
 704              void USB_MIDI_Init(void) 
 705              {
 706   1              USB_MIDI1_Event.length = 0u;
 707   1              USB_MIDI1_Event.count = 0u;
 708   1              USB_MIDI1_Event.size = 0u;
 709   1              USB_MIDI1_Event.runstat = 0u;
 710   1              USB_MIDI1_TxRunStat = 0u;
 711   1              USB_MIDI1_InqFlags = 0u;
 712   1              /* Start UART block */
 713   1              MIDI1_UART_Start();
 714   1              /* Change the priority of the UART TX and RX interrupt */
 715   1              CyIntSetPriority(MIDI1_UART_TX_VECT_NUM, USB_CUSTOM_UART_TX_PRIOR_NUM);
 716   1              CyIntSetPriority(MIDI1_UART_RX_VECT_NUM, USB_CUSTOM_UART_RX_PRIOR_NUM);
 717   1      
 718   1              #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 719   1                  USB_MIDI2_Event.length = 0u;
 720   1                  USB_MIDI2_Event.count = 0u;
 721   1                  USB_MIDI2_Event.size = 0u;
 722   1                  USB_MIDI2_Event.runstat = 0u;
 723   1                  USB_MIDI2_TxRunStat = 0u;
 724   1                  USB_MIDI2_InqFlags = 0u;
 725   1                  /* Start second UART block */
 726   1                  MIDI2_UART_Start();
 727   1                  /* Change the priority of the UART TX interrupt */
 728   1                  CyIntSetPriority(MIDI2_UART_TX_VECT_NUM, USB_CUSTOM_UART_TX_PRIOR_NUM);
 729   1                  CyIntSetPriority(MIDI2_UART_RX_VECT_NUM, USB_CUSTOM_UART_RX_PRIOR_NUM);
 730   1              #endif /*  USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF*/
 731   1      
 732   1              /* `#START MIDI_INIT_CUSTOM` Init other extended UARTs here */
 733   1      
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 13  

 734   1              /* `#END` */
 735   1      
 736   1          }
 737          
 738          
 739              /*******************************************************************************
 740              * Function Name: USB_ProcessMidiIn
 741              ********************************************************************************
 742              *
 743              * Summary:
 744              *  Processes one byte of incoming MIDI data.
 745              *
 746              * Parameters:
 747              *   mData = current MIDI input data byte
 748              *   *rxStat = pointer to a MIDI_RX_STATUS structure
 749              *
 750              * Return:
 751              *   0, if no complete message
 752              *   1 - 4, if message complete
 753              *   MIDI_SYSEX, if start or continuation of system exclusive
 754              *   MIDI_EOSEX, if end of system exclusive
 755              *   0xf8 - 0xff, if single byte real time message
 756              *
 757              *******************************************************************************/
 758              uint8 USB_ProcessMidiIn(uint8 mData, USB_MIDI_RX_STATUS *rxStat)
 759                                                                          CYREENTRANT
 760              {
 761   1              uint8 midiReturn = 0u;
 762   1      
 763   1              /* Check for a MIDI status byte.  All status bytes, except real time messages,
 764   1              *  which are a single byte, force the start of a new buffer cycle.
 765   1              */
 766   1              if ((mData & USB_MIDI_STATUS_BYTE_MASK) != 0u)
 767   1              {
 768   2                  if ((mData & USB_MIDI_STATUS_MASK) == USB_MIDI_STATUS_MASK)
 769   2                  {
 770   3                      if ((mData & USB_MIDI_SINGLE_BYTE_MASK) != 0u) /* System Real-Time Messages(single byte) *
             -/
 771   3                      {
 772   4                          midiReturn = mData;
 773   4                      }
 774   3                      else                              /* System Common Messages */
 775   3                      {
 776   4                          switch (mData)
 777   4                          {
 778   5                              case USB_MIDI_SYSEX:
 779   5                                  rxStat->msgBuff[0u] = USB_MIDI_SYSEX;
 780   5                                  rxStat->runstat = USB_MIDI_SYSEX;
 781   5                                  rxStat->count = 1u;
 782   5                                  rxStat->length = 3u;
 783   5                                  break;
 784   5                              case USB_MIDI_EOSEX:
 785   5                                  rxStat->runstat = 0u;
 786   5                                  rxStat->size = rxStat->count;
 787   5                                  rxStat->count = 0u;
 788   5                                  midiReturn = USB_MIDI_EOSEX;
 789   5                                  break;
 790   5                              case USB_MIDI_SPP:
 791   5                                  rxStat->msgBuff[0u] = USB_MIDI_SPP;
 792   5                                  rxStat->runstat = 0u;
 793   5                                  rxStat->count = 1u;
 794   5                                  rxStat->length = 3u;
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 14  

 795   5                                  break;
 796   5                              case USB_MIDI_SONGSEL:
 797   5                                  rxStat->msgBuff[0u] = USB_MIDI_SONGSEL;
 798   5                                  rxStat->runstat = 0u;
 799   5                                  rxStat->count = 1u;
 800   5                                  rxStat->length = 2u;
 801   5                                  break;
 802   5                              case USB_MIDI_QFM:
 803   5                                  rxStat->msgBuff[0u] = USB_MIDI_QFM;
 804   5                                  rxStat->runstat = 0u;
 805   5                                  rxStat->count = 1u;
 806   5                                  rxStat->length = 2u;
 807   5                                  break;
 808   5                              case USB_MIDI_TUNEREQ:
 809   5                                  rxStat->msgBuff[0u] = USB_MIDI_TUNEREQ;
 810   5                                  rxStat->runstat = 0u;
 811   5                                  rxStat->size = 1u;
 812   5                                  rxStat->count = 0u;
 813   5                                  midiReturn = rxStat->size;
 814   5                                  break;
 815   5                              default:
 816   5                                  break;
 817   5                          }
 818   4                      }
 819   3                  }
 820   2                  else /* Channel Messages */
 821   2                  {
 822   3                      rxStat->msgBuff[0u] = mData;
 823   3                      rxStat->runstat = mData;
 824   3                      rxStat->count = 1u;
 825   3                      switch (mData & USB_MIDI_STATUS_MASK)
 826   3                      {
 827   4                          case USB_MIDI_NOTE_OFF:
 828   4                          case USB_MIDI_NOTE_ON:
 829   4                          case USB_MIDI_POLY_KEY_PRESSURE:
 830   4                          case USB_MIDI_CONTROL_CHANGE:
 831   4                          case USB_MIDI_PITCH_BEND_CHANGE:
 832   4                              rxStat->length = 3u;
 833   4                              break;
 834   4                          case USB_MIDI_PROGRAM_CHANGE:
 835   4                          case USB_MIDI_CHANNEL_PRESSURE:
 836   4                              rxStat->length = 2u;
 837   4                              break;
 838   4                          default:
 839   4                              rxStat->runstat = 0u;
 840   4                              rxStat->count = 0u;
 841   4                              break;
 842   4                      }
 843   3                  }
 844   2              }
 845   1      
 846   1              /* Otherwise, it's a data byte */
 847   1              else
 848   1              {
 849   2                  if (rxStat->runstat == USB_MIDI_SYSEX)
 850   2                  {
 851   3                      rxStat->msgBuff[rxStat->count] = mData;
 852   3                      rxStat->count++;
 853   3                      if (rxStat->count >= rxStat->length)
 854   3                      {
 855   4                          rxStat->size = rxStat->count;
 856   4                          rxStat->count = 0u;
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 15  

 857   4                          midiReturn = USB_MIDI_SYSEX;
 858   4                      }
 859   3                  }
 860   2                  else if (rxStat->count > 0u)
 861   2                  {
 862   3                      rxStat->msgBuff[rxStat->count] = mData;
 863   3                      rxStat->count++;
 864   3                      if (rxStat->count >= rxStat->length)
 865   3                      {
 866   4                          rxStat->size = rxStat->count;
 867   4                          rxStat->count = 0u;
 868   4                          midiReturn = rxStat->size;
 869   4                      }
 870   3                  }
 871   2                  else if (rxStat->runstat != 0u)
 872   2                  {
 873   3                      rxStat->msgBuff[0u] = rxStat->runstat;
 874   3                      rxStat->msgBuff[1u] = mData;
 875   3                      rxStat->count = 2u;
 876   3                      switch (rxStat->runstat & USB_MIDI_STATUS_MASK)
 877   3                      {
 878   4                          case USB_MIDI_NOTE_OFF:
 879   4                          case USB_MIDI_NOTE_ON:
 880   4                          case USB_MIDI_POLY_KEY_PRESSURE:
 881   4                          case USB_MIDI_CONTROL_CHANGE:
 882   4                          case USB_MIDI_PITCH_BEND_CHANGE:
 883   4                              rxStat->length = 3u;
 884   4                              break;
 885   4                          case USB_MIDI_PROGRAM_CHANGE:
 886   4                          case USB_MIDI_CHANNEL_PRESSURE:
 887   4                              rxStat->size =rxStat->count;
 888   4                              rxStat->count = 0u;
 889   4                              midiReturn = rxStat->size;
 890   4                              break;
 891   4                          default:
 892   4                              rxStat->count = 0u;
 893   4                          break;
 894   4                      }
 895   3                  }
 896   2                  else
 897   2                  {
 898   3                  }
 899   2              }
 900   1              return (midiReturn);
 901   1          }
 902          
 903          
 904              /*******************************************************************************
 905              * Function Name: USB_MIDI1_GetEvent
 906              ********************************************************************************
 907              *
 908              * Summary:
 909              *  Checks for incoming MIDI data, calls the MIDI event builder if so.
 910              *  Returns either empty or with a complete event.
 911              *
 912              * Parameters:
 913              *  None
 914              *
 915              * Return:
 916              *   0, if no complete message
 917              *   1 - 4, if message complete
 918              *   MIDI_SYSEX, if start or continuation of system exclusive
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 16  

 919              *   MIDI_EOSEX, if end of system exclusive
 920              *   0xf8 - 0xff, if single byte real time message
 921              *
 922              * Global variables:
 923              *  USB_MIDI1_Event: RX status structure used to parse received
 924              *    data.
 925              *
 926              *******************************************************************************/
 927              uint8 USB_MIDI1_GetEvent(void) CYREENTRANT
 928              {
 929   1              uint8 msgRtn = 0u;
 930   1              uint8 rxData;
 931   1              #if (MIDI1_UART_RXBUFFERSIZE >= 256u)
                          uint16 rxBufferRead;
                          #if (CY_PSOC3) /* This local variable is required only for PSOC3 and large buffer */
                              uint16 rxBufferWrite;
                          #endif /* (CY_PSOC3) */
                      #else
 937   1                  uint8 rxBufferRead;
 938   1              #endif /* (MIDI1_UART_RXBUFFERSIZE >= 256u) */
 939   1              
 940   1              uint8 rxBufferLoopDetect;
 941   1              /* Read buffer loop condition to the local variable */
 942   1              rxBufferLoopDetect = MIDI1_UART_rxBufferLoopDetect;
 943   1      
 944   1              if ( (MIDI1_UART_rxBufferRead != MIDI1_UART_rxBufferWrite) || (rxBufferLoopDetect != 0u) )
 945   1              {
 946   2                  /* Protect variables that could change on interrupt by disabling Rx interrupt.*/
 947   2                  #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              CyIntDisable(MIDI1_UART_RX_VECT_NUM);
                          #endif /* ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
 950   2                  rxBufferRead = MIDI1_UART_rxBufferRead;
 951   2                  #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              rxBufferWrite = MIDI1_UART_rxBufferWrite;
                              CyIntEnable(MIDI1_UART_RX_VECT_NUM);
                          #endif /* ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
 955   2      
 956   2                  /* Stay here until either the buffer is empty or we have a complete message
 957   2                  *  in the message buffer. Note that we must use a temporary buffer pointer
 958   2                  *  since it takes two instructions to increment with a wrap, and we can't
 959   2                  *  risk doing that with the real pointer and getting an interrupt in between
 960   2                  *  instructions.
 961   2                  */
 962   2      
 963   2                  #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              while ( ((rxBufferRead != rxBufferWrite) || (rxBufferLoopDetect != 0u)) && (msgRtn == 0u) 
             -)
                          #else
 966   2                      while ( ((rxBufferRead != MIDI1_UART_rxBufferWrite) || (rxBufferLoopDetect != 0u)) && (msg
             -Rtn == 0u) )
 967   2                  #endif /*  ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
 968   2                      {
 969   3                          rxData = MIDI1_UART_rxBuffer[rxBufferRead];
 970   3                          /* Increment pointer with a wrap */
 971   3                          rxBufferRead++;
 972   3                          if(rxBufferRead >= MIDI1_UART_RXBUFFERSIZE)
 973   3                          {
 974   4                              rxBufferRead = 0u;
 975   4                          }
 976   3                          /* If loop condition was set - update real read buffer pointer
 977   3                          *  to avoid overflow status
 978   3                          */
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 17  

 979   3                          if(rxBufferLoopDetect != 0u )
 980   3                          {
 981   4                              MIDI1_UART_rxBufferLoopDetect = 0u;
 982   4                              #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                                          CyIntDisable(MIDI1_UART_RX_VECT_NUM);
                                      #endif /*  MIDI1_UART_RXBUFFERSIZE >= 256 */
 985   4                              MIDI1_UART_rxBufferRead = rxBufferRead;
 986   4                              #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                                          CyIntEnable(MIDI1_UART_RX_VECT_NUM);
                                      #endif /*  MIDI1_UART_RXBUFFERSIZE >= 256 */
 989   4                          }
 990   3      
 991   3                          msgRtn = USB_ProcessMidiIn(rxData,
 992   3                                                          (USB_MIDI_RX_STATUS *)&USB_MIDI1_Event);
 993   3      
 994   3                          /* Read buffer loop condition to the local variable */
 995   3                          rxBufferLoopDetect = MIDI1_UART_rxBufferLoopDetect;
 996   3                      }
 997   2      
 998   2                  /* Finally, update the real output pointer, then return with
 999   2                  *  an indication as to whether there's a complete message in the buffer.
1000   2                  */
1001   2                  #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              CyIntDisable(MIDI1_UART_RX_VECT_NUM);
                          #endif /* ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1004   2                  MIDI1_UART_rxBufferRead = rxBufferRead;
1005   2                  #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              CyIntEnable(MIDI1_UART_RX_VECT_NUM);
                          #endif /* ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1008   2              }
1009   1      
1010   1              return (msgRtn);
1011   1          }
1012          
1013          
1014              /*******************************************************************************
1015              * Function Name: USB_MIDI1_ProcessUsbOut
1016              ********************************************************************************
1017              *
1018              * Summary:
1019              *  Process a USB MIDI output event.
1020              *  Puts data into the MIDI TX output buffer.
1021              *
1022              * Parameters:
1023              *  *epBuf: pointer on MIDI event.
1024              *
1025              * Return:
1026              *   None
1027              *
1028              * Global variables:
1029              *  USB_MIDI1_TxRunStat: This variable used to save the MIDI
1030              *    status byte and skip to send the repeated status byte in subsequent event.
1031              *  USB_MIDI1_InqFlags: The following flags are set when SysEx
1032              *    message comes.
1033              *    USB_INQ_SYSEX_FLAG: Non-Real Time SySEx message received.
1034              *    USB_INQ_IDENTITY_REQ_FLAG: Identity Request received.
1035              *      This bit should be cleared by user when Identity Reply message generated.
1036              *
1037              *******************************************************************************/
1038              void USB_MIDI1_ProcessUsbOut(const uint8 epBuf[])
1039                                                                      CYREENTRANT
1040              {
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 18  

1041   1              uint8 cmd;
1042   1              uint8 len;
1043   1              uint8 i;
1044   1      
1045   1              /* User code is required at the beginning of the procedure */
1046   1              /* `#START MIDI1_PROCESS_OUT_BEGIN` */
1047   1              /* These LED indicate MIDI output activity */
1048   1              LED_OutA_Write(1);
1049   1              /* `#END` */
1050   1      
1051   1              cmd = epBuf[USB_EVENT_BYTE0] & USB_CIN_MASK;
1052   1              if((cmd != USB_RESERVED0) && (cmd != USB_RESERVED1))
1053   1              {
1054   2                  len = USB_MIDI_SIZE[cmd];
1055   2                  i = USB_EVENT_BYTE1;
1056   2                  /* Universal System Exclusive message parsing */
1057   2                  if(cmd == USB_SYSEX)
1058   2                  {
1059   3                      if((epBuf[USB_EVENT_BYTE1] == USB_MIDI_SYSEX) &&
1060   3                         (epBuf[USB_EVENT_BYTE2] == USB_MIDI_SYSEX_NON_REAL_TIME))
1061   3                      {   /* Non-Real Time SySEx starts */
1062   4                          USB_MIDI1_InqFlags |= USB_INQ_SYSEX_FLAG;
1063   4                      }
1064   3                      else
1065   3                      {
1066   4                          USB_MIDI1_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1067   4                      }
1068   3                  }
1069   2                  else if(cmd == USB_SYSEX_ENDS_WITH1)
1070   2                  {
1071   3                      USB_MIDI1_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1072   3                  }
1073   2                  else if(cmd == USB_SYSEX_ENDS_WITH2)
1074   2                  {
1075   3                      USB_MIDI1_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1076   3                  }
1077   2                  else if(cmd == USB_SYSEX_ENDS_WITH3)
1078   2                  {
1079   3                      /* Identify Request support */
1080   3                      if((USB_MIDI1_InqFlags & USB_INQ_SYSEX_FLAG) != 0u)
1081   3                      {
1082   4                          USB_MIDI1_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1083   4                          if((epBuf[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_GEN_INFORMATION) &&
1084   4                          (epBuf[USB_EVENT_BYTE2] == USB_MIDI_SYSEX_IDENTITY_REQ))
1085   4                          {   /* Set the flag about received the Identity Request.
1086   5                              *  The Identity Reply message may be send by user code.
1087   5                              */
1088   5                              USB_MIDI1_InqFlags |= USB_INQ_IDENTITY_REQ_FLAG;
1089   5                          }
1090   4                      }
1091   3                  }
1092   2                  else /* Do nothing for other command */
1093   2                  {
1094   3                  }
1095   2                  /* Running Status for Voice and Mode messages only. */
1096   2                  if((cmd >= USB_NOTE_OFF) && ( cmd <= USB_PITCH_BEND_CHANGE))
1097   2                  {
1098   3                      if(USB_MIDI1_TxRunStat == epBuf[USB_EVENT_BYTE1])
1099   3                      {   /* Skip the repeated Status byte */
1100   4                          i++;
1101   4                      }
1102   3                      else
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 19  

1103   3                      {   /* Save Status byte for next event */
1104   4                          USB_MIDI1_TxRunStat = epBuf[USB_EVENT_BYTE1];
1105   4                      }
1106   3                  }
1107   2                  else
1108   2                  {   /* Clear Running Status */
1109   3                      USB_MIDI1_TxRunStat = 0u;
1110   3                  }
1111   2                  /* Puts data into the MIDI TX output buffer.*/
1112   2                  do
1113   2                  {
1114   3                      MIDI1_UART_PutChar(epBuf[i]);
1115   3                      i++;
1116   3                  } while (i <= len);
1117   2              }
1118   1      
1119   1              /* User code is required at the end of the procedure */
1120   1              /* `#START MIDI1_PROCESS_OUT_END` */
1121   1              LED_OutA_Write(0);
1122   1              /* `#END` */
1123   1          }
1124          
1125              
1126          #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
1127          
1128          
1129              /*******************************************************************************
1130              * Function Name: USB_MIDI2_GetEvent
1131              ********************************************************************************
1132              *
1133              * Summary:
1134              *  Checks for incoming MIDI data, calls the MIDI event builder if so.
1135              *  Returns either empty or with a complete event.
1136              *
1137              * Parameters:
1138              *  None
1139              *
1140              * Return:
1141              *   0, if no complete message
1142              *   1 - 4, if message complete
1143              *   MIDI_SYSEX, if start or continuation of system exclusive
1144              *   MIDI_EOSEX, if end of system exclusive
1145              *   0xf8 - 0xff, if single byte real time message
1146              *
1147              * Global variables:
1148              *  USB_MIDI2_Event: RX status structure used to parse received
1149              *    data.
1150              *
1151              *******************************************************************************/
1152              uint8 USB_MIDI2_GetEvent(void) CYREENTRANT
1153              {
1154   1              uint8 msgRtn = 0u;
1155   1              uint8 rxData;
1156   1              #if (MIDI2_UART_RXBUFFERSIZE >= 256u)
                          uint16 rxBufferRead;
                          #if (CY_PSOC3) /* This local variable required only for PSOC3 and large buffer */
                              uint16 rxBufferWrite;
                          #endif /* (CY_PSOC3) */
                      #else
1162   1                  uint8 rxBufferRead;
1163   1              #endif /* (MIDI2_UART_RXBUFFERSIZE >= 256) */
1164   1              
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 20  

1165   1              uint8 rxBufferLoopDetect;
1166   1              /* Read buffer loop condition to the local variable */
1167   1              rxBufferLoopDetect = MIDI2_UART_rxBufferLoopDetect;
1168   1      
1169   1              if ( (MIDI2_UART_rxBufferRead != MIDI2_UART_rxBufferWrite) || (rxBufferLoopDetect != 0u) )
1170   1              {
1171   2                  /* Protect variables that could change on interrupt by disabling Rx interrupt.*/
1172   2                  #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              CyIntDisable(MIDI2_UART_RX_VECT_NUM);
                          #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1175   2                  rxBufferRead = MIDI2_UART_rxBufferRead;
1176   2                  #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              rxBufferWrite = MIDI2_UART_rxBufferWrite;
                              CyIntEnable(MIDI2_UART_RX_VECT_NUM);
                          #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1180   2      
1181   2                  /* Stay here until either the buffer is empty or we have a complete message
1182   2                  *  in the message buffer. Note that we must use a temporary output pointer to
1183   2                  *  since it takes two instructions to increment with a wrap, and we can't
1184   2                  *  risk doing that with the real pointer and getting an interrupt in between
1185   2                  *  instructions.
1186   2                  */
1187   2      
1188   2                  #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              while ( ((rxBufferRead != rxBufferWrite) || (rxBufferLoopDetect != 0u)) && (msgRtn == 0u) 
             -)
                          #else
1191   2                      while ( ((rxBufferRead != MIDI2_UART_rxBufferWrite) || (rxBufferLoopDetect != 0u)) && (msg
             -Rtn == 0u) )
1192   2                  #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1193   2                      {
1194   3                          rxData = MIDI2_UART_rxBuffer[rxBufferRead];
1195   3                          rxBufferRead++;
1196   3                          if(rxBufferRead >= MIDI2_UART_RXBUFFERSIZE)
1197   3                          {
1198   4                              rxBufferRead = 0u;
1199   4                          }
1200   3                          /* If loop condition was set - update real read buffer pointer
1201   3                          *  to avoid overflow status
1202   3                          */
1203   3                          if(rxBufferLoopDetect != 0u )
1204   3                          {
1205   4                              MIDI2_UART_rxBufferLoopDetect = 0u;
1206   4                              #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                                          CyIntDisable(MIDI2_UART_RX_VECT_NUM);
                                      #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1209   4                              MIDI2_UART_rxBufferRead = rxBufferRead;
1210   4                              #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                                          CyIntEnable(MIDI2_UART_RX_VECT_NUM);
                                      #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1213   4                          }
1214   3      
1215   3                          msgRtn = USB_ProcessMidiIn(rxData,
1216   3                                                          (USB_MIDI_RX_STATUS *)&USB_MIDI2_Event);
1217   3      
1218   3                          /* Read buffer loop condition to the local variable */
1219   3                          rxBufferLoopDetect = MIDI2_UART_rxBufferLoopDetect;
1220   3                      }
1221   2      
1222   2                  /* Finally, update the real output pointer, then return with
1223   2                  *  an indication as to whether there's a complete message in the buffer.
1224   2                  */
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 21  

1225   2                  #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              CyIntDisable(MIDI2_UART_RX_VECT_NUM);
                          #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1228   2                  MIDI2_UART_rxBufferRead = rxBufferRead;
1229   2                  #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              CyIntEnable(MIDI2_UART_RX_VECT_NUM);
                          #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1232   2              }
1233   1      
1234   1              return (msgRtn);
1235   1          }
1236          
1237          
1238              /*******************************************************************************
1239              * Function Name: USB_MIDI2_ProcessUsbOut
1240              ********************************************************************************
1241              *
1242              * Summary:
1243              *  Process a USB MIDI output event.
1244              *  Puts data into the MIDI TX output buffer.
1245              *
1246              * Parameters:
1247              *  *epBuf: pointer on MIDI event.
1248              *
1249              * Return:
1250              *   None
1251              *
1252              * Global variables:
1253              *  USB_MIDI2_TxRunStat: This variable used to save the MIDI
1254              *    status byte and skip to send the repeated status byte in subsequent event.
1255              *  USB_MIDI2_InqFlags: The following flags are set when SysEx
1256              *    message comes.
1257              *  USB_INQ_SYSEX_FLAG: Non-Real Time SySEx message received.
1258              *  USB_INQ_IDENTITY_REQ_FLAG: Identity Request received.
1259              *    This bit should be cleared by user when Identity Reply message generated.
1260              *
1261              *******************************************************************************/
1262              void USB_MIDI2_ProcessUsbOut(const uint8 epBuf[])
1263                                                                      CYREENTRANT
1264              {
1265   1              uint8 cmd;
1266   1              uint8 len;
1267   1              uint8 i;
1268   1      
1269   1              /* User code is required at the beginning of the procedure */
1270   1              /* `#START MIDI2_PROCESS_OUT_START` */
1271   1              /* These LED indicate MIDI output activity */
1272   1              LED_OutB_Write(1);
1273   1              /* `#END` */
1274   1      
1275   1              cmd = epBuf[USB_EVENT_BYTE0] & USB_CIN_MASK;
1276   1              if((cmd != USB_RESERVED0) && (cmd != USB_RESERVED1))
1277   1              {
1278   2                  len = USB_MIDI_SIZE[cmd];
1279   2                  i = USB_EVENT_BYTE1;
1280   2                  /* Universal System Exclusive message parsing */
1281   2                  if(cmd == USB_SYSEX)
1282   2                  {
1283   3                      if((epBuf[USB_EVENT_BYTE1] == USB_MIDI_SYSEX) &&
1284   3                         (epBuf[USB_EVENT_BYTE2] == USB_MIDI_SYSEX_NON_REAL_TIME))
1285   3                      {   /* SySEx starts */
1286   4                          USB_MIDI2_InqFlags |= USB_INQ_SYSEX_FLAG;
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 22  

1287   4                      }
1288   3                      else
1289   3                      {
1290   4                          USB_MIDI2_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1291   4                      }
1292   3                  }
1293   2                  else if(cmd == USB_SYSEX_ENDS_WITH1)
1294   2                  {
1295   3                      USB_MIDI2_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1296   3                  }
1297   2                  else if(cmd == USB_SYSEX_ENDS_WITH2)
1298   2                  {
1299   3                      USB_MIDI2_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1300   3                  }
1301   2                  else if(cmd == USB_SYSEX_ENDS_WITH3)
1302   2                  {
1303   3                      /* Identify Request support */
1304   3                      if((USB_MIDI2_InqFlags & USB_INQ_SYSEX_FLAG) != 0u)
1305   3                      {
1306   4                          USB_MIDI2_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1307   4                          if((epBuf[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_GEN_INFORMATION) &&
1308   4                             (epBuf[USB_EVENT_BYTE2] == USB_MIDI_SYSEX_IDENTITY_REQ))
1309   4                          {   /* Set the flag about received the Identity Request.
1310   5                              *  The Identity Reply message may be send by user code.
1311   5                              */
1312   5                              USB_MIDI2_InqFlags |= USB_INQ_IDENTITY_REQ_FLAG;
1313   5                          }
1314   4                      }
1315   3                  }
1316   2                  else /* Do nothing for other command */
1317   2                  {
1318   3                  }
1319   2                  /* Running Status for Voice and Mode messages only. */
1320   2                  if((cmd >= USB_NOTE_OFF) && ( cmd <= USB_PITCH_BEND_CHANGE))
1321   2                  {
1322   3                      if(USB_MIDI2_TxRunStat == epBuf[USB_EVENT_BYTE1])
1323   3                      {   /* Skip the repeated Status byte */
1324   4                          i++;
1325   4                      }
1326   3                      else
1327   3                      {   /* Save Status byte for next event */
1328   4                          USB_MIDI2_TxRunStat = epBuf[USB_EVENT_BYTE1];
1329   4                      }
1330   3                  }
1331   2                  else
1332   2                  {   /* Clear Running Status */
1333   3                      USB_MIDI2_TxRunStat = 0u;
1334   3                  }
1335   2                  /* Puts data into the MIDI TX output buffer.*/
1336   2                  do
1337   2                  {
1338   3                      MIDI2_UART_PutChar(epBuf[i]);
1339   3                      i++;
1340   3                  } while (i <= len);
1341   2              }
1342   1      
1343   1              /* User code is required at the end of the procedure */
1344   1              /* `#START MIDI2_PROCESS_OUT_END` */
1345   1              LED_OutB_Write(0);
1346   1              /* `#END` */
1347   1          }
1348          #endif /* (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF) */
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 23  

1349          #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
1350          
1351          #endif  /*  (USB_ENABLE_MIDI_API != 0u) */
1352          
1353          
1354          /* `#START MIDI_FUNCTIONS` Place any additional functions here */
1355          
1356          /* `#END` */
1357          
1358          #endif  /*  defined(USB_ENABLE_MIDI_STREAMING) */
1359          
1360          
1361          /* [] END OF FILE */
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 24  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION USB_MIDI_EP_Init (BEGIN)
                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 141
0000 900000      R     MOV     DPTR,#USB_midiInPointer
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
0005 900000      R     MOV     DPTR,#USB_midi_out_ep
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 120000      E     LCALL   _?USB_EnableOutEP
                                           ; SOURCE LINE # 164
000D 120000      R     LCALL   USB_MIDI_Init
                                           ; SOURCE LINE # 166
0010 22                RET     
             ; FUNCTION USB_MIDI_EP_Init (END)

             ; FUNCTION _?USB_MIDI_OUT_EP_Service (BEGIN)
                                           ; SOURCE LINE # 199
0000 90FFFD            MOV     DPTR,#0FFFDH
0003 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 209
0006 850083      E     MOV     DPH,?C_XBP
0009 850082      E     MOV     DPL,?C_XBP+01H
000C A3                INC     DPTR
000D A3                INC     DPTR
000E E4                CLR     A
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 212
0010 900000      R     MOV     DPTR,#USB_midi_out_ep
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 120000      E     LCALL   _?USB_GetEPState
0018 EF                MOV     A,R7
0019 6401              XRL     A,#01H
001B 6003              JZ      $ + 5H
001D 020000      R     LJMP    ?C0012
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 217
0020 900000      R     MOV     DPTR,#USB_midi_out_ep
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 120000      E     LCALL   _?USB_GetEPCount
0028 850083      E     MOV     DPH,?C_XBP
002B 850082      E     MOV     DPL,?C_XBP+01H
002E EF                MOV     A,R7
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 226
0030 850083      E     MOV     DPH,?C_XBP
0033 850082      E     MOV     DPL,?C_XBP+01H
0036 E0                MOVX    A,@DPTR
0037 FF                MOV     R7,A
0038 7E00              MOV     R6,#00H
003A 90FFFE            MOV     DPTR,#0FFFEH
003D 120000      E     LCALL   ?C?ADDXBP
0040 EE                MOV     A,R6
0041 F0                MOVX    @DPTR,A
0042 A3                INC     DPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 25  

0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
0045 7B01              MOV     R3,#01H
0047 7A00        R     MOV     R2,#HIGH USB_midiOutBuffer
0049 7900        R     MOV     R1,#LOW USB_midiOutBuffer
004B 900000      R     MOV     DPTR,#USB_midi_out_ep
004E E0                MOVX    A,@DPTR
004F FF                MOV     R7,A
0050 120000      E     LCALL   _?USB_ReadOutEP
0053 850083      E     MOV     DPH,?C_XBP
0056 850082      E     MOV     DPL,?C_XBP+01H
0059 EF                MOV     A,R7
005A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 242
005B         ?C0003:
                                           ; SOURCE LINE # 244
005B 850083      E     MOV     DPH,?C_XBP
005E 850082      E     MOV     DPL,?C_XBP+01H
0061 E0                MOVX    A,@DPTR
0062 FF                MOV     R7,A
0063 EF                MOV     A,R7
0064 C3                CLR     C
0065 9404              SUBB    A,#04H
0067 5003              JNC     $ + 5H
0069 020000      R     LJMP    ?C0012
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
006C 850083      E     MOV     DPH,?C_XBP
006F 850082      E     MOV     DPL,?C_XBP+01H
0072 A3                INC     DPTR
0073 E4                CLR     A
0074 F0                MOVX    @DPTR,A
0075         ?C0005:
                                           ; SOURCE LINE # 247
0075 850083      E     MOV     DPH,?C_XBP
0078 850082      E     MOV     DPL,?C_XBP+01H
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D 850083      E     MOV     DPH,?C_XBP
0080 850082      E     MOV     DPL,?C_XBP+01H
0083 A3                INC     DPTR
0084 E0                MOVX    A,@DPTR
0085 FE                MOV     R6,A
0086 EE                MOV     A,R6
0087 C3                CLR     C
0088 9F                SUBB    A,R7
0089 4003              JC      $ + 5H
008B 020000      R     LJMP    ?C0012
                                           ; SOURCE LINE # 248
                                           ; SOURCE LINE # 250
008E 850083      E     MOV     DPH,?C_XBP
0091 850082      E     MOV     DPL,?C_XBP+01H
0094 A3                INC     DPTR
0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
0097 7400        R     MOV     A,#LOW USB_midiOutBuffer
0099 2F                ADD     A,R7
009A F582              MOV     DPL,A
009C E4                CLR     A
009D 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 26  

009F F583              MOV     DPH,A
00A1 E0                MOVX    A,@DPTR
00A2 FF                MOV     R7,A
00A3 EF                MOV     A,R7
00A4 7003              JNZ     $ + 5H
00A6 020000      R     LJMP    ?C0012
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 253
00A9         ?C0007:
                                           ; SOURCE LINE # 256
00A9 850083      E     MOV     DPH,?C_XBP
00AC 850082      E     MOV     DPL,?C_XBP+01H
00AF A3                INC     DPTR
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 7400        R     MOV     A,#LOW USB_midiOutBuffer
00B4 2F                ADD     A,R7
00B5 F582              MOV     DPL,A
00B7 E4                CLR     A
00B8 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
00BA F583              MOV     DPH,A
00BC E0                MOVX    A,@DPTR
00BD FF                MOV     R7,A
00BE EF                MOV     A,R7
00BF 54F0              ANL     A,#0F0H
00C1 FF                MOV     R7,A
00C2 7E00              MOV     R6,#00H
00C4 EF                MOV     A,R7
00C5 4E                ORL     A,R6
00C6 7018              JNZ     ?C0008
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 259
00C8 850083      E     MOV     DPH,?C_XBP
00CB 850082      E     MOV     DPL,?C_XBP+01H
00CE A3                INC     DPTR
00CF E0                MOVX    A,@DPTR
00D0 FF                MOV     R7,A
00D1 7400        R     MOV     A,#LOW USB_midiOutBuffer
00D3 2F                ADD     A,R7
00D4 F9                MOV     R1,A
00D5 E4                CLR     A
00D6 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
00D8 FA                MOV     R2,A
00D9 7B01              MOV     R3,#01H
00DB 120000      R     LCALL   _?USB_MIDI1_ProcessUsbOut
                                           ; SOURCE LINE # 260
00DE 8037              SJMP    ?C0009
00E0         ?C0008:
                                           ; SOURCE LINE # 261
00E0 850083      E     MOV     DPH,?C_XBP
00E3 850082      E     MOV     DPL,?C_XBP+01H
00E6 A3                INC     DPTR
00E7 E0                MOVX    A,@DPTR
00E8 FF                MOV     R7,A
00E9 7400        R     MOV     A,#LOW USB_midiOutBuffer
00EB 2F                ADD     A,R7
00EC F582              MOV     DPL,A
00EE E4                CLR     A
00EF 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
00F1 F583              MOV     DPH,A
00F3 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 27  

00F4 FF                MOV     R7,A
00F5 EF                MOV     A,R7
00F6 54F0              ANL     A,#0F0H
00F8 FF                MOV     R7,A
00F9 7E00              MOV     R6,#00H
00FB EF                MOV     A,R7
00FC 6410              XRL     A,#010H
00FE 4E                ORL     A,R6
00FF 7016              JNZ     ?C0009
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 265
0101 850083      E     MOV     DPH,?C_XBP
0104 850082      E     MOV     DPL,?C_XBP+01H
0107 A3                INC     DPTR
0108 E0                MOVX    A,@DPTR
0109 FF                MOV     R7,A
010A 7400        R     MOV     A,#LOW USB_midiOutBuffer
010C 2F                ADD     A,R7
010D F9                MOV     R1,A
010E E4                CLR     A
010F 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
0111 FA                MOV     R2,A
0112 7B01              MOV     R3,#01H
0114 120000      R     LCALL   _?USB_MIDI2_ProcessUsbOut
                                           ; SOURCE LINE # 267
                                           ; SOURCE LINE # 269
                                           ; SOURCE LINE # 273
0117         ?C0009:
                                           ; SOURCE LINE # 277
0117 850083      E     MOV     DPH,?C_XBP
011A 850082      E     MOV     DPL,?C_XBP+01H
011D A3                INC     DPTR
011E E0                MOVX    A,@DPTR
011F FF                MOV     R7,A
0120 7400        R     MOV     A,#LOW USB_midiOutBuffer+01H
0122 2F                ADD     A,R7
0123 F9                MOV     R1,A
0124 E4                CLR     A
0125 3400        R     ADDC    A,#HIGH USB_midiOutBuffer+01H
0127 FA                MOV     R2,A
0128 7B01              MOV     R3,#01H
012A 850083      E     MOV     DPH,?C_XBP
012D 850082      E     MOV     DPL,?C_XBP+01H
0130 A3                INC     DPTR
0131 E0                MOVX    A,@DPTR
0132 FF                MOV     R7,A
0133 7400        R     MOV     A,#LOW USB_midiOutBuffer
0135 2F                ADD     A,R7
0136 F582              MOV     DPL,A
0138 E4                CLR     A
0139 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
013B F583              MOV     DPH,A
013D E0                MOVX    A,@DPTR
013E FF                MOV     R7,A
013F EF                MOV     A,R7
0140 54F0              ANL     A,#0F0H
0142 FF                MOV     R7,A
0143 120000      E     LCALL   _?USB_callbackLocalMidiEvent
                                           ; SOURCE LINE # 280
0146 850083      E     MOV     DPH,?C_XBP
0149 850082      E     MOV     DPL,?C_XBP+01H
014C A3                INC     DPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 28  

014D E0                MOVX    A,@DPTR
014E 2404              ADD     A,#04H
0150 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 281
0151 020000      R     LJMP    ?C0005
                                           ; SOURCE LINE # 282
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 288
0154         ?C0012:
0154 900003            MOV     DPTR,#03H
0157 120000      E     LCALL   ?C?ADDXBP
015A 22                RET     
             ; FUNCTION _?USB_MIDI_OUT_EP_Service (END)

             ; FUNCTION _?USB_MIDI_IN_EP_Service (BEGIN)
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 326
0000 900000      R     MOV     DPTR,#USB_midiInPointer
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 6031              JZ      ?C0015
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 328
0008 900000      R     MOV     DPTR,#USB_midi_in_ep
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D 120000      E     LCALL   _?USB_GetEPState
0010 EF                MOV     A,R7
0011 B40125            CJNE    A,#01H,?C0015
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 332
0014 900000      R     MOV     DPTR,#USB_midiInPointer
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 7E00              MOV     R6,#00H
001B 90FFFE            MOV     DPTR,#0FFFEH
001E 120000      E     LCALL   ?C?ADDXBP
0021 EE                MOV     A,R6
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 EF                MOV     A,R7
0025 F0                MOVX    @DPTR,A
0026 7B01              MOV     R3,#01H
0028 7A00        R     MOV     R2,#HIGH USB_midiInBuffer
002A 7900        R     MOV     R1,#LOW USB_midiInBuffer
002C 900000      R     MOV     DPTR,#USB_midi_in_ep
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 120000      E     LCALL   _?USB_LoadInEP
                                           ; SOURCE LINE # 340
0034 900000      R     MOV     DPTR,#USB_midiInPointer
0037 E4                CLR     A
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 342
                                           ; SOURCE LINE # 343
                                           ; SOURCE LINE # 344
0039         ?C0015:
0039 22                RET     
             ; FUNCTION _?USB_MIDI_IN_EP_Service (END)

             ; FUNCTION _?USB_MIDI_IN_Service (BEGIN)
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 29  

                                           ; SOURCE LINE # 374
0000 90FFFE            MOV     DPTR,#0FFFEH
0003 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 380
0006 850083      E     MOV     DPH,?C_XBP
0009 850082      E     MOV     DPL,?C_XBP+01H
000C E4                CLR     A
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 381
000E 850083      E     MOV     DPH,?C_XBP
0011 850082      E     MOV     DPL,?C_XBP+01H
0014 A3                INC     DPTR
0015 E4                CLR     A
0016 F0                MOVX    @DPTR,A
0017         ?C0018:
                                           ; SOURCE LINE # 383
                                           ; SOURCE LINE # 384
0017 900000      R     MOV     DPTR,#USB_midiInPointer
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D D3                SETB    C
001E 941C              SUBB    A,#01CH
0020 503E              JNC     ?C0019
                                           ; SOURCE LINE # 386
                                           ; SOURCE LINE # 388
0022 120000      R     LCALL   _?USB_MIDI1_GetEvent
0025 850083      E     MOV     DPH,?C_XBP
0028 850082      E     MOV     DPL,?C_XBP+01H
002B EF                MOV     A,R7
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 389
002D 850083      E     MOV     DPH,?C_XBP
0030 850082      E     MOV     DPL,?C_XBP+01H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 6028              JZ      ?C0019
                                           ; SOURCE LINE # 390
                                           ; SOURCE LINE # 391
0038 90FFFF            MOV     DPTR,#0FFFFH
003B 120000      E     LCALL   ?C?ADDXBP
003E E4                CLR     A
003F F0                MOVX    @DPTR,A
0040 900000      R     MOV     DPTR,#USB_MIDI1_Event+02H
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
0045 90FFFF            MOV     DPTR,#0FFFFH
0048 120000      E     LCALL   ?C?ADDXBP
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
004D 7B01              MOV     R3,#01H
004F 7A00        R     MOV     R2,#HIGH USB_MIDI1_Event+04H
0051 7900        R     MOV     R1,#LOW USB_MIDI1_Event+04H
0053 850083      E     MOV     DPH,?C_XBP
0056 850082      E     MOV     DPL,?C_XBP+01H
0059 A3                INC     DPTR
005A A3                INC     DPTR
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D 120000      R     LCALL   _?USB_PrepareInBuffer
                                           ; SOURCE LINE # 393
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 30  

                                           ; SOURCE LINE # 394
0060         ?C0019:
                                           ; SOURCE LINE # 397
0060 900000      R     MOV     DPTR,#USB_midiInPointer
0063 E0                MOVX    A,@DPTR
0064 FF                MOV     R7,A
0065 EF                MOV     A,R7
0066 D3                SETB    C
0067 941C              SUBB    A,#01CH
0069 503F              JNC     ?C0016
                                           ; SOURCE LINE # 399
                                           ; SOURCE LINE # 401
006B 120000      R     LCALL   _?USB_MIDI2_GetEvent
006E 850083      E     MOV     DPH,?C_XBP
0071 850082      E     MOV     DPL,?C_XBP+01H
0074 A3                INC     DPTR
0075 EF                MOV     A,R7
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 402
0077 850083      E     MOV     DPH,?C_XBP
007A 850082      E     MOV     DPL,?C_XBP+01H
007D A3                INC     DPTR
007E E0                MOVX    A,@DPTR
007F FF                MOV     R7,A
0080 EF                MOV     A,R7
0081 6027              JZ      ?C0016
                                           ; SOURCE LINE # 403
                                           ; SOURCE LINE # 404
0083 90FFFF            MOV     DPTR,#0FFFFH
0086 120000      E     LCALL   ?C?ADDXBP
0089 7410              MOV     A,#010H
008B F0                MOVX    @DPTR,A
008C 900000      R     MOV     DPTR,#USB_MIDI2_Event+02H
008F E0                MOVX    A,@DPTR
0090 FF                MOV     R7,A
0091 90FFFF            MOV     DPTR,#0FFFFH
0094 120000      E     LCALL   ?C?ADDXBP
0097 EF                MOV     A,R7
0098 F0                MOVX    @DPTR,A
0099 7B01              MOV     R3,#01H
009B 7A00        R     MOV     R2,#HIGH USB_MIDI2_Event+04H
009D 7900        R     MOV     R1,#LOW USB_MIDI2_Event+04H
009F 900003            MOV     DPTR,#03H
00A2 120000      E     LCALL   ?C?XBPOFF
00A5 E0                MOVX    A,@DPTR
00A6 FF                MOV     R7,A
00A7 120000      R     LCALL   _?USB_PrepareInBuffer
                                           ; SOURCE LINE # 406
                                           ; SOURCE LINE # 407
                                           ; SOURCE LINE # 410
00AA         ?C0016:
00AA 900000      R     MOV     DPTR,#USB_midiInPointer
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF EF                MOV     A,R7
00B0 D3                SETB    C
00B1 941C              SUBB    A,#01CH
00B3 501D              JNC     ?C0017
00B5 850083      E     MOV     DPH,?C_XBP
00B8 850082      E     MOV     DPL,?C_XBP+01H
00BB E0                MOVX    A,@DPTR
00BC FF                MOV     R7,A
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 31  

00BD EF                MOV     A,R7
00BE 6003              JZ      $ + 5H
00C0 020000      R     LJMP    ?C0018
00C3 850083      E     MOV     DPH,?C_XBP
00C6 850082      E     MOV     DPL,?C_XBP+01H
00C9 A3                INC     DPTR
00CA E0                MOVX    A,@DPTR
00CB FF                MOV     R7,A
00CC EF                MOV     A,R7
00CD 6003              JZ      $ + 5H
00CF 020000      R     LJMP    ?C0018
00D2         ?C0017:
                                           ; SOURCE LINE # 416
00D2 120000      R     LCALL   _?USB_MIDI_IN_EP_Service
                                           ; SOURCE LINE # 417
00D5 900002            MOV     DPTR,#02H
00D8 120000      E     LCALL   ?C?ADDXBP
00DB 22                RET     
             ; FUNCTION _?USB_MIDI_IN_Service (END)

             ; FUNCTION _USB_PutUsbMidiIn (BEGIN)
                                           ; SOURCE LINE # 459
0000 900000      R     MOV     DPTR,#ic
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#midiMsg
0008 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 461
                                           ; SOURCE LINE # 462
000B 900000      R     MOV     DPTR,#retError
000E E4                CLR     A
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 467
0010 120000      E     LCALL   MIDI1_UART_DisableRxInt
                                           ; SOURCE LINE # 469
0013 120000      E     LCALL   MIDI2_UART_DisableRxInt
                                           ; SOURCE LINE # 473
0016 900000      R     MOV     DPTR,#USB_midi_in_ep
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C 75F00B            MOV     B,#0BH
001F A4                MUL     AB
0020 2400        E     ADD     A,#LOW USB_EP+08H
0022 F582              MOV     DPL,A
0024 E4                CLR     A
0025 3400        E     ADDC    A,#HIGH USB_EP+08H
0027 F583              MOV     DPH,A
0029 E0                MOVX    A,@DPTR
002A FE                MOV     R6,A
002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E EF                MOV     A,R7
002F 24FC              ADD     A,#0FCH
0031 FF                MOV     R7,A
0032 EE                MOV     A,R6
0033 34FF              ADDC    A,#0FFH
0035 FE                MOV     R6,A
0036 900000      R     MOV     DPTR,#USB_midiInPointer
0039 E0                MOVX    A,@DPTR
003A FD                MOV     R5,A
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 32  

003B 7C00              MOV     R4,#00H
003D D3                SETB    C
003E ED                MOV     A,R5
003F 9F                SUBB    A,R7
0040 EC                MOV     A,R4
0041 9E                SUBB    A,R6
0042 4003              JC      ?C0025
                                           ; SOURCE LINE # 475
                                           ; SOURCE LINE # 476
0044 120000      R     LCALL   _?USB_MIDI_IN_EP_Service
                                           ; SOURCE LINE # 477
0047         ?C0025:
                                           ; SOURCE LINE # 478
0047 900000      R     MOV     DPTR,#USB_midi_in_ep
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C EF                MOV     A,R7
004D 75F00B            MOV     B,#0BH
0050 A4                MUL     AB
0051 2400        E     ADD     A,#LOW USB_EP+08H
0053 F582              MOV     DPL,A
0055 E4                CLR     A
0056 3400        E     ADDC    A,#HIGH USB_EP+08H
0058 F583              MOV     DPH,A
005A E0                MOVX    A,@DPTR
005B FE                MOV     R6,A
005C A3                INC     DPTR
005D E0                MOVX    A,@DPTR
005E FF                MOV     R7,A
005F EF                MOV     A,R7
0060 24FC              ADD     A,#0FCH
0062 FF                MOV     R7,A
0063 EE                MOV     A,R6
0064 34FF              ADDC    A,#0FFH
0066 FE                MOV     R6,A
0067 900000      R     MOV     DPTR,#USB_midiInPointer
006A E0                MOVX    A,@DPTR
006B FD                MOV     R5,A
006C 7C00              MOV     R4,#00H
006E D3                SETB    C
006F ED                MOV     A,R5
0070 9F                SUBB    A,R7
0071 EC                MOV     A,R4
0072 9E                SUBB    A,R6
0073 4003              JC      $ + 5H
0075 020000      R     LJMP    ?C0026
                                           ; SOURCE LINE # 480
                                           ; SOURCE LINE # 481
0078 900000      R     MOV     DPTR,#ic
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D EF                MOV     A,R7
007E C3                CLR     C
007F 9404              SUBB    A,#04H
0081 400B              JC      ?C0028
0083 900000      R     MOV     DPTR,#ic
0086 E0                MOVX    A,@DPTR
0087 FF                MOV     R7,A
0088 EF                MOV     A,R7
0089 C3                CLR     C
008A 94F0              SUBB    A,#0F0H
008C 402B              JC      ?C0027
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 33  

008E         ?C0028:
                                           ; SOURCE LINE # 482
                                           ; SOURCE LINE # 483
008E 900000      R     MOV     DPTR,#cable
0091 E0                MOVX    A,@DPTR
0092 FF                MOV     R7,A
0093 90FFFF            MOV     DPTR,#0FFFFH
0096 120000      E     LCALL   ?C?ADDXBP
0099 EF                MOV     A,R7
009A F0                MOVX    @DPTR,A
009B 900000      R     MOV     DPTR,#ic
009E E0                MOVX    A,@DPTR
009F FF                MOV     R7,A
00A0 90FFFF            MOV     DPTR,#0FFFFH
00A3 120000      E     LCALL   ?C?ADDXBP
00A6 EF                MOV     A,R7
00A7 F0                MOVX    @DPTR,A
00A8 900000      R     MOV     DPTR,#midiMsg
00AB 120000      E     LCALL   ?C?PLDXDATA
00AE 900000      R     MOV     DPTR,#ic
00B1 E0                MOVX    A,@DPTR
00B2 FF                MOV     R7,A
00B3 120000      R     LCALL   _?USB_PrepareInBuffer
                                           ; SOURCE LINE # 484
00B6 020000      R     LJMP    ?C0036
00B9         ?C0027:
                                           ; SOURCE LINE # 486
                                           ; SOURCE LINE # 487
00B9 900000      R     MOV     DPTR,#msgIndex
00BC E4                CLR     A
00BD F0                MOVX    @DPTR,A
00BE         ?C0032:
                                           ; SOURCE LINE # 489
                                           ; SOURCE LINE # 490
00BE 900000      R     MOV     DPTR,#cable
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 90FFFF            MOV     DPTR,#0FFFFH
00C6 120000      E     LCALL   ?C?ADDXBP
00C9 EF                MOV     A,R7
00CA F0                MOVX    @DPTR,A
00CB 90FFFF            MOV     DPTR,#0FFFFH
00CE 120000      E     LCALL   ?C?ADDXBP
00D1 7403              MOV     A,#03H
00D3 F0                MOVX    @DPTR,A
00D4 900000      R     MOV     DPTR,#midiMsg
00D7 120000      E     LCALL   ?C?PLDXDATA
00DA 900000      R     MOV     DPTR,#msgIndex
00DD E0                MOVX    A,@DPTR
00DE FF                MOV     R7,A
00DF 7E00              MOV     R6,#00H
00E1 E9                MOV     A,R1
00E2 2F                ADD     A,R7
00E3 F9                MOV     R1,A
00E4 EA                MOV     A,R2
00E5 3E                ADDC    A,R6
00E6 FA                MOV     R2,A
00E7 7FF0              MOV     R7,#0F0H
00E9 120000      R     LCALL   _?USB_PrepareInBuffer
                                           ; SOURCE LINE # 492
00EC 900000      R     MOV     DPTR,#ic
00EF E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 34  

00F0 24FD              ADD     A,#0FDH
00F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 493
00F3 900000      R     MOV     DPTR,#msgIndex
00F6 E0                MOVX    A,@DPTR
00F7 2403              ADD     A,#03H
00F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 494
00FA 900000      R     MOV     DPTR,#USB_midi_in_ep
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF EF                MOV     A,R7
0100 75F00B            MOV     B,#0BH
0103 A4                MUL     AB
0104 2400        E     ADD     A,#LOW USB_EP+08H
0106 F582              MOV     DPL,A
0108 E4                CLR     A
0109 3400        E     ADDC    A,#HIGH USB_EP+08H
010B F583              MOV     DPH,A
010D E0                MOVX    A,@DPTR
010E FE                MOV     R6,A
010F A3                INC     DPTR
0110 E0                MOVX    A,@DPTR
0111 FF                MOV     R7,A
0112 EF                MOV     A,R7
0113 24FC              ADD     A,#0FCH
0115 FF                MOV     R7,A
0116 EE                MOV     A,R6
0117 34FF              ADDC    A,#0FFH
0119 FE                MOV     R6,A
011A 900000      R     MOV     DPTR,#USB_midiInPointer
011D E0                MOVX    A,@DPTR
011E FD                MOV     R5,A
011F 7C00              MOV     R4,#00H
0121 D3                SETB    C
0122 ED                MOV     A,R5
0123 9F                SUBB    A,R7
0124 EC                MOV     A,R4
0125 9E                SUBB    A,R6
0126 4039              JC      ?C0030
                                           ; SOURCE LINE # 496
                                           ; SOURCE LINE # 497
0128 120000      R     LCALL   _?USB_MIDI_IN_EP_Service
                                           ; SOURCE LINE # 498
012B 900000      R     MOV     DPTR,#USB_midi_in_ep
012E E0                MOVX    A,@DPTR
012F FF                MOV     R7,A
0130 EF                MOV     A,R7
0131 75F00B            MOV     B,#0BH
0134 A4                MUL     AB
0135 2400        E     ADD     A,#LOW USB_EP+08H
0137 F582              MOV     DPL,A
0139 E4                CLR     A
013A 3400        E     ADDC    A,#HIGH USB_EP+08H
013C F583              MOV     DPH,A
013E E0                MOVX    A,@DPTR
013F FE                MOV     R6,A
0140 A3                INC     DPTR
0141 E0                MOVX    A,@DPTR
0142 FF                MOV     R7,A
0143 EF                MOV     A,R7
0144 24FC              ADD     A,#0FCH
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 35  

0146 FF                MOV     R7,A
0147 EE                MOV     A,R6
0148 34FF              ADDC    A,#0FFH
014A FE                MOV     R6,A
014B 900000      R     MOV     DPTR,#USB_midiInPointer
014E E0                MOVX    A,@DPTR
014F FD                MOV     R5,A
0150 7C00              MOV     R4,#00H
0152 D3                SETB    C
0153 ED                MOV     A,R5
0154 9F                SUBB    A,R7
0155 EC                MOV     A,R4
0156 9E                SUBB    A,R6
0157 4008              JC      ?C0030
                                           ; SOURCE LINE # 500
                                           ; SOURCE LINE # 502
0159 900000      R     MOV     DPTR,#retError
015C 7401              MOV     A,#01H
015E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 503
015F 800E              SJMP    ?C0031
                                           ; SOURCE LINE # 504
                                           ; SOURCE LINE # 505
                                           ; SOURCE LINE # 506
0161         ?C0030:
                                           ; SOURCE LINE # 507
0161 900000      R     MOV     DPTR,#ic
0164 E0                MOVX    A,@DPTR
0165 FF                MOV     R7,A
0166 EF                MOV     A,R7
0167 D3                SETB    C
0168 9403              SUBB    A,#03H
016A 4003              JC      $ + 5H
016C 020000      R     LJMP    ?C0032
016F         ?C0031:
                                           ; SOURCE LINE # 509
016F 900000      R     MOV     DPTR,#retError
0172 E0                MOVX    A,@DPTR
0173 FF                MOV     R7,A
0174 EF                MOV     A,R7
0175 702D              JNZ     ?C0036
                                           ; SOURCE LINE # 510
                                           ; SOURCE LINE # 511
0177 900000      R     MOV     DPTR,#cable
017A E0                MOVX    A,@DPTR
017B FF                MOV     R7,A
017C 90FFFF            MOV     DPTR,#0FFFFH
017F 120000      E     LCALL   ?C?ADDXBP
0182 EF                MOV     A,R7
0183 F0                MOVX    @DPTR,A
0184 900000      R     MOV     DPTR,#ic
0187 E0                MOVX    A,@DPTR
0188 FF                MOV     R7,A
0189 90FFFF            MOV     DPTR,#0FFFFH
018C 120000      E     LCALL   ?C?ADDXBP
018F EF                MOV     A,R7
0190 F0                MOVX    @DPTR,A
0191 900000      R     MOV     DPTR,#midiMsg
0194 120000      E     LCALL   ?C?PLDXDATA
0197 7FF7              MOV     R7,#0F7H
0199 120000      R     LCALL   _?USB_PrepareInBuffer
                                           ; SOURCE LINE # 512
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 36  

                                           ; SOURCE LINE # 513
                                           ; SOURCE LINE # 514
019C 8006              SJMP    ?C0036
019E         ?C0026:
                                           ; SOURCE LINE # 516
                                           ; SOURCE LINE # 518
019E 900000      R     MOV     DPTR,#retError
01A1 7401              MOV     A,#01H
01A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 519
01A4         ?C0036:
                                           ; SOURCE LINE # 522
01A4 120000      E     LCALL   MIDI1_UART_EnableRxInt
                                           ; SOURCE LINE # 524
01A7 120000      E     LCALL   MIDI2_UART_EnableRxInt
                                           ; SOURCE LINE # 528
01AA 900000      R     MOV     DPTR,#retError
01AD E0                MOVX    A,@DPTR
01AE FF                MOV     R7,A
                                           ; SOURCE LINE # 529
01AF         ?C0037:
01AF 22                RET     
             ; FUNCTION _USB_PutUsbMidiIn (END)

             ; FUNCTION _?USB_PrepareInBuffer (BEGIN)
                                           ; SOURCE LINE # 569
0000 90FFFD            MOV     DPTR,#0FFFDH
0003 120000      E     LCALL   ?C?ADDXBP
0006 120000      E     LCALL   ?C?PSTXDATA
0009 90FFFF            MOV     DPTR,#0FFFFH
000C 120000      E     LCALL   ?C?ADDXBP
000F EF                MOV     A,R7
0010 F0                MOVX    @DPTR,A
0011 90FFFE            MOV     DPTR,#0FFFEH
0014 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 570
                                           ; SOURCE LINE # 575
0017 900003            MOV     DPTR,#03H
001A 120000      E     LCALL   ?C?XBPOFF
001D 120000      E     LCALL   ?C?PLDXDATA
0020 120000      E     LCALL   ?C?CLDPTR
0023 FF                MOV     R7,A
0024 850083      E     MOV     DPH,?C_XBP
0027 850082      E     MOV     DPL,?C_XBP+01H
002A EF                MOV     A,R7
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 576
002C 900003            MOV     DPTR,#03H
002F 120000      E     LCALL   ?C?XBPOFF
0032 120000      E     LCALL   ?C?PLDXDATA
0035 E9                MOV     A,R1
0036 2401              ADD     A,#01H
0038 F9                MOV     R1,A
0039 EA                MOV     A,R2
003A 3400              ADDC    A,#00H
003C FA                MOV     R2,A
003D 120000      E     LCALL   ?C?CLDPTR
0040 FF                MOV     R7,A
0041 850083      E     MOV     DPH,?C_XBP
0044 850082      E     MOV     DPL,?C_XBP+01H
0047 A3                INC     DPTR
0048 EF                MOV     A,R7
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 37  

0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 578
004A 850083      E     MOV     DPH,?C_XBP
004D 850082      E     MOV     DPL,?C_XBP+01H
0050 A3                INC     DPTR
0051 A3                INC     DPTR
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 EF                MOV     A,R7
0055 C3                CLR     C
0056 94F8              SUBB    A,#0F8H
0058 4075              JC      ?C0038
                                           ; SOURCE LINE # 579
                                           ; SOURCE LINE # 580
005A 900007            MOV     DPTR,#07H
005D 120000      E     LCALL   ?C?XBPOFF
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 EF                MOV     A,R7
0063 440F              ORL     A,#0FH
0065 FF                MOV     R7,A
0066 900000      R     MOV     DPTR,#USB_midiInPointer
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B 7400        R     MOV     A,#LOW USB_midiInBuffer
006D 2E                ADD     A,R6
006E F582              MOV     DPL,A
0070 E4                CLR     A
0071 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0073 F583              MOV     DPH,A
0075 EF                MOV     A,R7
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 581
0077 900000      R     MOV     DPTR,#USB_midiInPointer
007A E0                MOVX    A,@DPTR
007B 04                INC     A
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 582
007D 850083      E     MOV     DPH,?C_XBP
0080 850082      E     MOV     DPL,?C_XBP+01H
0083 A3                INC     DPTR
0084 A3                INC     DPTR
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 900000      R     MOV     DPTR,#USB_midiInPointer
008A E0                MOVX    A,@DPTR
008B FE                MOV     R6,A
008C 7400        R     MOV     A,#LOW USB_midiInBuffer
008E 2E                ADD     A,R6
008F F582              MOV     DPL,A
0091 E4                CLR     A
0092 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0094 F583              MOV     DPH,A
0096 EF                MOV     A,R7
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 583
0098 900000      R     MOV     DPTR,#USB_midiInPointer
009B E0                MOVX    A,@DPTR
009C 04                INC     A
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 584
009E 900000      R     MOV     DPTR,#USB_midiInPointer
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 38  

00A1 E0                MOVX    A,@DPTR
00A2 FF                MOV     R7,A
00A3 7400        R     MOV     A,#LOW USB_midiInBuffer
00A5 2F                ADD     A,R7
00A6 F582              MOV     DPL,A
00A8 E4                CLR     A
00A9 3400        R     ADDC    A,#HIGH USB_midiInBuffer
00AB F583              MOV     DPH,A
00AD E4                CLR     A
00AE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 585
00AF 900000      R     MOV     DPTR,#USB_midiInPointer
00B2 E0                MOVX    A,@DPTR
00B3 04                INC     A
00B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 586
00B5 900000      R     MOV     DPTR,#USB_midiInPointer
00B8 E0                MOVX    A,@DPTR
00B9 FF                MOV     R7,A
00BA 7400        R     MOV     A,#LOW USB_midiInBuffer
00BC 2F                ADD     A,R7
00BD F582              MOV     DPL,A
00BF E4                CLR     A
00C0 3400        R     ADDC    A,#HIGH USB_midiInBuffer
00C2 F583              MOV     DPH,A
00C4 E4                CLR     A
00C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 587
00C6 900000      R     MOV     DPTR,#USB_midiInPointer
00C9 E0                MOVX    A,@DPTR
00CA 04                INC     A
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 588
00CC 020000      R     LJMP    ?C0061
00CF         ?C0038:
                                           ; SOURCE LINE # 589
00CF 850083      E     MOV     DPH,?C_XBP
00D2 850082      E     MOV     DPL,?C_XBP+01H
00D5 A3                INC     DPTR
00D6 A3                INC     DPTR
00D7 E0                MOVX    A,@DPTR
00D8 FF                MOV     R7,A
00D9 EF                MOV     A,R7
00DA C3                CLR     C
00DB 9404              SUBB    A,#04H
00DD 4012              JC      ?C0041
00DF 850083      E     MOV     DPH,?C_XBP
00E2 850082      E     MOV     DPL,?C_XBP+01H
00E5 A3                INC     DPTR
00E6 A3                INC     DPTR
00E7 E0                MOVX    A,@DPTR
00E8 FF                MOV     R7,A
00E9 EF                MOV     A,R7
00EA 64F0              XRL     A,#0F0H
00EC 6003              JZ      $ + 5H
00EE 020000      R     LJMP    ?C0040
00F1         ?C0041:
                                           ; SOURCE LINE # 590
                                           ; SOURCE LINE # 591
00F1 850083      E     MOV     DPH,?C_XBP
00F4 850082      E     MOV     DPL,?C_XBP+01H
00F7 A3                INC     DPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 39  

00F8 A3                INC     DPTR
00F9 E0                MOVX    A,@DPTR
00FA FF                MOV     R7,A
00FB EF                MOV     A,R7
00FC B4F026            CJNE    A,#0F0H,?C0042
                                           ; SOURCE LINE # 592
                                           ; SOURCE LINE # 593
00FF 900007            MOV     DPTR,#07H
0102 120000      E     LCALL   ?C?XBPOFF
0105 E0                MOVX    A,@DPTR
0106 FF                MOV     R7,A
0107 EF                MOV     A,R7
0108 4404              ORL     A,#04H
010A FF                MOV     R7,A
010B 900000      R     MOV     DPTR,#USB_midiInPointer
010E E0                MOVX    A,@DPTR
010F FE                MOV     R6,A
0110 7400        R     MOV     A,#LOW USB_midiInBuffer
0112 2E                ADD     A,R6
0113 F582              MOV     DPL,A
0115 E4                CLR     A
0116 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0118 F583              MOV     DPH,A
011A EF                MOV     A,R7
011B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 594
011C 900000      R     MOV     DPTR,#USB_midiInPointer
011F E0                MOVX    A,@DPTR
0120 04                INC     A
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 595
0122 020000      R     LJMP    ?C0043
0125         ?C0042:
                                           ; SOURCE LINE # 596
0125 850083      E     MOV     DPH,?C_XBP
0128 850082      E     MOV     DPL,?C_XBP+01H
012B E0                MOVX    A,@DPTR
012C FF                MOV     R7,A
012D EF                MOV     A,R7
012E C3                CLR     C
012F 94F0              SUBB    A,#0F0H
0131 5032              JNC     ?C0044
                                           ; SOURCE LINE # 597
                                           ; SOURCE LINE # 598
0133 850083      E     MOV     DPH,?C_XBP
0136 850082      E     MOV     DPL,?C_XBP+01H
0139 E0                MOVX    A,@DPTR
013A FF                MOV     R7,A
013B EF                MOV     A,R7
013C C4                SWAP    A
013D 540F              ANL     A,#0FH
013F FF                MOV     R7,A
0140 900007            MOV     DPTR,#07H
0143 120000      E     LCALL   ?C?XBPOFF
0146 E0                MOVX    A,@DPTR
0147 FE                MOV     R6,A
0148 EF                MOV     A,R7
0149 4E                ORL     A,R6
014A FF                MOV     R7,A
014B 900000      R     MOV     DPTR,#USB_midiInPointer
014E E0                MOVX    A,@DPTR
014F FE                MOV     R6,A
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 40  

0150 7400        R     MOV     A,#LOW USB_midiInBuffer
0152 2E                ADD     A,R6
0153 F582              MOV     DPL,A
0155 E4                CLR     A
0156 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0158 F583              MOV     DPH,A
015A EF                MOV     A,R7
015B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 599
015C 900000      R     MOV     DPTR,#USB_midiInPointer
015F E0                MOVX    A,@DPTR
0160 04                INC     A
0161 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 600
0162 020000      R     LJMP    ?C0043
0165         ?C0044:
                                           ; SOURCE LINE # 601
0165 850083      E     MOV     DPH,?C_XBP
0168 850082      E     MOV     DPL,?C_XBP+01H
016B E0                MOVX    A,@DPTR
016C FF                MOV     R7,A
016D EF                MOV     A,R7
016E B4F625            CJNE    A,#0F6H,?C0046
                                           ; SOURCE LINE # 602
                                           ; SOURCE LINE # 603
0171 900007            MOV     DPTR,#07H
0174 120000      E     LCALL   ?C?XBPOFF
0177 E0                MOVX    A,@DPTR
0178 FF                MOV     R7,A
0179 EF                MOV     A,R7
017A 4405              ORL     A,#05H
017C FF                MOV     R7,A
017D 900000      R     MOV     DPTR,#USB_midiInPointer
0180 E0                MOVX    A,@DPTR
0181 FE                MOV     R6,A
0182 7400        R     MOV     A,#LOW USB_midiInBuffer
0184 2E                ADD     A,R6
0185 F582              MOV     DPL,A
0187 E4                CLR     A
0188 3400        R     ADDC    A,#HIGH USB_midiInBuffer
018A F583              MOV     DPH,A
018C EF                MOV     A,R7
018D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 604
018E 900000      R     MOV     DPTR,#USB_midiInPointer
0191 E0                MOVX    A,@DPTR
0192 04                INC     A
0193 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 605
0194 806D              SJMP    ?C0043
0196         ?C0046:
                                           ; SOURCE LINE # 606
0196 850083      E     MOV     DPH,?C_XBP
0199 850082      E     MOV     DPL,?C_XBP+01H
019C E0                MOVX    A,@DPTR
019D FF                MOV     R7,A
019E EF                MOV     A,R7
019F 64F1              XRL     A,#0F1H
01A1 600C              JZ      ?C0049
01A3 850083      E     MOV     DPH,?C_XBP
01A6 850082      E     MOV     DPL,?C_XBP+01H
01A9 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 41  

01AA FF                MOV     R7,A
01AB EF                MOV     A,R7
01AC B4F325            CJNE    A,#0F3H,?C0048
01AF         ?C0049:
                                           ; SOURCE LINE # 607
                                           ; SOURCE LINE # 608
01AF 900007            MOV     DPTR,#07H
01B2 120000      E     LCALL   ?C?XBPOFF
01B5 E0                MOVX    A,@DPTR
01B6 FF                MOV     R7,A
01B7 EF                MOV     A,R7
01B8 4402              ORL     A,#02H
01BA FF                MOV     R7,A
01BB 900000      R     MOV     DPTR,#USB_midiInPointer
01BE E0                MOVX    A,@DPTR
01BF FE                MOV     R6,A
01C0 7400        R     MOV     A,#LOW USB_midiInBuffer
01C2 2E                ADD     A,R6
01C3 F582              MOV     DPL,A
01C5 E4                CLR     A
01C6 3400        R     ADDC    A,#HIGH USB_midiInBuffer
01C8 F583              MOV     DPH,A
01CA EF                MOV     A,R7
01CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 609
01CC 900000      R     MOV     DPTR,#USB_midiInPointer
01CF E0                MOVX    A,@DPTR
01D0 04                INC     A
01D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 610
01D2 802F              SJMP    ?C0043
01D4         ?C0048:
                                           ; SOURCE LINE # 611
01D4 850083      E     MOV     DPH,?C_XBP
01D7 850082      E     MOV     DPL,?C_XBP+01H
01DA E0                MOVX    A,@DPTR
01DB FF                MOV     R7,A
01DC EF                MOV     A,R7
01DD B4F223            CJNE    A,#0F2H,?C0043
                                           ; SOURCE LINE # 612
                                           ; SOURCE LINE # 613
01E0 900007            MOV     DPTR,#07H
01E3 120000      E     LCALL   ?C?XBPOFF
01E6 E0                MOVX    A,@DPTR
01E7 FF                MOV     R7,A
01E8 EF                MOV     A,R7
01E9 4403              ORL     A,#03H
01EB FF                MOV     R7,A
01EC 900000      R     MOV     DPTR,#USB_midiInPointer
01EF E0                MOVX    A,@DPTR
01F0 FE                MOV     R6,A
01F1 7400        R     MOV     A,#LOW USB_midiInBuffer
01F3 2E                ADD     A,R6
01F4 F582              MOV     DPL,A
01F6 E4                CLR     A
01F7 3400        R     ADDC    A,#HIGH USB_midiInBuffer
01F9 F583              MOV     DPH,A
01FB EF                MOV     A,R7
01FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 614
01FD 900000      R     MOV     DPTR,#USB_midiInPointer
0200 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 42  

0201 04                INC     A
0202 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 615
                                           ; SOURCE LINE # 617
                                           ; SOURCE LINE # 618
0203         ?C0043:
                                           ; SOURCE LINE # 620
0203 850083      E     MOV     DPH,?C_XBP
0206 850082      E     MOV     DPL,?C_XBP+01H
0209 E0                MOVX    A,@DPTR
020A FF                MOV     R7,A
020B 900000      R     MOV     DPTR,#USB_midiInPointer
020E E0                MOVX    A,@DPTR
020F FE                MOV     R6,A
0210 7400        R     MOV     A,#LOW USB_midiInBuffer
0212 2E                ADD     A,R6
0213 F582              MOV     DPL,A
0215 E4                CLR     A
0216 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0218 F583              MOV     DPH,A
021A EF                MOV     A,R7
021B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 621
021C 900000      R     MOV     DPTR,#USB_midiInPointer
021F E0                MOVX    A,@DPTR
0220 04                INC     A
0221 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 622
0222 850083      E     MOV     DPH,?C_XBP
0225 850082      E     MOV     DPL,?C_XBP+01H
0228 A3                INC     DPTR
0229 E0                MOVX    A,@DPTR
022A FF                MOV     R7,A
022B 900000      R     MOV     DPTR,#USB_midiInPointer
022E E0                MOVX    A,@DPTR
022F FE                MOV     R6,A
0230 7400        R     MOV     A,#LOW USB_midiInBuffer
0232 2E                ADD     A,R6
0233 F582              MOV     DPL,A
0235 E4                CLR     A
0236 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0238 F583              MOV     DPH,A
023A EF                MOV     A,R7
023B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 623
023C 900000      R     MOV     DPTR,#USB_midiInPointer
023F E0                MOVX    A,@DPTR
0240 04                INC     A
0241 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 624
0242 900003            MOV     DPTR,#03H
0245 120000      E     LCALL   ?C?XBPOFF
0248 120000      E     LCALL   ?C?PLDXDATA
024B E9                MOV     A,R1
024C 2402              ADD     A,#02H
024E F9                MOV     R1,A
024F EA                MOV     A,R2
0250 3400              ADDC    A,#00H
0252 FA                MOV     R2,A
0253 120000      E     LCALL   ?C?CLDPTR
0256 FF                MOV     R7,A
0257 900000      R     MOV     DPTR,#USB_midiInPointer
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 43  

025A E0                MOVX    A,@DPTR
025B FE                MOV     R6,A
025C 7400        R     MOV     A,#LOW USB_midiInBuffer
025E 2E                ADD     A,R6
025F F582              MOV     DPL,A
0261 E4                CLR     A
0262 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0264 F583              MOV     DPH,A
0266 EF                MOV     A,R7
0267 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 625
0268 900000      R     MOV     DPTR,#USB_midiInPointer
026B E0                MOVX    A,@DPTR
026C 04                INC     A
026D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 626
026E 020000      R     LJMP    ?C0061
0271         ?C0040:
                                           ; SOURCE LINE # 627
0271 850083      E     MOV     DPH,?C_XBP
0274 850082      E     MOV     DPL,?C_XBP+01H
0277 A3                INC     DPTR
0278 A3                INC     DPTR
0279 E0                MOVX    A,@DPTR
027A FF                MOV     R7,A
027B EF                MOV     A,R7
027C 64F7              XRL     A,#0F7H
027E 6003              JZ      $ + 5H
0280 020000      R     LJMP    ?C0061
                                           ; SOURCE LINE # 628
                                           ; SOURCE LINE # 629
0283 900006            MOV     DPTR,#06H
0286 120000      E     LCALL   ?C?XBPOFF
0289 E0                MOVX    A,@DPTR
028A FF                MOV     R7,A
028B EF                MOV     A,R7
028C 120000      E     LCALL   ?C?CCASE
028F 0000        R     DW      ?C0056
0291 00                DB      00H
0292 0000        R     DW      ?C0057
0294 01                DB      01H
0295 0000        R     DW      ?C0058
0297 02                DB      02H
0298 0000              DW      00H
029A 0000        R     DW      ?C0061
                                           ; SOURCE LINE # 630
                                           ; SOURCE LINE # 631
029C         ?C0056:
                                           ; SOURCE LINE # 632
029C 900007            MOV     DPTR,#07H
029F 120000      E     LCALL   ?C?XBPOFF
02A2 E0                MOVX    A,@DPTR
02A3 FF                MOV     R7,A
02A4 EF                MOV     A,R7
02A5 4405              ORL     A,#05H
02A7 FF                MOV     R7,A
02A8 900000      R     MOV     DPTR,#USB_midiInPointer
02AB E0                MOVX    A,@DPTR
02AC FE                MOV     R6,A
02AD 7400        R     MOV     A,#LOW USB_midiInBuffer
02AF 2E                ADD     A,R6
02B0 F582              MOV     DPL,A
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 44  

02B2 E4                CLR     A
02B3 3400        R     ADDC    A,#HIGH USB_midiInBuffer
02B5 F583              MOV     DPH,A
02B7 EF                MOV     A,R7
02B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 634
02B9 900000      R     MOV     DPTR,#USB_midiInPointer
02BC E0                MOVX    A,@DPTR
02BD 04                INC     A
02BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 635
02BF 900000      R     MOV     DPTR,#USB_midiInPointer
02C2 E0                MOVX    A,@DPTR
02C3 FF                MOV     R7,A
02C4 7400        R     MOV     A,#LOW USB_midiInBuffer
02C6 2F                ADD     A,R7
02C7 F582              MOV     DPL,A
02C9 E4                CLR     A
02CA 3400        R     ADDC    A,#HIGH USB_midiInBuffer
02CC F583              MOV     DPH,A
02CE 74F7              MOV     A,#0F7H
02D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 636
02D1 900000      R     MOV     DPTR,#USB_midiInPointer
02D4 E0                MOVX    A,@DPTR
02D5 04                INC     A
02D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 637
02D7 900000      R     MOV     DPTR,#USB_midiInPointer
02DA E0                MOVX    A,@DPTR
02DB FF                MOV     R7,A
02DC 7400        R     MOV     A,#LOW USB_midiInBuffer
02DE 2F                ADD     A,R7
02DF F582              MOV     DPL,A
02E1 E4                CLR     A
02E2 3400        R     ADDC    A,#HIGH USB_midiInBuffer
02E4 F583              MOV     DPH,A
02E6 E4                CLR     A
02E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 638
02E8 900000      R     MOV     DPTR,#USB_midiInPointer
02EB E0                MOVX    A,@DPTR
02EC 04                INC     A
02ED F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 639
02EE 900000      R     MOV     DPTR,#USB_midiInPointer
02F1 E0                MOVX    A,@DPTR
02F2 FF                MOV     R7,A
02F3 7400        R     MOV     A,#LOW USB_midiInBuffer
02F5 2F                ADD     A,R7
02F6 F582              MOV     DPL,A
02F8 E4                CLR     A
02F9 3400        R     ADDC    A,#HIGH USB_midiInBuffer
02FB F583              MOV     DPH,A
02FD E4                CLR     A
02FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 640
02FF 900000      R     MOV     DPTR,#USB_midiInPointer
0302 E0                MOVX    A,@DPTR
0303 04                INC     A
0304 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 641
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 45  

0305 020000      R     LJMP    ?C0061
                                           ; SOURCE LINE # 642
0308         ?C0057:
                                           ; SOURCE LINE # 643
0308 900007            MOV     DPTR,#07H
030B 120000      E     LCALL   ?C?XBPOFF
030E E0                MOVX    A,@DPTR
030F FF                MOV     R7,A
0310 EF                MOV     A,R7
0311 4406              ORL     A,#06H
0313 FF                MOV     R7,A
0314 900000      R     MOV     DPTR,#USB_midiInPointer
0317 E0                MOVX    A,@DPTR
0318 FE                MOV     R6,A
0319 7400        R     MOV     A,#LOW USB_midiInBuffer
031B 2E                ADD     A,R6
031C F582              MOV     DPL,A
031E E4                CLR     A
031F 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0321 F583              MOV     DPH,A
0323 EF                MOV     A,R7
0324 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 645
0325 900000      R     MOV     DPTR,#USB_midiInPointer
0328 E0                MOVX    A,@DPTR
0329 04                INC     A
032A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 646
032B 850083      E     MOV     DPH,?C_XBP
032E 850082      E     MOV     DPL,?C_XBP+01H
0331 E0                MOVX    A,@DPTR
0332 FF                MOV     R7,A
0333 900000      R     MOV     DPTR,#USB_midiInPointer
0336 E0                MOVX    A,@DPTR
0337 FE                MOV     R6,A
0338 7400        R     MOV     A,#LOW USB_midiInBuffer
033A 2E                ADD     A,R6
033B F582              MOV     DPL,A
033D E4                CLR     A
033E 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0340 F583              MOV     DPH,A
0342 EF                MOV     A,R7
0343 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 647
0344 900000      R     MOV     DPTR,#USB_midiInPointer
0347 E0                MOVX    A,@DPTR
0348 04                INC     A
0349 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 648
034A 900000      R     MOV     DPTR,#USB_midiInPointer
034D E0                MOVX    A,@DPTR
034E FF                MOV     R7,A
034F 7400        R     MOV     A,#LOW USB_midiInBuffer
0351 2F                ADD     A,R7
0352 F582              MOV     DPL,A
0354 E4                CLR     A
0355 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0357 F583              MOV     DPH,A
0359 74F7              MOV     A,#0F7H
035B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 649
035C 900000      R     MOV     DPTR,#USB_midiInPointer
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 46  

035F E0                MOVX    A,@DPTR
0360 04                INC     A
0361 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 650
0362 900000      R     MOV     DPTR,#USB_midiInPointer
0365 E0                MOVX    A,@DPTR
0366 FF                MOV     R7,A
0367 7400        R     MOV     A,#LOW USB_midiInBuffer
0369 2F                ADD     A,R7
036A F582              MOV     DPL,A
036C E4                CLR     A
036D 3400        R     ADDC    A,#HIGH USB_midiInBuffer
036F F583              MOV     DPH,A
0371 E4                CLR     A
0372 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 651
0373 900000      R     MOV     DPTR,#USB_midiInPointer
0376 E0                MOVX    A,@DPTR
0377 04                INC     A
0378 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 652
0379 807A              SJMP    ?C0061
                                           ; SOURCE LINE # 653
037B         ?C0058:
                                           ; SOURCE LINE # 654
037B 900007            MOV     DPTR,#07H
037E 120000      E     LCALL   ?C?XBPOFF
0381 E0                MOVX    A,@DPTR
0382 FF                MOV     R7,A
0383 EF                MOV     A,R7
0384 4407              ORL     A,#07H
0386 FF                MOV     R7,A
0387 900000      R     MOV     DPTR,#USB_midiInPointer
038A E0                MOVX    A,@DPTR
038B FE                MOV     R6,A
038C 7400        R     MOV     A,#LOW USB_midiInBuffer
038E 2E                ADD     A,R6
038F F582              MOV     DPL,A
0391 E4                CLR     A
0392 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0394 F583              MOV     DPH,A
0396 EF                MOV     A,R7
0397 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 656
0398 900000      R     MOV     DPTR,#USB_midiInPointer
039B E0                MOVX    A,@DPTR
039C 04                INC     A
039D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 657
039E 850083      E     MOV     DPH,?C_XBP
03A1 850082      E     MOV     DPL,?C_XBP+01H
03A4 E0                MOVX    A,@DPTR
03A5 FF                MOV     R7,A
03A6 900000      R     MOV     DPTR,#USB_midiInPointer
03A9 E0                MOVX    A,@DPTR
03AA FE                MOV     R6,A
03AB 7400        R     MOV     A,#LOW USB_midiInBuffer
03AD 2E                ADD     A,R6
03AE F582              MOV     DPL,A
03B0 E4                CLR     A
03B1 3400        R     ADDC    A,#HIGH USB_midiInBuffer
03B3 F583              MOV     DPH,A
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 47  

03B5 EF                MOV     A,R7
03B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 658
03B7 900000      R     MOV     DPTR,#USB_midiInPointer
03BA E0                MOVX    A,@DPTR
03BB 04                INC     A
03BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 659
03BD 850083      E     MOV     DPH,?C_XBP
03C0 850082      E     MOV     DPL,?C_XBP+01H
03C3 A3                INC     DPTR
03C4 E0                MOVX    A,@DPTR
03C5 FF                MOV     R7,A
03C6 900000      R     MOV     DPTR,#USB_midiInPointer
03C9 E0                MOVX    A,@DPTR
03CA FE                MOV     R6,A
03CB 7400        R     MOV     A,#LOW USB_midiInBuffer
03CD 2E                ADD     A,R6
03CE F582              MOV     DPL,A
03D0 E4                CLR     A
03D1 3400        R     ADDC    A,#HIGH USB_midiInBuffer
03D3 F583              MOV     DPH,A
03D5 EF                MOV     A,R7
03D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 660
03D7 900000      R     MOV     DPTR,#USB_midiInPointer
03DA E0                MOVX    A,@DPTR
03DB 04                INC     A
03DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 661
03DD 900000      R     MOV     DPTR,#USB_midiInPointer
03E0 E0                MOVX    A,@DPTR
03E1 FF                MOV     R7,A
03E2 7400        R     MOV     A,#LOW USB_midiInBuffer
03E4 2F                ADD     A,R7
03E5 F582              MOV     DPL,A
03E7 E4                CLR     A
03E8 3400        R     ADDC    A,#HIGH USB_midiInBuffer
03EA F583              MOV     DPH,A
03EC 74F7              MOV     A,#0F7H
03EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 662
03EF 900000      R     MOV     DPTR,#USB_midiInPointer
03F2 E0                MOVX    A,@DPTR
03F3 04                INC     A
03F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 663
                                           ; SOURCE LINE # 664
                                           ; SOURCE LINE # 665
                                           ; SOURCE LINE # 666
                                           ; SOURCE LINE # 667
                                           ; SOURCE LINE # 669
                                           ; SOURCE LINE # 670
                                           ; SOURCE LINE # 671
03F5         ?C0061:
03F5 900008            MOV     DPTR,#08H
03F8 120000      E     LCALL   ?C?ADDXBP
03FB 22                RET     
             ; FUNCTION _?USB_PrepareInBuffer (END)

             ; FUNCTION USB_MIDI_Init (BEGIN)
                                           ; SOURCE LINE # 704
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 48  

                                           ; SOURCE LINE # 705
                                           ; SOURCE LINE # 706
0000 900000      R     MOV     DPTR,#USB_MIDI1_Event
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 707
0005 900000      R     MOV     DPTR,#USB_MIDI1_Event+01H
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 708
000A 900000      R     MOV     DPTR,#USB_MIDI1_Event+02H
000D E4                CLR     A
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 709
000F 900000      R     MOV     DPTR,#USB_MIDI1_Event+03H
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 710
0014 900000      R     MOV     DPTR,#USB_MIDI1_TxRunStat
0017 E4                CLR     A
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 711
0019 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
001C E4                CLR     A
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 713
001E 120000      E     LCALL   MIDI1_UART_Start
                                           ; SOURCE LINE # 715
0021 7D04              MOV     R5,#04H
0023 7F02              MOV     R7,#02H
0025 120000      E     LCALL   _CyIntSetPriority
                                           ; SOURCE LINE # 716
0028 7D02              MOV     R5,#02H
002A 7F01              MOV     R7,#01H
002C 120000      E     LCALL   _CyIntSetPriority
                                           ; SOURCE LINE # 719
002F 900000      R     MOV     DPTR,#USB_MIDI2_Event
0032 E4                CLR     A
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 720
0034 900000      R     MOV     DPTR,#USB_MIDI2_Event+01H
0037 E4                CLR     A
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 721
0039 900000      R     MOV     DPTR,#USB_MIDI2_Event+02H
003C E4                CLR     A
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 722
003E 900000      R     MOV     DPTR,#USB_MIDI2_Event+03H
0041 E4                CLR     A
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 723
0043 900000      R     MOV     DPTR,#USB_MIDI2_TxRunStat
0046 E4                CLR     A
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 724
0048 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
004B E4                CLR     A
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 726
004D 120000      E     LCALL   MIDI2_UART_Start
                                           ; SOURCE LINE # 728
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 49  

0050 7D04              MOV     R5,#04H
0052 7F04              MOV     R7,#04H
0054 120000      E     LCALL   _CyIntSetPriority
                                           ; SOURCE LINE # 729
0057 7D02              MOV     R5,#02H
0059 7F03              MOV     R7,#03H
005B 120000      E     LCALL   _CyIntSetPriority
                                           ; SOURCE LINE # 736
005E 22                RET     
             ; FUNCTION USB_MIDI_Init (END)

             ; FUNCTION _?USB_ProcessMidiIn (BEGIN)
                                           ; SOURCE LINE # 758
0000 90FFFD            MOV     DPTR,#0FFFDH
0003 120000      E     LCALL   ?C?ADDXBP
0006 120000      E     LCALL   ?C?PSTXDATA
0009 90FFFF            MOV     DPTR,#0FFFFH
000C 120000      E     LCALL   ?C?ADDXBP
000F EF                MOV     A,R7
0010 F0                MOVX    @DPTR,A
0011 90FFFF            MOV     DPTR,#0FFFFH
0014 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 759
                                           ; SOURCE LINE # 761
0017 850083      E     MOV     DPH,?C_XBP
001A 850082      E     MOV     DPL,?C_XBP+01H
001D E4                CLR     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 766
001F 850083      E     MOV     DPH,?C_XBP
0022 850082      E     MOV     DPL,?C_XBP+01H
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 EF                MOV     A,R7
0029 5480              ANL     A,#080H
002B FF                MOV     R7,A
002C 7E00              MOV     R6,#00H
002E EF                MOV     A,R7
002F 4E                ORL     A,R6
0030 7003              JNZ     $ + 5H
0032 020000      R     LJMP    ?C0063
                                           ; SOURCE LINE # 767
                                           ; SOURCE LINE # 768
0035 850083      E     MOV     DPH,?C_XBP
0038 850082      E     MOV     DPL,?C_XBP+01H
003B A3                INC     DPTR
003C E0                MOVX    A,@DPTR
003D FF                MOV     R7,A
003E EF                MOV     A,R7
003F 54F0              ANL     A,#0F0H
0041 FF                MOV     R7,A
0042 7E00              MOV     R6,#00H
0044 EF                MOV     A,R7
0045 64F0              XRL     A,#0F0H
0047 4E                ORL     A,R6
0048 6003              JZ      $ + 5H
004A 020000      R     LJMP    ?C0064
                                           ; SOURCE LINE # 769
                                           ; SOURCE LINE # 770
004D 850083      E     MOV     DPH,?C_XBP
0050 850082      E     MOV     DPL,?C_XBP+01H
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 50  

0053 A3                INC     DPTR
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 EF                MOV     A,R7
0057 5408              ANL     A,#08H
0059 FF                MOV     R7,A
005A 7E00              MOV     R6,#00H
005C EF                MOV     A,R7
005D 4E                ORL     A,R6
005E 6014              JZ      ?C0065
                                           ; SOURCE LINE # 771
                                           ; SOURCE LINE # 772
0060 850083      E     MOV     DPH,?C_XBP
0063 850082      E     MOV     DPL,?C_XBP+01H
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 850083      E     MOV     DPH,?C_XBP
006C 850082      E     MOV     DPL,?C_XBP+01H
006F EF                MOV     A,R7
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 773
0071 020000      R     LJMP    ?C0085
0074         ?C0065:
                                           ; SOURCE LINE # 775
                                           ; SOURCE LINE # 776
0074 850083      E     MOV     DPH,?C_XBP
0077 850082      E     MOV     DPL,?C_XBP+01H
007A A3                INC     DPTR
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D EF                MOV     A,R7
007E 120000      E     LCALL   ?C?CCASE
0081 0000        R     DW      ?C0068
0083 F0                DB      0F0H
0084 0000        R     DW      ?C0072
0086 F1                DB      0F1H
0087 0000        R     DW      ?C0070
0089 F2                DB      0F2H
008A 0000        R     DW      ?C0071
008C F3                DB      0F3H
008D 0000        R     DW      ?C0073
008F F6                DB      0F6H
0090 0000        R     DW      ?C0069
0092 F7                DB      0F7H
0093 0000              DW      00H
0095 0000        R     DW      ?C0085
                                           ; SOURCE LINE # 777
                                           ; SOURCE LINE # 778
0097         ?C0068:
                                           ; SOURCE LINE # 779
0097 850083      E     MOV     DPH,?C_XBP
009A 850082      E     MOV     DPL,?C_XBP+01H
009D A3                INC     DPTR
009E A3                INC     DPTR
009F 120000      E     LCALL   ?C?PLDXDATA
00A2 E9                MOV     A,R1
00A3 2404              ADD     A,#04H
00A5 F9                MOV     R1,A
00A6 EA                MOV     A,R2
00A7 3400              ADDC    A,#00H
00A9 FA                MOV     R2,A
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 51  

00AA 74F0              MOV     A,#0F0H
00AC 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 780
00AF 850083      E     MOV     DPH,?C_XBP
00B2 850082      E     MOV     DPL,?C_XBP+01H
00B5 A3                INC     DPTR
00B6 A3                INC     DPTR
00B7 120000      E     LCALL   ?C?PLDXDATA
00BA E9                MOV     A,R1
00BB 2403              ADD     A,#03H
00BD F9                MOV     R1,A
00BE EA                MOV     A,R2
00BF 3400              ADDC    A,#00H
00C1 FA                MOV     R2,A
00C2 74F0              MOV     A,#0F0H
00C4 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 781
00C7 850083      E     MOV     DPH,?C_XBP
00CA 850082      E     MOV     DPL,?C_XBP+01H
00CD A3                INC     DPTR
00CE A3                INC     DPTR
00CF 120000      E     LCALL   ?C?PLDXDATA
00D2 E9                MOV     A,R1
00D3 2401              ADD     A,#01H
00D5 F9                MOV     R1,A
00D6 EA                MOV     A,R2
00D7 3400              ADDC    A,#00H
00D9 FA                MOV     R2,A
00DA 7401              MOV     A,#01H
00DC 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 782
00DF 850083      E     MOV     DPH,?C_XBP
00E2 850082      E     MOV     DPL,?C_XBP+01H
00E5 A3                INC     DPTR
00E6 A3                INC     DPTR
00E7 120000      E     LCALL   ?C?PLDXDATA
00EA 7403              MOV     A,#03H
00EC 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 783
00EF 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 784
00F2         ?C0069:
                                           ; SOURCE LINE # 785
00F2 850083      E     MOV     DPH,?C_XBP
00F5 850082      E     MOV     DPL,?C_XBP+01H
00F8 A3                INC     DPTR
00F9 A3                INC     DPTR
00FA 120000      E     LCALL   ?C?PLDXDATA
00FD E9                MOV     A,R1
00FE 2403              ADD     A,#03H
0100 F9                MOV     R1,A
0101 EA                MOV     A,R2
0102 3400              ADDC    A,#00H
0104 FA                MOV     R2,A
0105 E4                CLR     A
0106 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 786
0109 850083      E     MOV     DPH,?C_XBP
010C 850082      E     MOV     DPL,?C_XBP+01H
010F A3                INC     DPTR
0110 A3                INC     DPTR
0111 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 52  

0114 E9                MOV     A,R1
0115 2401              ADD     A,#01H
0117 F9                MOV     R1,A
0118 EA                MOV     A,R2
0119 3400              ADDC    A,#00H
011B FA                MOV     R2,A
011C 120000      E     LCALL   ?C?CLDPTR
011F FF                MOV     R7,A
0120 850083      E     MOV     DPH,?C_XBP
0123 850082      E     MOV     DPL,?C_XBP+01H
0126 A3                INC     DPTR
0127 A3                INC     DPTR
0128 120000      E     LCALL   ?C?PLDXDATA
012B E9                MOV     A,R1
012C 2402              ADD     A,#02H
012E F9                MOV     R1,A
012F EA                MOV     A,R2
0130 3400              ADDC    A,#00H
0132 FA                MOV     R2,A
0133 EF                MOV     A,R7
0134 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 787
0137 850083      E     MOV     DPH,?C_XBP
013A 850082      E     MOV     DPL,?C_XBP+01H
013D A3                INC     DPTR
013E A3                INC     DPTR
013F 120000      E     LCALL   ?C?PLDXDATA
0142 E9                MOV     A,R1
0143 2401              ADD     A,#01H
0145 F9                MOV     R1,A
0146 EA                MOV     A,R2
0147 3400              ADDC    A,#00H
0149 FA                MOV     R2,A
014A E4                CLR     A
014B 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 788
014E 850083      E     MOV     DPH,?C_XBP
0151 850082      E     MOV     DPL,?C_XBP+01H
0154 74F7              MOV     A,#0F7H
0156 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 789
0157 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 790
015A         ?C0070:
                                           ; SOURCE LINE # 791
015A 850083      E     MOV     DPH,?C_XBP
015D 850082      E     MOV     DPL,?C_XBP+01H
0160 A3                INC     DPTR
0161 A3                INC     DPTR
0162 120000      E     LCALL   ?C?PLDXDATA
0165 E9                MOV     A,R1
0166 2404              ADD     A,#04H
0168 F9                MOV     R1,A
0169 EA                MOV     A,R2
016A 3400              ADDC    A,#00H
016C FA                MOV     R2,A
016D 74F2              MOV     A,#0F2H
016F 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 792
0172 850083      E     MOV     DPH,?C_XBP
0175 850082      E     MOV     DPL,?C_XBP+01H
0178 A3                INC     DPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 53  

0179 A3                INC     DPTR
017A 120000      E     LCALL   ?C?PLDXDATA
017D E9                MOV     A,R1
017E 2403              ADD     A,#03H
0180 F9                MOV     R1,A
0181 EA                MOV     A,R2
0182 3400              ADDC    A,#00H
0184 FA                MOV     R2,A
0185 E4                CLR     A
0186 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 793
0189 850083      E     MOV     DPH,?C_XBP
018C 850082      E     MOV     DPL,?C_XBP+01H
018F A3                INC     DPTR
0190 A3                INC     DPTR
0191 120000      E     LCALL   ?C?PLDXDATA
0194 E9                MOV     A,R1
0195 2401              ADD     A,#01H
0197 F9                MOV     R1,A
0198 EA                MOV     A,R2
0199 3400              ADDC    A,#00H
019B FA                MOV     R2,A
019C 7401              MOV     A,#01H
019E 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 794
01A1 850083      E     MOV     DPH,?C_XBP
01A4 850082      E     MOV     DPL,?C_XBP+01H
01A7 A3                INC     DPTR
01A8 A3                INC     DPTR
01A9 120000      E     LCALL   ?C?PLDXDATA
01AC 7403              MOV     A,#03H
01AE 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 795
01B1 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 796
01B4         ?C0071:
                                           ; SOURCE LINE # 797
01B4 850083      E     MOV     DPH,?C_XBP
01B7 850082      E     MOV     DPL,?C_XBP+01H
01BA A3                INC     DPTR
01BB A3                INC     DPTR
01BC 120000      E     LCALL   ?C?PLDXDATA
01BF E9                MOV     A,R1
01C0 2404              ADD     A,#04H
01C2 F9                MOV     R1,A
01C3 EA                MOV     A,R2
01C4 3400              ADDC    A,#00H
01C6 FA                MOV     R2,A
01C7 74F3              MOV     A,#0F3H
01C9 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 798
01CC 850083      E     MOV     DPH,?C_XBP
01CF 850082      E     MOV     DPL,?C_XBP+01H
01D2 A3                INC     DPTR
01D3 A3                INC     DPTR
01D4 120000      E     LCALL   ?C?PLDXDATA
01D7 E9                MOV     A,R1
01D8 2403              ADD     A,#03H
01DA F9                MOV     R1,A
01DB EA                MOV     A,R2
01DC 3400              ADDC    A,#00H
01DE FA                MOV     R2,A
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 54  

01DF E4                CLR     A
01E0 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 799
01E3 850083      E     MOV     DPH,?C_XBP
01E6 850082      E     MOV     DPL,?C_XBP+01H
01E9 A3                INC     DPTR
01EA A3                INC     DPTR
01EB 120000      E     LCALL   ?C?PLDXDATA
01EE E9                MOV     A,R1
01EF 2401              ADD     A,#01H
01F1 F9                MOV     R1,A
01F2 EA                MOV     A,R2
01F3 3400              ADDC    A,#00H
01F5 FA                MOV     R2,A
01F6 7401              MOV     A,#01H
01F8 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 800
01FB 850083      E     MOV     DPH,?C_XBP
01FE 850082      E     MOV     DPL,?C_XBP+01H
0201 A3                INC     DPTR
0202 A3                INC     DPTR
0203 120000      E     LCALL   ?C?PLDXDATA
0206 7402              MOV     A,#02H
0208 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 801
020B 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 802
020E         ?C0072:
                                           ; SOURCE LINE # 803
020E 850083      E     MOV     DPH,?C_XBP
0211 850082      E     MOV     DPL,?C_XBP+01H
0214 A3                INC     DPTR
0215 A3                INC     DPTR
0216 120000      E     LCALL   ?C?PLDXDATA
0219 E9                MOV     A,R1
021A 2404              ADD     A,#04H
021C F9                MOV     R1,A
021D EA                MOV     A,R2
021E 3400              ADDC    A,#00H
0220 FA                MOV     R2,A
0221 74F1              MOV     A,#0F1H
0223 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 804
0226 850083      E     MOV     DPH,?C_XBP
0229 850082      E     MOV     DPL,?C_XBP+01H
022C A3                INC     DPTR
022D A3                INC     DPTR
022E 120000      E     LCALL   ?C?PLDXDATA
0231 E9                MOV     A,R1
0232 2403              ADD     A,#03H
0234 F9                MOV     R1,A
0235 EA                MOV     A,R2
0236 3400              ADDC    A,#00H
0238 FA                MOV     R2,A
0239 E4                CLR     A
023A 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 805
023D 850083      E     MOV     DPH,?C_XBP
0240 850082      E     MOV     DPL,?C_XBP+01H
0243 A3                INC     DPTR
0244 A3                INC     DPTR
0245 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 55  

0248 E9                MOV     A,R1
0249 2401              ADD     A,#01H
024B F9                MOV     R1,A
024C EA                MOV     A,R2
024D 3400              ADDC    A,#00H
024F FA                MOV     R2,A
0250 7401              MOV     A,#01H
0252 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 806
0255 850083      E     MOV     DPH,?C_XBP
0258 850082      E     MOV     DPL,?C_XBP+01H
025B A3                INC     DPTR
025C A3                INC     DPTR
025D 120000      E     LCALL   ?C?PLDXDATA
0260 7402              MOV     A,#02H
0262 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 807
0265 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 808
0268         ?C0073:
                                           ; SOURCE LINE # 809
0268 850083      E     MOV     DPH,?C_XBP
026B 850082      E     MOV     DPL,?C_XBP+01H
026E A3                INC     DPTR
026F A3                INC     DPTR
0270 120000      E     LCALL   ?C?PLDXDATA
0273 E9                MOV     A,R1
0274 2404              ADD     A,#04H
0276 F9                MOV     R1,A
0277 EA                MOV     A,R2
0278 3400              ADDC    A,#00H
027A FA                MOV     R2,A
027B 74F6              MOV     A,#0F6H
027D 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 810
0280 850083      E     MOV     DPH,?C_XBP
0283 850082      E     MOV     DPL,?C_XBP+01H
0286 A3                INC     DPTR
0287 A3                INC     DPTR
0288 120000      E     LCALL   ?C?PLDXDATA
028B E9                MOV     A,R1
028C 2403              ADD     A,#03H
028E F9                MOV     R1,A
028F EA                MOV     A,R2
0290 3400              ADDC    A,#00H
0292 FA                MOV     R2,A
0293 E4                CLR     A
0294 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 811
0297 850083      E     MOV     DPH,?C_XBP
029A 850082      E     MOV     DPL,?C_XBP+01H
029D A3                INC     DPTR
029E A3                INC     DPTR
029F 120000      E     LCALL   ?C?PLDXDATA
02A2 E9                MOV     A,R1
02A3 2402              ADD     A,#02H
02A5 F9                MOV     R1,A
02A6 EA                MOV     A,R2
02A7 3400              ADDC    A,#00H
02A9 FA                MOV     R2,A
02AA 7401              MOV     A,#01H
02AC 120000      E     LCALL   ?C?CSTPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 56  

                                           ; SOURCE LINE # 812
02AF 850083      E     MOV     DPH,?C_XBP
02B2 850082      E     MOV     DPL,?C_XBP+01H
02B5 A3                INC     DPTR
02B6 A3                INC     DPTR
02B7 120000      E     LCALL   ?C?PLDXDATA
02BA E9                MOV     A,R1
02BB 2401              ADD     A,#01H
02BD F9                MOV     R1,A
02BE EA                MOV     A,R2
02BF 3400              ADDC    A,#00H
02C1 FA                MOV     R2,A
02C2 E4                CLR     A
02C3 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 813
02C6 850083      E     MOV     DPH,?C_XBP
02C9 850082      E     MOV     DPL,?C_XBP+01H
02CC A3                INC     DPTR
02CD A3                INC     DPTR
02CE 120000      E     LCALL   ?C?PLDXDATA
02D1 E9                MOV     A,R1
02D2 2402              ADD     A,#02H
02D4 F9                MOV     R1,A
02D5 EA                MOV     A,R2
02D6 3400              ADDC    A,#00H
02D8 FA                MOV     R2,A
02D9 120000      E     LCALL   ?C?CLDPTR
02DC FF                MOV     R7,A
02DD 850083      E     MOV     DPH,?C_XBP
02E0 850082      E     MOV     DPL,?C_XBP+01H
02E3 EF                MOV     A,R7
02E4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 814
02E5 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 815
                                           ; SOURCE LINE # 816
                                           ; SOURCE LINE # 817
                                           ; SOURCE LINE # 818
                                           ; SOURCE LINE # 819
02E8 020000      R     LJMP    ?C0085
02EB         ?C0064:
                                           ; SOURCE LINE # 821
                                           ; SOURCE LINE # 822
02EB 850083      E     MOV     DPH,?C_XBP
02EE 850082      E     MOV     DPL,?C_XBP+01H
02F1 A3                INC     DPTR
02F2 E0                MOVX    A,@DPTR
02F3 FF                MOV     R7,A
02F4 850083      E     MOV     DPH,?C_XBP
02F7 850082      E     MOV     DPL,?C_XBP+01H
02FA A3                INC     DPTR
02FB A3                INC     DPTR
02FC 120000      E     LCALL   ?C?PLDXDATA
02FF E9                MOV     A,R1
0300 2404              ADD     A,#04H
0302 F9                MOV     R1,A
0303 EA                MOV     A,R2
0304 3400              ADDC    A,#00H
0306 FA                MOV     R2,A
0307 EF                MOV     A,R7
0308 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 823
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 57  

030B 850083      E     MOV     DPH,?C_XBP
030E 850082      E     MOV     DPL,?C_XBP+01H
0311 A3                INC     DPTR
0312 E0                MOVX    A,@DPTR
0313 FF                MOV     R7,A
0314 850083      E     MOV     DPH,?C_XBP
0317 850082      E     MOV     DPL,?C_XBP+01H
031A A3                INC     DPTR
031B A3                INC     DPTR
031C 120000      E     LCALL   ?C?PLDXDATA
031F E9                MOV     A,R1
0320 2403              ADD     A,#03H
0322 F9                MOV     R1,A
0323 EA                MOV     A,R2
0324 3400              ADDC    A,#00H
0326 FA                MOV     R2,A
0327 EF                MOV     A,R7
0328 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 824
032B 850083      E     MOV     DPH,?C_XBP
032E 850082      E     MOV     DPL,?C_XBP+01H
0331 A3                INC     DPTR
0332 A3                INC     DPTR
0333 120000      E     LCALL   ?C?PLDXDATA
0336 E9                MOV     A,R1
0337 2401              ADD     A,#01H
0339 F9                MOV     R1,A
033A EA                MOV     A,R2
033B 3400              ADDC    A,#00H
033D FA                MOV     R2,A
033E 7401              MOV     A,#01H
0340 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 825
0343 850083      E     MOV     DPH,?C_XBP
0346 850082      E     MOV     DPL,?C_XBP+01H
0349 A3                INC     DPTR
034A E0                MOVX    A,@DPTR
034B FF                MOV     R7,A
034C EF                MOV     A,R7
034D 54F0              ANL     A,#0F0H
034F FF                MOV     R7,A
0350 EF                MOV     A,R7
0351 120000      E     LCALL   ?C?CCASE
0354 0000        R     DW      ?C0081
0356 80                DB      080H
0357 0000        R     DW      ?C0081
0359 90                DB      090H
035A 0000        R     DW      ?C0081
035C A0                DB      0A0H
035D 0000        R     DW      ?C0081
035F B0                DB      0B0H
0360 0000        R     DW      ?C0083
0362 C0                DB      0C0H
0363 0000        R     DW      ?C0083
0365 D0                DB      0D0H
0366 0000        R     DW      ?C0081
0368 E0                DB      0E0H
0369 0000              DW      00H
036B 0000        R     DW      ?C0084
                                           ; SOURCE LINE # 826
                                           ; SOURCE LINE # 827
                                           ; SOURCE LINE # 828
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 58  

                                           ; SOURCE LINE # 829
                                           ; SOURCE LINE # 830
                                           ; SOURCE LINE # 831
036D         ?C0081:
                                           ; SOURCE LINE # 832
036D 850083      E     MOV     DPH,?C_XBP
0370 850082      E     MOV     DPL,?C_XBP+01H
0373 A3                INC     DPTR
0374 A3                INC     DPTR
0375 120000      E     LCALL   ?C?PLDXDATA
0378 7403              MOV     A,#03H
037A 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 833
037D 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 834
                                           ; SOURCE LINE # 835
0380         ?C0083:
                                           ; SOURCE LINE # 836
0380 850083      E     MOV     DPH,?C_XBP
0383 850082      E     MOV     DPL,?C_XBP+01H
0386 A3                INC     DPTR
0387 A3                INC     DPTR
0388 120000      E     LCALL   ?C?PLDXDATA
038B 7402              MOV     A,#02H
038D 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 837
0390 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 838
0393         ?C0084:
                                           ; SOURCE LINE # 839
0393 850083      E     MOV     DPH,?C_XBP
0396 850082      E     MOV     DPL,?C_XBP+01H
0399 A3                INC     DPTR
039A A3                INC     DPTR
039B 120000      E     LCALL   ?C?PLDXDATA
039E E9                MOV     A,R1
039F 2403              ADD     A,#03H
03A1 F9                MOV     R1,A
03A2 EA                MOV     A,R2
03A3 3400              ADDC    A,#00H
03A5 FA                MOV     R2,A
03A6 E4                CLR     A
03A7 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 840
03AA 850083      E     MOV     DPH,?C_XBP
03AD 850082      E     MOV     DPL,?C_XBP+01H
03B0 A3                INC     DPTR
03B1 A3                INC     DPTR
03B2 120000      E     LCALL   ?C?PLDXDATA
03B5 E9                MOV     A,R1
03B6 2401              ADD     A,#01H
03B8 F9                MOV     R1,A
03B9 EA                MOV     A,R2
03BA 3400              ADDC    A,#00H
03BC FA                MOV     R2,A
03BD E4                CLR     A
03BE 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 841
03C1 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 842
                                           ; SOURCE LINE # 843
                                           ; SOURCE LINE # 844
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 59  

03C4 020000      R     LJMP    ?C0085
03C7         ?C0063:
                                           ; SOURCE LINE # 848
                                           ; SOURCE LINE # 849
03C7 850083      E     MOV     DPH,?C_XBP
03CA 850082      E     MOV     DPL,?C_XBP+01H
03CD A3                INC     DPTR
03CE A3                INC     DPTR
03CF 120000      E     LCALL   ?C?PLDXDATA
03D2 E9                MOV     A,R1
03D3 2403              ADD     A,#03H
03D5 F9                MOV     R1,A
03D6 EA                MOV     A,R2
03D7 3400              ADDC    A,#00H
03D9 FA                MOV     R2,A
03DA 120000      E     LCALL   ?C?CLDPTR
03DD FF                MOV     R7,A
03DE EF                MOV     A,R7
03DF 64F0              XRL     A,#0F0H
03E1 6003              JZ      $ + 5H
03E3 020000      R     LJMP    ?C0086
                                           ; SOURCE LINE # 850
                                           ; SOURCE LINE # 851
03E6 850083      E     MOV     DPH,?C_XBP
03E9 850082      E     MOV     DPL,?C_XBP+01H
03EC A3                INC     DPTR
03ED E0                MOVX    A,@DPTR
03EE FF                MOV     R7,A
03EF 850083      E     MOV     DPH,?C_XBP
03F2 850082      E     MOV     DPL,?C_XBP+01H
03F5 A3                INC     DPTR
03F6 A3                INC     DPTR
03F7 120000      E     LCALL   ?C?PLDXDATA
03FA E9                MOV     A,R1
03FB 2401              ADD     A,#01H
03FD F9                MOV     R1,A
03FE EA                MOV     A,R2
03FF 3400              ADDC    A,#00H
0401 FA                MOV     R2,A
0402 120000      E     LCALL   ?C?CLDPTR
0405 FE                MOV     R6,A
0406 EE                MOV     A,R6
0407 FD                MOV     R5,A
0408 7C00              MOV     R4,#00H
040A 850083      E     MOV     DPH,?C_XBP
040D 850082      E     MOV     DPL,?C_XBP+01H
0410 A3                INC     DPTR
0411 A3                INC     DPTR
0412 120000      E     LCALL   ?C?PLDXDATA
0415 E9                MOV     A,R1
0416 2404              ADD     A,#04H
0418 F9                MOV     R1,A
0419 EA                MOV     A,R2
041A 3400              ADDC    A,#00H
041C FA                MOV     R2,A
041D E9                MOV     A,R1
041E 2D                ADD     A,R5
041F F9                MOV     R1,A
0420 EA                MOV     A,R2
0421 3C                ADDC    A,R4
0422 FA                MOV     R2,A
0423 EF                MOV     A,R7
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 60  

0424 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 852
0427 850083      E     MOV     DPH,?C_XBP
042A 850082      E     MOV     DPL,?C_XBP+01H
042D A3                INC     DPTR
042E A3                INC     DPTR
042F 120000      E     LCALL   ?C?PLDXDATA
0432 E9                MOV     A,R1
0433 2401              ADD     A,#01H
0435 F9                MOV     R1,A
0436 EA                MOV     A,R2
0437 3400              ADDC    A,#00H
0439 FA                MOV     R2,A
043A 7401              MOV     A,#01H
043C 120000      E     LCALL   ?C?CILDPTR
                                           ; SOURCE LINE # 853
043F 850083      E     MOV     DPH,?C_XBP
0442 850082      E     MOV     DPL,?C_XBP+01H
0445 A3                INC     DPTR
0446 A3                INC     DPTR
0447 120000      E     LCALL   ?C?PLDXDATA
044A E9                MOV     A,R1
044B 2401              ADD     A,#01H
044D F9                MOV     R1,A
044E EA                MOV     A,R2
044F 3400              ADDC    A,#00H
0451 FA                MOV     R2,A
0452 120000      E     LCALL   ?C?CLDPTR
0455 FF                MOV     R7,A
0456 850083      E     MOV     DPH,?C_XBP
0459 850082      E     MOV     DPL,?C_XBP+01H
045C A3                INC     DPTR
045D A3                INC     DPTR
045E 120000      E     LCALL   ?C?PLDXDATA
0461 120000      E     LCALL   ?C?CLDPTR
0464 FE                MOV     R6,A
0465 EF                MOV     A,R7
0466 C3                CLR     C
0467 9E                SUBB    A,R6
0468 5003              JNC     $ + 5H
046A 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 854
                                           ; SOURCE LINE # 855
046D 850083      E     MOV     DPH,?C_XBP
0470 850082      E     MOV     DPL,?C_XBP+01H
0473 A3                INC     DPTR
0474 A3                INC     DPTR
0475 120000      E     LCALL   ?C?PLDXDATA
0478 E9                MOV     A,R1
0479 2401              ADD     A,#01H
047B F9                MOV     R1,A
047C EA                MOV     A,R2
047D 3400              ADDC    A,#00H
047F FA                MOV     R2,A
0480 120000      E     LCALL   ?C?CLDPTR
0483 FF                MOV     R7,A
0484 850083      E     MOV     DPH,?C_XBP
0487 850082      E     MOV     DPL,?C_XBP+01H
048A A3                INC     DPTR
048B A3                INC     DPTR
048C 120000      E     LCALL   ?C?PLDXDATA
048F E9                MOV     A,R1
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 61  

0490 2402              ADD     A,#02H
0492 F9                MOV     R1,A
0493 EA                MOV     A,R2
0494 3400              ADDC    A,#00H
0496 FA                MOV     R2,A
0497 EF                MOV     A,R7
0498 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 856
049B 850083      E     MOV     DPH,?C_XBP
049E 850082      E     MOV     DPL,?C_XBP+01H
04A1 A3                INC     DPTR
04A2 A3                INC     DPTR
04A3 120000      E     LCALL   ?C?PLDXDATA
04A6 E9                MOV     A,R1
04A7 2401              ADD     A,#01H
04A9 F9                MOV     R1,A
04AA EA                MOV     A,R2
04AB 3400              ADDC    A,#00H
04AD FA                MOV     R2,A
04AE E4                CLR     A
04AF 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 857
04B2 850083      E     MOV     DPH,?C_XBP
04B5 850082      E     MOV     DPL,?C_XBP+01H
04B8 74F0              MOV     A,#0F0H
04BA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 858
                                           ; SOURCE LINE # 859
04BB 020000      R     LJMP    ?C0085
04BE         ?C0086:
                                           ; SOURCE LINE # 860
04BE 850083      E     MOV     DPH,?C_XBP
04C1 850082      E     MOV     DPL,?C_XBP+01H
04C4 A3                INC     DPTR
04C5 A3                INC     DPTR
04C6 120000      E     LCALL   ?C?PLDXDATA
04C9 E9                MOV     A,R1
04CA 2401              ADD     A,#01H
04CC F9                MOV     R1,A
04CD EA                MOV     A,R2
04CE 3400              ADDC    A,#00H
04D0 FA                MOV     R2,A
04D1 120000      E     LCALL   ?C?CLDPTR
04D4 FF                MOV     R7,A
04D5 EF                MOV     A,R7
04D6 D3                SETB    C
04D7 9400              SUBB    A,#00H
04D9 5003              JNC     $ + 5H
04DB 020000      R     LJMP    ?C0089
                                           ; SOURCE LINE # 861
                                           ; SOURCE LINE # 862
04DE 850083      E     MOV     DPH,?C_XBP
04E1 850082      E     MOV     DPL,?C_XBP+01H
04E4 A3                INC     DPTR
04E5 E0                MOVX    A,@DPTR
04E6 FF                MOV     R7,A
04E7 850083      E     MOV     DPH,?C_XBP
04EA 850082      E     MOV     DPL,?C_XBP+01H
04ED A3                INC     DPTR
04EE A3                INC     DPTR
04EF 120000      E     LCALL   ?C?PLDXDATA
04F2 E9                MOV     A,R1
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 62  

04F3 2401              ADD     A,#01H
04F5 F9                MOV     R1,A
04F6 EA                MOV     A,R2
04F7 3400              ADDC    A,#00H
04F9 FA                MOV     R2,A
04FA 120000      E     LCALL   ?C?CLDPTR
04FD FE                MOV     R6,A
04FE EE                MOV     A,R6
04FF FD                MOV     R5,A
0500 7C00              MOV     R4,#00H
0502 850083      E     MOV     DPH,?C_XBP
0505 850082      E     MOV     DPL,?C_XBP+01H
0508 A3                INC     DPTR
0509 A3                INC     DPTR
050A 120000      E     LCALL   ?C?PLDXDATA
050D E9                MOV     A,R1
050E 2404              ADD     A,#04H
0510 F9                MOV     R1,A
0511 EA                MOV     A,R2
0512 3400              ADDC    A,#00H
0514 FA                MOV     R2,A
0515 E9                MOV     A,R1
0516 2D                ADD     A,R5
0517 F9                MOV     R1,A
0518 EA                MOV     A,R2
0519 3C                ADDC    A,R4
051A FA                MOV     R2,A
051B EF                MOV     A,R7
051C 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 863
051F 850083      E     MOV     DPH,?C_XBP
0522 850082      E     MOV     DPL,?C_XBP+01H
0525 A3                INC     DPTR
0526 A3                INC     DPTR
0527 120000      E     LCALL   ?C?PLDXDATA
052A E9                MOV     A,R1
052B 2401              ADD     A,#01H
052D F9                MOV     R1,A
052E EA                MOV     A,R2
052F 3400              ADDC    A,#00H
0531 FA                MOV     R2,A
0532 7401              MOV     A,#01H
0534 120000      E     LCALL   ?C?CILDPTR
                                           ; SOURCE LINE # 864
0537 850083      E     MOV     DPH,?C_XBP
053A 850082      E     MOV     DPL,?C_XBP+01H
053D A3                INC     DPTR
053E A3                INC     DPTR
053F 120000      E     LCALL   ?C?PLDXDATA
0542 E9                MOV     A,R1
0543 2401              ADD     A,#01H
0545 F9                MOV     R1,A
0546 EA                MOV     A,R2
0547 3400              ADDC    A,#00H
0549 FA                MOV     R2,A
054A 120000      E     LCALL   ?C?CLDPTR
054D FF                MOV     R7,A
054E 850083      E     MOV     DPH,?C_XBP
0551 850082      E     MOV     DPL,?C_XBP+01H
0554 A3                INC     DPTR
0555 A3                INC     DPTR
0556 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 63  

0559 120000      E     LCALL   ?C?CLDPTR
055C FE                MOV     R6,A
055D EF                MOV     A,R7
055E C3                CLR     C
055F 9E                SUBB    A,R6
0560 5003              JNC     $ + 5H
0562 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 865
                                           ; SOURCE LINE # 866
0565 850083      E     MOV     DPH,?C_XBP
0568 850082      E     MOV     DPL,?C_XBP+01H
056B A3                INC     DPTR
056C A3                INC     DPTR
056D 120000      E     LCALL   ?C?PLDXDATA
0570 E9                MOV     A,R1
0571 2401              ADD     A,#01H
0573 F9                MOV     R1,A
0574 EA                MOV     A,R2
0575 3400              ADDC    A,#00H
0577 FA                MOV     R2,A
0578 120000      E     LCALL   ?C?CLDPTR
057B FF                MOV     R7,A
057C 850083      E     MOV     DPH,?C_XBP
057F 850082      E     MOV     DPL,?C_XBP+01H
0582 A3                INC     DPTR
0583 A3                INC     DPTR
0584 120000      E     LCALL   ?C?PLDXDATA
0587 E9                MOV     A,R1
0588 2402              ADD     A,#02H
058A F9                MOV     R1,A
058B EA                MOV     A,R2
058C 3400              ADDC    A,#00H
058E FA                MOV     R2,A
058F EF                MOV     A,R7
0590 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 867
0593 850083      E     MOV     DPH,?C_XBP
0596 850082      E     MOV     DPL,?C_XBP+01H
0599 A3                INC     DPTR
059A A3                INC     DPTR
059B 120000      E     LCALL   ?C?PLDXDATA
059E E9                MOV     A,R1
059F 2401              ADD     A,#01H
05A1 F9                MOV     R1,A
05A2 EA                MOV     A,R2
05A3 3400              ADDC    A,#00H
05A5 FA                MOV     R2,A
05A6 E4                CLR     A
05A7 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 868
05AA 850083      E     MOV     DPH,?C_XBP
05AD 850082      E     MOV     DPL,?C_XBP+01H
05B0 A3                INC     DPTR
05B1 A3                INC     DPTR
05B2 120000      E     LCALL   ?C?PLDXDATA
05B5 E9                MOV     A,R1
05B6 2402              ADD     A,#02H
05B8 F9                MOV     R1,A
05B9 EA                MOV     A,R2
05BA 3400              ADDC    A,#00H
05BC FA                MOV     R2,A
05BD 120000      E     LCALL   ?C?CLDPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 64  

05C0 FF                MOV     R7,A
05C1 850083      E     MOV     DPH,?C_XBP
05C4 850082      E     MOV     DPL,?C_XBP+01H
05C7 EF                MOV     A,R7
05C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 869
                                           ; SOURCE LINE # 870
05C9 020000      R     LJMP    ?C0085
05CC         ?C0089:
                                           ; SOURCE LINE # 871
05CC 850083      E     MOV     DPH,?C_XBP
05CF 850082      E     MOV     DPL,?C_XBP+01H
05D2 A3                INC     DPTR
05D3 A3                INC     DPTR
05D4 120000      E     LCALL   ?C?PLDXDATA
05D7 E9                MOV     A,R1
05D8 2403              ADD     A,#03H
05DA F9                MOV     R1,A
05DB EA                MOV     A,R2
05DC 3400              ADDC    A,#00H
05DE FA                MOV     R2,A
05DF 120000      E     LCALL   ?C?CLDPTR
05E2 FF                MOV     R7,A
05E3 EF                MOV     A,R7
05E4 7003              JNZ     $ + 5H
05E6 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 872
                                           ; SOURCE LINE # 873
05E9 850083      E     MOV     DPH,?C_XBP
05EC 850082      E     MOV     DPL,?C_XBP+01H
05EF A3                INC     DPTR
05F0 A3                INC     DPTR
05F1 120000      E     LCALL   ?C?PLDXDATA
05F4 E9                MOV     A,R1
05F5 2403              ADD     A,#03H
05F7 F9                MOV     R1,A
05F8 EA                MOV     A,R2
05F9 3400              ADDC    A,#00H
05FB FA                MOV     R2,A
05FC 120000      E     LCALL   ?C?CLDPTR
05FF FF                MOV     R7,A
0600 850083      E     MOV     DPH,?C_XBP
0603 850082      E     MOV     DPL,?C_XBP+01H
0606 A3                INC     DPTR
0607 A3                INC     DPTR
0608 120000      E     LCALL   ?C?PLDXDATA
060B E9                MOV     A,R1
060C 2404              ADD     A,#04H
060E F9                MOV     R1,A
060F EA                MOV     A,R2
0610 3400              ADDC    A,#00H
0612 FA                MOV     R2,A
0613 EF                MOV     A,R7
0614 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 874
0617 850083      E     MOV     DPH,?C_XBP
061A 850082      E     MOV     DPL,?C_XBP+01H
061D A3                INC     DPTR
061E E0                MOVX    A,@DPTR
061F FF                MOV     R7,A
0620 850083      E     MOV     DPH,?C_XBP
0623 850082      E     MOV     DPL,?C_XBP+01H
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 65  

0626 A3                INC     DPTR
0627 A3                INC     DPTR
0628 120000      E     LCALL   ?C?PLDXDATA
062B E9                MOV     A,R1
062C 2405              ADD     A,#05H
062E F9                MOV     R1,A
062F EA                MOV     A,R2
0630 3400              ADDC    A,#00H
0632 FA                MOV     R2,A
0633 EF                MOV     A,R7
0634 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 875
0637 850083      E     MOV     DPH,?C_XBP
063A 850082      E     MOV     DPL,?C_XBP+01H
063D A3                INC     DPTR
063E A3                INC     DPTR
063F 120000      E     LCALL   ?C?PLDXDATA
0642 E9                MOV     A,R1
0643 2401              ADD     A,#01H
0645 F9                MOV     R1,A
0646 EA                MOV     A,R2
0647 3400              ADDC    A,#00H
0649 FA                MOV     R2,A
064A 7402              MOV     A,#02H
064C 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 876
064F 850083      E     MOV     DPH,?C_XBP
0652 850082      E     MOV     DPL,?C_XBP+01H
0655 A3                INC     DPTR
0656 A3                INC     DPTR
0657 120000      E     LCALL   ?C?PLDXDATA
065A E9                MOV     A,R1
065B 2403              ADD     A,#03H
065D F9                MOV     R1,A
065E EA                MOV     A,R2
065F 3400              ADDC    A,#00H
0661 FA                MOV     R2,A
0662 120000      E     LCALL   ?C?CLDPTR
0665 FF                MOV     R7,A
0666 EF                MOV     A,R7
0667 54F0              ANL     A,#0F0H
0669 FF                MOV     R7,A
066A EF                MOV     A,R7
066B 120000      E     LCALL   ?C?CCASE
066E 0000        R     DW      ?C0098
0670 80                DB      080H
0671 0000        R     DW      ?C0098
0673 90                DB      090H
0674 0000        R     DW      ?C0098
0676 A0                DB      0A0H
0677 0000        R     DW      ?C0098
0679 B0                DB      0B0H
067A 0000        R     DW      ?C0100
067C C0                DB      0C0H
067D 0000        R     DW      ?C0100
067F D0                DB      0D0H
0680 0000        R     DW      ?C0098
0682 E0                DB      0E0H
0683 0000              DW      00H
0685 0000        R     DW      ?C0101
                                           ; SOURCE LINE # 877
                                           ; SOURCE LINE # 878
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 66  

                                           ; SOURCE LINE # 879
                                           ; SOURCE LINE # 880
                                           ; SOURCE LINE # 881
                                           ; SOURCE LINE # 882
0687         ?C0098:
                                           ; SOURCE LINE # 883
0687 850083      E     MOV     DPH,?C_XBP
068A 850082      E     MOV     DPL,?C_XBP+01H
068D A3                INC     DPTR
068E A3                INC     DPTR
068F 120000      E     LCALL   ?C?PLDXDATA
0692 7403              MOV     A,#03H
0694 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 884
0697 807D              SJMP    ?C0085
                                           ; SOURCE LINE # 885
                                           ; SOURCE LINE # 886
0699         ?C0100:
                                           ; SOURCE LINE # 887
0699 850083      E     MOV     DPH,?C_XBP
069C 850082      E     MOV     DPL,?C_XBP+01H
069F A3                INC     DPTR
06A0 A3                INC     DPTR
06A1 120000      E     LCALL   ?C?PLDXDATA
06A4 E9                MOV     A,R1
06A5 2401              ADD     A,#01H
06A7 F9                MOV     R1,A
06A8 EA                MOV     A,R2
06A9 3400              ADDC    A,#00H
06AB FA                MOV     R2,A
06AC 120000      E     LCALL   ?C?CLDPTR
06AF FF                MOV     R7,A
06B0 850083      E     MOV     DPH,?C_XBP
06B3 850082      E     MOV     DPL,?C_XBP+01H
06B6 A3                INC     DPTR
06B7 A3                INC     DPTR
06B8 120000      E     LCALL   ?C?PLDXDATA
06BB E9                MOV     A,R1
06BC 2402              ADD     A,#02H
06BE F9                MOV     R1,A
06BF EA                MOV     A,R2
06C0 3400              ADDC    A,#00H
06C2 FA                MOV     R2,A
06C3 EF                MOV     A,R7
06C4 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 888
06C7 850083      E     MOV     DPH,?C_XBP
06CA 850082      E     MOV     DPL,?C_XBP+01H
06CD A3                INC     DPTR
06CE A3                INC     DPTR
06CF 120000      E     LCALL   ?C?PLDXDATA
06D2 E9                MOV     A,R1
06D3 2401              ADD     A,#01H
06D5 F9                MOV     R1,A
06D6 EA                MOV     A,R2
06D7 3400              ADDC    A,#00H
06D9 FA                MOV     R2,A
06DA E4                CLR     A
06DB 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 889
06DE 850083      E     MOV     DPH,?C_XBP
06E1 850082      E     MOV     DPL,?C_XBP+01H
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 67  

06E4 A3                INC     DPTR
06E5 A3                INC     DPTR
06E6 120000      E     LCALL   ?C?PLDXDATA
06E9 E9                MOV     A,R1
06EA 2402              ADD     A,#02H
06EC F9                MOV     R1,A
06ED EA                MOV     A,R2
06EE 3400              ADDC    A,#00H
06F0 FA                MOV     R2,A
06F1 120000      E     LCALL   ?C?CLDPTR
06F4 FF                MOV     R7,A
06F5 850083      E     MOV     DPH,?C_XBP
06F8 850082      E     MOV     DPL,?C_XBP+01H
06FB EF                MOV     A,R7
06FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 890
06FD 8017              SJMP    ?C0085
                                           ; SOURCE LINE # 891
06FF         ?C0101:
                                           ; SOURCE LINE # 892
06FF 850083      E     MOV     DPH,?C_XBP
0702 850082      E     MOV     DPL,?C_XBP+01H
0705 A3                INC     DPTR
0706 A3                INC     DPTR
0707 120000      E     LCALL   ?C?PLDXDATA
070A E9                MOV     A,R1
070B 2401              ADD     A,#01H
070D F9                MOV     R1,A
070E EA                MOV     A,R2
070F 3400              ADDC    A,#00H
0711 FA                MOV     R2,A
0712 E4                CLR     A
0713 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 893
                                           ; SOURCE LINE # 894
                                           ; SOURCE LINE # 895
                                           ; SOURCE LINE # 897
                                           ; SOURCE LINE # 898
                                           ; SOURCE LINE # 899
0716         ?C0085:
                                           ; SOURCE LINE # 900
0716 850083      E     MOV     DPH,?C_XBP
0719 850082      E     MOV     DPL,?C_XBP+01H
071C E0                MOVX    A,@DPTR
071D FF                MOV     R7,A
                                           ; SOURCE LINE # 901
071E         ?C0103:
071E 900005            MOV     DPTR,#05H
0721 120000      E     LCALL   ?C?ADDXBP
0724 22                RET     
             ; FUNCTION _?USB_ProcessMidiIn (END)

             ; FUNCTION _?USB_MIDI1_GetEvent (BEGIN)
                                           ; SOURCE LINE # 927
0000 90FFFC            MOV     DPTR,#0FFFCH
0003 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 929
0006 850083      E     MOV     DPH,?C_XBP
0009 850082      E     MOV     DPL,?C_XBP+01H
000C E4                CLR     A
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 942
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 68  

000E 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferLoopDetect
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 900003            MOV     DPTR,#03H
0016 120000      E     LCALL   ?C?XBPOFF
0019 EF                MOV     A,R7
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 944
001B 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferWrite
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferRead
0023 E0                MOVX    A,@DPTR
0024 FE                MOV     R6,A
0025 EE                MOV     A,R6
0026 B5070E            CJNE    A,AR7,?C0105
0029 900003            MOV     DPTR,#03H
002C 120000      E     LCALL   ?C?XBPOFF
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 7003              JNZ     $ + 5H
0034 020000      R     LJMP    ?C0104
0037         ?C0105:
                                           ; SOURCE LINE # 945
                                           ; SOURCE LINE # 950
0037 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferRead
003A E0                MOVX    A,@DPTR
003B FF                MOV     R7,A
003C 850083      E     MOV     DPH,?C_XBP
003F 850082      E     MOV     DPL,?C_XBP+01H
0042 A3                INC     DPTR
0043 A3                INC     DPTR
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
0046         ?C0106:
                                           ; SOURCE LINE # 966
0046 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferWrite
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 850083      E     MOV     DPH,?C_XBP
004E 850082      E     MOV     DPL,?C_XBP+01H
0051 A3                INC     DPTR
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FE                MOV     R6,A
0055 EE                MOV     A,R6
0056 B5070E            CJNE    A,AR7,?C0108
0059 900003            MOV     DPTR,#03H
005C 120000      E     LCALL   ?C?XBPOFF
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 7003              JNZ     $ + 5H
0064 020000      R     LJMP    ?C0107
0067         ?C0108:
0067 850083      E     MOV     DPH,?C_XBP
006A 850082      E     MOV     DPL,?C_XBP+01H
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F EF                MOV     A,R7
0070 6003              JZ      $ + 5H
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 69  

0072 020000      R     LJMP    ?C0107
                                           ; SOURCE LINE # 968
                                           ; SOURCE LINE # 969
0075 850083      E     MOV     DPH,?C_XBP
0078 850082      E     MOV     DPL,?C_XBP+01H
007B A3                INC     DPTR
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F 7400        E     MOV     A,#LOW MIDI1_UART_rxBuffer
0081 2F                ADD     A,R7
0082 F582              MOV     DPL,A
0084 E4                CLR     A
0085 3400        E     ADDC    A,#HIGH MIDI1_UART_rxBuffer
0087 F583              MOV     DPH,A
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B 850083      E     MOV     DPH,?C_XBP
008E 850082      E     MOV     DPL,?C_XBP+01H
0091 A3                INC     DPTR
0092 EF                MOV     A,R7
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 971
0094 850083      E     MOV     DPH,?C_XBP
0097 850082      E     MOV     DPL,?C_XBP+01H
009A A3                INC     DPTR
009B A3                INC     DPTR
009C E0                MOVX    A,@DPTR
009D 04                INC     A
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 972
009F 850083      E     MOV     DPH,?C_XBP
00A2 850082      E     MOV     DPL,?C_XBP+01H
00A5 A3                INC     DPTR
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 EF                MOV     A,R7
00AA C3                CLR     C
00AB 94FF              SUBB    A,#0FFH
00AD 400A              JC      ?C0109
                                           ; SOURCE LINE # 973
                                           ; SOURCE LINE # 974
00AF 850083      E     MOV     DPH,?C_XBP
00B2 850082      E     MOV     DPL,?C_XBP+01H
00B5 A3                INC     DPTR
00B6 A3                INC     DPTR
00B7 E4                CLR     A
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 975
00B9         ?C0109:
                                           ; SOURCE LINE # 979
00B9 900003            MOV     DPTR,#03H
00BC 120000      E     LCALL   ?C?XBPOFF
00BF E0                MOVX    A,@DPTR
00C0 FF                MOV     R7,A
00C1 EF                MOV     A,R7
00C2 6014              JZ      ?C0110
                                           ; SOURCE LINE # 980
                                           ; SOURCE LINE # 981
00C4 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferLoopDetect
00C7 E4                CLR     A
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 70  

00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 985
00C9 850083      E     MOV     DPH,?C_XBP
00CC 850082      E     MOV     DPL,?C_XBP+01H
00CF A3                INC     DPTR
00D0 A3                INC     DPTR
00D1 E0                MOVX    A,@DPTR
00D2 FF                MOV     R7,A
00D3 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferRead
00D6 EF                MOV     A,R7
00D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 989
00D8         ?C0110:
                                           ; SOURCE LINE # 992
00D8 7B01              MOV     R3,#01H
00DA 7A00        R     MOV     R2,#HIGH USB_MIDI1_Event
00DC 7900        R     MOV     R1,#LOW USB_MIDI1_Event
00DE 850083      E     MOV     DPH,?C_XBP
00E1 850082      E     MOV     DPL,?C_XBP+01H
00E4 A3                INC     DPTR
00E5 E0                MOVX    A,@DPTR
00E6 FF                MOV     R7,A
00E7 120000      R     LCALL   _?USB_ProcessMidiIn
00EA 850083      E     MOV     DPH,?C_XBP
00ED 850082      E     MOV     DPL,?C_XBP+01H
00F0 EF                MOV     A,R7
00F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 995
00F2 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferLoopDetect
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 900003            MOV     DPTR,#03H
00FA 120000      E     LCALL   ?C?XBPOFF
00FD EF                MOV     A,R7
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 996
00FF 020000      R     LJMP    ?C0106
0102         ?C0107:
                                           ; SOURCE LINE # 1004
0102 850083      E     MOV     DPH,?C_XBP
0105 850082      E     MOV     DPL,?C_XBP+01H
0108 A3                INC     DPTR
0109 A3                INC     DPTR
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferRead
010F EF                MOV     A,R7
0110 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1008
0111         ?C0104:
                                           ; SOURCE LINE # 1010
0111 850083      E     MOV     DPH,?C_XBP
0114 850082      E     MOV     DPL,?C_XBP+01H
0117 E0                MOVX    A,@DPTR
0118 FF                MOV     R7,A
                                           ; SOURCE LINE # 1011
0119         ?C0111:
0119 900004            MOV     DPTR,#04H
011C 120000      E     LCALL   ?C?ADDXBP
011F 22                RET     
             ; FUNCTION _?USB_MIDI1_GetEvent (END)

C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 71  

             ; FUNCTION _?USB_MIDI1_ProcessUsbOut (BEGIN)
                                           ; SOURCE LINE # 1038
0000 90FFFD            MOV     DPTR,#0FFFDH
0003 120000      E     LCALL   ?C?ADDXBP
0006 120000      E     LCALL   ?C?PSTXDATA
0009 90FFFD            MOV     DPTR,#0FFFDH
000C 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 1039
                                           ; SOURCE LINE # 1048
000F 7F01              MOV     R7,#01H
0011 120000      E     LCALL   _?LED_OutA_Write
                                           ; SOURCE LINE # 1051
0014 900003            MOV     DPTR,#03H
0017 120000      E     LCALL   ?C?XBPOFF
001A 120000      E     LCALL   ?C?PLDXDATA
001D 120000      E     LCALL   ?C?CLDPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 540F              ANL     A,#0FH
0024 FF                MOV     R7,A
0025 850083      E     MOV     DPH,?C_XBP
0028 850082      E     MOV     DPL,?C_XBP+01H
002B EF                MOV     A,R7
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1052
002D 850083      E     MOV     DPH,?C_XBP
0030 850082      E     MOV     DPL,?C_XBP+01H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 7003              JNZ     $ + 5H
0038 020000      R     LJMP    ?C0112
003B 850083      E     MOV     DPH,?C_XBP
003E 850082      E     MOV     DPL,?C_XBP+01H
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 EF                MOV     A,R7
0044 6401              XRL     A,#01H
0046 7003              JNZ     $ + 5H
0048 020000      R     LJMP    ?C0112
                                           ; SOURCE LINE # 1053
                                           ; SOURCE LINE # 1054
004B 850083      E     MOV     DPH,?C_XBP
004E 850082      E     MOV     DPL,?C_XBP+01H
0051 E0                MOVX    A,@DPTR
0052 FF                MOV     R7,A
0053 EF                MOV     A,R7
0054 900000      R     MOV     DPTR,#USB_MIDI_SIZE
0057 93                MOVC    A,@A+DPTR
0058 FF                MOV     R7,A
0059 850083      E     MOV     DPH,?C_XBP
005C 850082      E     MOV     DPL,?C_XBP+01H
005F A3                INC     DPTR
0060 EF                MOV     A,R7
0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1055
0062 850083      E     MOV     DPH,?C_XBP
0065 850082      E     MOV     DPL,?C_XBP+01H
0068 A3                INC     DPTR
0069 A3                INC     DPTR
006A 7401              MOV     A,#01H
006C F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 72  

                                           ; SOURCE LINE # 1057
006D 850083      E     MOV     DPH,?C_XBP
0070 850082      E     MOV     DPL,?C_XBP+01H
0073 E0                MOVX    A,@DPTR
0074 FF                MOV     R7,A
0075 EF                MOV     A,R7
0076 6404              XRL     A,#04H
0078 7054              JNZ     ?C0113
                                           ; SOURCE LINE # 1058
                                           ; SOURCE LINE # 1059
007A 900003            MOV     DPTR,#03H
007D 120000      E     LCALL   ?C?XBPOFF
0080 120000      E     LCALL   ?C?PLDXDATA
0083 E9                MOV     A,R1
0084 2401              ADD     A,#01H
0086 F9                MOV     R1,A
0087 EA                MOV     A,R2
0088 3400              ADDC    A,#00H
008A FA                MOV     R2,A
008B 120000      E     LCALL   ?C?CLDPTR
008E FF                MOV     R7,A
008F EF                MOV     A,R7
0090 B4F02A            CJNE    A,#0F0H,?C0114
0093 900003            MOV     DPTR,#03H
0096 120000      E     LCALL   ?C?XBPOFF
0099 120000      E     LCALL   ?C?PLDXDATA
009C E9                MOV     A,R1
009D 2402              ADD     A,#02H
009F F9                MOV     R1,A
00A0 EA                MOV     A,R2
00A1 3400              ADDC    A,#00H
00A3 FA                MOV     R2,A
00A4 120000      E     LCALL   ?C?CLDPTR
00A7 FF                MOV     R7,A
00A8 EF                MOV     A,R7
00A9 B47E11            CJNE    A,#07EH,?C0114
                                           ; SOURCE LINE # 1061
                                           ; SOURCE LINE # 1062
00AC 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 EF                MOV     A,R7
00B2 4401              ORL     A,#01H
00B4 FF                MOV     R7,A
00B5 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00B8 EF                MOV     A,R7
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1063
00BA 020000      R     LJMP    ?C0116
00BD         ?C0114:
                                           ; SOURCE LINE # 1065
                                           ; SOURCE LINE # 1066
00BD 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00C0 E0                MOVX    A,@DPTR
00C1 FF                MOV     R7,A
00C2 EF                MOV     A,R7
00C3 54FE              ANL     A,#0FEH
00C5 FF                MOV     R7,A
00C6 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00C9 EF                MOV     A,R7
00CA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1067
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 73  

                                           ; SOURCE LINE # 1068
00CB 020000      R     LJMP    ?C0116
00CE         ?C0113:
                                           ; SOURCE LINE # 1069
00CE 850083      E     MOV     DPH,?C_XBP
00D1 850082      E     MOV     DPL,?C_XBP+01H
00D4 E0                MOVX    A,@DPTR
00D5 FF                MOV     R7,A
00D6 EF                MOV     A,R7
00D7 B40511            CJNE    A,#05H,?C0117
                                           ; SOURCE LINE # 1070
                                           ; SOURCE LINE # 1071
00DA 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00DD E0                MOVX    A,@DPTR
00DE FF                MOV     R7,A
00DF EF                MOV     A,R7
00E0 54FE              ANL     A,#0FEH
00E2 FF                MOV     R7,A
00E3 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00E6 EF                MOV     A,R7
00E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1072
00E8 020000      R     LJMP    ?C0116
00EB         ?C0117:
                                           ; SOURCE LINE # 1073
00EB 850083      E     MOV     DPH,?C_XBP
00EE 850082      E     MOV     DPL,?C_XBP+01H
00F1 E0                MOVX    A,@DPTR
00F2 FF                MOV     R7,A
00F3 EF                MOV     A,R7
00F4 B40610            CJNE    A,#06H,?C0119
                                           ; SOURCE LINE # 1074
                                           ; SOURCE LINE # 1075
00F7 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00FA E0                MOVX    A,@DPTR
00FB FF                MOV     R7,A
00FC EF                MOV     A,R7
00FD 54FE              ANL     A,#0FEH
00FF FF                MOV     R7,A
0100 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
0103 EF                MOV     A,R7
0104 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1076
0105 806A              SJMP    ?C0116
0107         ?C0119:
                                           ; SOURCE LINE # 1077
0107 850083      E     MOV     DPH,?C_XBP
010A 850082      E     MOV     DPL,?C_XBP+01H
010D E0                MOVX    A,@DPTR
010E FF                MOV     R7,A
010F EF                MOV     A,R7
0110 6407              XRL     A,#07H
0112 705D              JNZ     ?C0116
                                           ; SOURCE LINE # 1078
                                           ; SOURCE LINE # 1080
0114 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
0117 E0                MOVX    A,@DPTR
0118 FF                MOV     R7,A
0119 EF                MOV     A,R7
011A 5401              ANL     A,#01H
011C FF                MOV     R7,A
011D 7E00              MOV     R6,#00H
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 74  

011F EF                MOV     A,R7
0120 4E                ORL     A,R6
0121 604E              JZ      ?C0116
                                           ; SOURCE LINE # 1081
                                           ; SOURCE LINE # 1082
0123 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
0126 E0                MOVX    A,@DPTR
0127 FF                MOV     R7,A
0128 EF                MOV     A,R7
0129 54FE              ANL     A,#0FEH
012B FF                MOV     R7,A
012C 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
012F EF                MOV     A,R7
0130 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1083
0131 900003            MOV     DPTR,#03H
0134 120000      E     LCALL   ?C?XBPOFF
0137 120000      E     LCALL   ?C?PLDXDATA
013A E9                MOV     A,R1
013B 2401              ADD     A,#01H
013D F9                MOV     R1,A
013E EA                MOV     A,R2
013F 3400              ADDC    A,#00H
0141 FA                MOV     R2,A
0142 120000      E     LCALL   ?C?CLDPTR
0145 FF                MOV     R7,A
0146 EF                MOV     A,R7
0147 B40627            CJNE    A,#06H,?C0116
014A 900003            MOV     DPTR,#03H
014D 120000      E     LCALL   ?C?XBPOFF
0150 120000      E     LCALL   ?C?PLDXDATA
0153 E9                MOV     A,R1
0154 2402              ADD     A,#02H
0156 F9                MOV     R1,A
0157 EA                MOV     A,R2
0158 3400              ADDC    A,#00H
015A FA                MOV     R2,A
015B 120000      E     LCALL   ?C?CLDPTR
015E FF                MOV     R7,A
015F EF                MOV     A,R7
0160 B4010E            CJNE    A,#01H,?C0116
                                           ; SOURCE LINE # 1085
                                           ; SOURCE LINE # 1088
0163 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
0166 E0                MOVX    A,@DPTR
0167 FF                MOV     R7,A
0168 EF                MOV     A,R7
0169 4402              ORL     A,#02H
016B FF                MOV     R7,A
016C 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
016F EF                MOV     A,R7
0170 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1089
                                           ; SOURCE LINE # 1090
                                           ; SOURCE LINE # 1091
                                           ; SOURCE LINE # 1093
                                           ; SOURCE LINE # 1094
0171         ?C0116:
                                           ; SOURCE LINE # 1096
0171 850083      E     MOV     DPH,?C_XBP
0174 850082      E     MOV     DPL,?C_XBP+01H
0177 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 75  

0178 FF                MOV     R7,A
0179 EF                MOV     A,R7
017A C3                CLR     C
017B 9408              SUBB    A,#08H
017D 4055              JC      ?C0125
017F 850083      E     MOV     DPH,?C_XBP
0182 850082      E     MOV     DPL,?C_XBP+01H
0185 E0                MOVX    A,@DPTR
0186 FF                MOV     R7,A
0187 EF                MOV     A,R7
0188 D3                SETB    C
0189 940E              SUBB    A,#0EH
018B 5047              JNC     ?C0125
                                           ; SOURCE LINE # 1097
                                           ; SOURCE LINE # 1098
018D 900003            MOV     DPTR,#03H
0190 120000      E     LCALL   ?C?XBPOFF
0193 120000      E     LCALL   ?C?PLDXDATA
0196 E9                MOV     A,R1
0197 2401              ADD     A,#01H
0199 F9                MOV     R1,A
019A EA                MOV     A,R2
019B 3400              ADDC    A,#00H
019D FA                MOV     R2,A
019E 120000      E     LCALL   ?C?CLDPTR
01A1 FF                MOV     R7,A
01A2 900000      R     MOV     DPTR,#USB_MIDI1_TxRunStat
01A5 E0                MOVX    A,@DPTR
01A6 FE                MOV     R6,A
01A7 EE                MOV     A,R6
01A8 B5070D            CJNE    A,AR7,?C0126
                                           ; SOURCE LINE # 1099
                                           ; SOURCE LINE # 1100
01AB 850083      E     MOV     DPH,?C_XBP
01AE 850082      E     MOV     DPL,?C_XBP+01H
01B1 A3                INC     DPTR
01B2 A3                INC     DPTR
01B3 E0                MOVX    A,@DPTR
01B4 04                INC     A
01B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1101
01B6 8021              SJMP    ?C0131
01B8         ?C0126:
                                           ; SOURCE LINE # 1103
                                           ; SOURCE LINE # 1104
01B8 900003            MOV     DPTR,#03H
01BB 120000      E     LCALL   ?C?XBPOFF
01BE 120000      E     LCALL   ?C?PLDXDATA
01C1 E9                MOV     A,R1
01C2 2401              ADD     A,#01H
01C4 F9                MOV     R1,A
01C5 EA                MOV     A,R2
01C6 3400              ADDC    A,#00H
01C8 FA                MOV     R2,A
01C9 120000      E     LCALL   ?C?CLDPTR
01CC FF                MOV     R7,A
01CD 900000      R     MOV     DPTR,#USB_MIDI1_TxRunStat
01D0 EF                MOV     A,R7
01D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1105
                                           ; SOURCE LINE # 1106
01D2 8005              SJMP    ?C0131
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 76  

01D4         ?C0125:
                                           ; SOURCE LINE # 1108
                                           ; SOURCE LINE # 1109
01D4 900000      R     MOV     DPTR,#USB_MIDI1_TxRunStat
01D7 E4                CLR     A
01D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1110
01D9         ?C0131:
                                           ; SOURCE LINE # 1113
                                           ; SOURCE LINE # 1114
01D9 900003            MOV     DPTR,#03H
01DC 120000      E     LCALL   ?C?XBPOFF
01DF 120000      E     LCALL   ?C?PLDXDATA
01E2 850083      E     MOV     DPH,?C_XBP
01E5 850082      E     MOV     DPL,?C_XBP+01H
01E8 A3                INC     DPTR
01E9 A3                INC     DPTR
01EA E0                MOVX    A,@DPTR
01EB FF                MOV     R7,A
01EC E9                MOV     A,R1
01ED 2F                ADD     A,R7
01EE F9                MOV     R1,A
01EF E4                CLR     A
01F0 3A                ADDC    A,R2
01F1 FA                MOV     R2,A
01F2 120000      E     LCALL   ?C?CLDPTR
01F5 FF                MOV     R7,A
01F6 120000      E     LCALL   _?MIDI1_UART_PutChar
                                           ; SOURCE LINE # 1115
01F9 850083      E     MOV     DPH,?C_XBP
01FC 850082      E     MOV     DPL,?C_XBP+01H
01FF A3                INC     DPTR
0200 A3                INC     DPTR
0201 E0                MOVX    A,@DPTR
0202 04                INC     A
0203 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1116
0204 850083      E     MOV     DPH,?C_XBP
0207 850082      E     MOV     DPL,?C_XBP+01H
020A A3                INC     DPTR
020B E0                MOVX    A,@DPTR
020C FF                MOV     R7,A
020D 850083      E     MOV     DPH,?C_XBP
0210 850082      E     MOV     DPL,?C_XBP+01H
0213 A3                INC     DPTR
0214 A3                INC     DPTR
0215 E0                MOVX    A,@DPTR
0216 FE                MOV     R6,A
0217 EE                MOV     A,R6
0218 D3                SETB    C
0219 9F                SUBB    A,R7
021A 40BD              JC      ?C0131
                                           ; SOURCE LINE # 1117
021C         ?C0112:
                                           ; SOURCE LINE # 1121
021C 7F00              MOV     R7,#00H
021E 120000      E     LCALL   _?LED_OutA_Write
                                           ; SOURCE LINE # 1123
0221 900006            MOV     DPTR,#06H
0224 120000      E     LCALL   ?C?ADDXBP
0227 22                RET     
             ; FUNCTION _?USB_MIDI1_ProcessUsbOut (END)
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 77  


             ; FUNCTION _?USB_MIDI2_GetEvent (BEGIN)
                                           ; SOURCE LINE # 1152
0000 90FFFC            MOV     DPTR,#0FFFCH
0003 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 1154
0006 850083      E     MOV     DPH,?C_XBP
0009 850082      E     MOV     DPL,?C_XBP+01H
000C E4                CLR     A
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1167
000E 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferLoopDetect
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 900003            MOV     DPTR,#03H
0016 120000      E     LCALL   ?C?XBPOFF
0019 EF                MOV     A,R7
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1169
001B 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferWrite
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferRead
0023 E0                MOVX    A,@DPTR
0024 FE                MOV     R6,A
0025 EE                MOV     A,R6
0026 B5070E            CJNE    A,AR7,?C0134
0029 900003            MOV     DPTR,#03H
002C 120000      E     LCALL   ?C?XBPOFF
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 7003              JNZ     $ + 5H
0034 020000      R     LJMP    ?C0133
0037         ?C0134:
                                           ; SOURCE LINE # 1170
                                           ; SOURCE LINE # 1175
0037 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferRead
003A E0                MOVX    A,@DPTR
003B FF                MOV     R7,A
003C 850083      E     MOV     DPH,?C_XBP
003F 850082      E     MOV     DPL,?C_XBP+01H
0042 A3                INC     DPTR
0043 A3                INC     DPTR
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
0046         ?C0135:
                                           ; SOURCE LINE # 1191
0046 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferWrite
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 850083      E     MOV     DPH,?C_XBP
004E 850082      E     MOV     DPL,?C_XBP+01H
0051 A3                INC     DPTR
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FE                MOV     R6,A
0055 EE                MOV     A,R6
0056 B5070E            CJNE    A,AR7,?C0137
0059 900003            MOV     DPTR,#03H
005C 120000      E     LCALL   ?C?XBPOFF
005F E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 78  

0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 7003              JNZ     $ + 5H
0064 020000      R     LJMP    ?C0136
0067         ?C0137:
0067 850083      E     MOV     DPH,?C_XBP
006A 850082      E     MOV     DPL,?C_XBP+01H
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F EF                MOV     A,R7
0070 6003              JZ      $ + 5H
0072 020000      R     LJMP    ?C0136
                                           ; SOURCE LINE # 1193
                                           ; SOURCE LINE # 1194
0075 850083      E     MOV     DPH,?C_XBP
0078 850082      E     MOV     DPL,?C_XBP+01H
007B A3                INC     DPTR
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F 7400        E     MOV     A,#LOW MIDI2_UART_rxBuffer
0081 2F                ADD     A,R7
0082 F582              MOV     DPL,A
0084 E4                CLR     A
0085 3400        E     ADDC    A,#HIGH MIDI2_UART_rxBuffer
0087 F583              MOV     DPH,A
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B 850083      E     MOV     DPH,?C_XBP
008E 850082      E     MOV     DPL,?C_XBP+01H
0091 A3                INC     DPTR
0092 EF                MOV     A,R7
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1195
0094 850083      E     MOV     DPH,?C_XBP
0097 850082      E     MOV     DPL,?C_XBP+01H
009A A3                INC     DPTR
009B A3                INC     DPTR
009C E0                MOVX    A,@DPTR
009D 04                INC     A
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1196
009F 850083      E     MOV     DPH,?C_XBP
00A2 850082      E     MOV     DPL,?C_XBP+01H
00A5 A3                INC     DPTR
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 EF                MOV     A,R7
00AA C3                CLR     C
00AB 94FF              SUBB    A,#0FFH
00AD 400A              JC      ?C0138
                                           ; SOURCE LINE # 1197
                                           ; SOURCE LINE # 1198
00AF 850083      E     MOV     DPH,?C_XBP
00B2 850082      E     MOV     DPL,?C_XBP+01H
00B5 A3                INC     DPTR
00B6 A3                INC     DPTR
00B7 E4                CLR     A
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1199
00B9         ?C0138:
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 79  

                                           ; SOURCE LINE # 1203
00B9 900003            MOV     DPTR,#03H
00BC 120000      E     LCALL   ?C?XBPOFF
00BF E0                MOVX    A,@DPTR
00C0 FF                MOV     R7,A
00C1 EF                MOV     A,R7
00C2 6014              JZ      ?C0139
                                           ; SOURCE LINE # 1204
                                           ; SOURCE LINE # 1205
00C4 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferLoopDetect
00C7 E4                CLR     A
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1209
00C9 850083      E     MOV     DPH,?C_XBP
00CC 850082      E     MOV     DPL,?C_XBP+01H
00CF A3                INC     DPTR
00D0 A3                INC     DPTR
00D1 E0                MOVX    A,@DPTR
00D2 FF                MOV     R7,A
00D3 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferRead
00D6 EF                MOV     A,R7
00D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1213
00D8         ?C0139:
                                           ; SOURCE LINE # 1216
00D8 7B01              MOV     R3,#01H
00DA 7A00        R     MOV     R2,#HIGH USB_MIDI2_Event
00DC 7900        R     MOV     R1,#LOW USB_MIDI2_Event
00DE 850083      E     MOV     DPH,?C_XBP
00E1 850082      E     MOV     DPL,?C_XBP+01H
00E4 A3                INC     DPTR
00E5 E0                MOVX    A,@DPTR
00E6 FF                MOV     R7,A
00E7 120000      R     LCALL   _?USB_ProcessMidiIn
00EA 850083      E     MOV     DPH,?C_XBP
00ED 850082      E     MOV     DPL,?C_XBP+01H
00F0 EF                MOV     A,R7
00F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1219
00F2 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferLoopDetect
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 900003            MOV     DPTR,#03H
00FA 120000      E     LCALL   ?C?XBPOFF
00FD EF                MOV     A,R7
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1220
00FF 020000      R     LJMP    ?C0135
0102         ?C0136:
                                           ; SOURCE LINE # 1228
0102 850083      E     MOV     DPH,?C_XBP
0105 850082      E     MOV     DPL,?C_XBP+01H
0108 A3                INC     DPTR
0109 A3                INC     DPTR
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferRead
010F EF                MOV     A,R7
0110 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1232
0111         ?C0133:
                                           ; SOURCE LINE # 1234
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 80  

0111 850083      E     MOV     DPH,?C_XBP
0114 850082      E     MOV     DPL,?C_XBP+01H
0117 E0                MOVX    A,@DPTR
0118 FF                MOV     R7,A
                                           ; SOURCE LINE # 1235
0119         ?C0140:
0119 900004            MOV     DPTR,#04H
011C 120000      E     LCALL   ?C?ADDXBP
011F 22                RET     
             ; FUNCTION _?USB_MIDI2_GetEvent (END)

             ; FUNCTION _?USB_MIDI2_ProcessUsbOut (BEGIN)
                                           ; SOURCE LINE # 1262
0000 90FFFD            MOV     DPTR,#0FFFDH
0003 120000      E     LCALL   ?C?ADDXBP
0006 120000      E     LCALL   ?C?PSTXDATA
0009 90FFFD            MOV     DPTR,#0FFFDH
000C 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 1263
                                           ; SOURCE LINE # 1272
000F 7F01              MOV     R7,#01H
0011 120000      E     LCALL   _?LED_OutB_Write
                                           ; SOURCE LINE # 1275
0014 900003            MOV     DPTR,#03H
0017 120000      E     LCALL   ?C?XBPOFF
001A 120000      E     LCALL   ?C?PLDXDATA
001D 120000      E     LCALL   ?C?CLDPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 540F              ANL     A,#0FH
0024 FF                MOV     R7,A
0025 850083      E     MOV     DPH,?C_XBP
0028 850082      E     MOV     DPL,?C_XBP+01H
002B EF                MOV     A,R7
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1276
002D 850083      E     MOV     DPH,?C_XBP
0030 850082      E     MOV     DPL,?C_XBP+01H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 7003              JNZ     $ + 5H
0038 020000      R     LJMP    ?C0141
003B 850083      E     MOV     DPH,?C_XBP
003E 850082      E     MOV     DPL,?C_XBP+01H
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 EF                MOV     A,R7
0044 6401              XRL     A,#01H
0046 7003              JNZ     $ + 5H
0048 020000      R     LJMP    ?C0141
                                           ; SOURCE LINE # 1277
                                           ; SOURCE LINE # 1278
004B 850083      E     MOV     DPH,?C_XBP
004E 850082      E     MOV     DPL,?C_XBP+01H
0051 E0                MOVX    A,@DPTR
0052 FF                MOV     R7,A
0053 EF                MOV     A,R7
0054 900000      R     MOV     DPTR,#USB_MIDI_SIZE
0057 93                MOVC    A,@A+DPTR
0058 FF                MOV     R7,A
0059 850083      E     MOV     DPH,?C_XBP
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 81  

005C 850082      E     MOV     DPL,?C_XBP+01H
005F A3                INC     DPTR
0060 EF                MOV     A,R7
0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1279
0062 850083      E     MOV     DPH,?C_XBP
0065 850082      E     MOV     DPL,?C_XBP+01H
0068 A3                INC     DPTR
0069 A3                INC     DPTR
006A 7401              MOV     A,#01H
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1281
006D 850083      E     MOV     DPH,?C_XBP
0070 850082      E     MOV     DPL,?C_XBP+01H
0073 E0                MOVX    A,@DPTR
0074 FF                MOV     R7,A
0075 EF                MOV     A,R7
0076 6404              XRL     A,#04H
0078 7054              JNZ     ?C0142
                                           ; SOURCE LINE # 1282
                                           ; SOURCE LINE # 1283
007A 900003            MOV     DPTR,#03H
007D 120000      E     LCALL   ?C?XBPOFF
0080 120000      E     LCALL   ?C?PLDXDATA
0083 E9                MOV     A,R1
0084 2401              ADD     A,#01H
0086 F9                MOV     R1,A
0087 EA                MOV     A,R2
0088 3400              ADDC    A,#00H
008A FA                MOV     R2,A
008B 120000      E     LCALL   ?C?CLDPTR
008E FF                MOV     R7,A
008F EF                MOV     A,R7
0090 B4F02A            CJNE    A,#0F0H,?C0143
0093 900003            MOV     DPTR,#03H
0096 120000      E     LCALL   ?C?XBPOFF
0099 120000      E     LCALL   ?C?PLDXDATA
009C E9                MOV     A,R1
009D 2402              ADD     A,#02H
009F F9                MOV     R1,A
00A0 EA                MOV     A,R2
00A1 3400              ADDC    A,#00H
00A3 FA                MOV     R2,A
00A4 120000      E     LCALL   ?C?CLDPTR
00A7 FF                MOV     R7,A
00A8 EF                MOV     A,R7
00A9 B47E11            CJNE    A,#07EH,?C0143
                                           ; SOURCE LINE # 1285
                                           ; SOURCE LINE # 1286
00AC 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 EF                MOV     A,R7
00B2 4401              ORL     A,#01H
00B4 FF                MOV     R7,A
00B5 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00B8 EF                MOV     A,R7
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1287
00BA 020000      R     LJMP    ?C0145
00BD         ?C0143:
                                           ; SOURCE LINE # 1289
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 82  

                                           ; SOURCE LINE # 1290
00BD 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00C0 E0                MOVX    A,@DPTR
00C1 FF                MOV     R7,A
00C2 EF                MOV     A,R7
00C3 54FE              ANL     A,#0FEH
00C5 FF                MOV     R7,A
00C6 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00C9 EF                MOV     A,R7
00CA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1291
                                           ; SOURCE LINE # 1292
00CB 020000      R     LJMP    ?C0145
00CE         ?C0142:
                                           ; SOURCE LINE # 1293
00CE 850083      E     MOV     DPH,?C_XBP
00D1 850082      E     MOV     DPL,?C_XBP+01H
00D4 E0                MOVX    A,@DPTR
00D5 FF                MOV     R7,A
00D6 EF                MOV     A,R7
00D7 B40511            CJNE    A,#05H,?C0146
                                           ; SOURCE LINE # 1294
                                           ; SOURCE LINE # 1295
00DA 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00DD E0                MOVX    A,@DPTR
00DE FF                MOV     R7,A
00DF EF                MOV     A,R7
00E0 54FE              ANL     A,#0FEH
00E2 FF                MOV     R7,A
00E3 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00E6 EF                MOV     A,R7
00E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1296
00E8 020000      R     LJMP    ?C0145
00EB         ?C0146:
                                           ; SOURCE LINE # 1297
00EB 850083      E     MOV     DPH,?C_XBP
00EE 850082      E     MOV     DPL,?C_XBP+01H
00F1 E0                MOVX    A,@DPTR
00F2 FF                MOV     R7,A
00F3 EF                MOV     A,R7
00F4 B40610            CJNE    A,#06H,?C0148
                                           ; SOURCE LINE # 1298
                                           ; SOURCE LINE # 1299
00F7 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00FA E0                MOVX    A,@DPTR
00FB FF                MOV     R7,A
00FC EF                MOV     A,R7
00FD 54FE              ANL     A,#0FEH
00FF FF                MOV     R7,A
0100 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
0103 EF                MOV     A,R7
0104 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1300
0105 806A              SJMP    ?C0145
0107         ?C0148:
                                           ; SOURCE LINE # 1301
0107 850083      E     MOV     DPH,?C_XBP
010A 850082      E     MOV     DPL,?C_XBP+01H
010D E0                MOVX    A,@DPTR
010E FF                MOV     R7,A
010F EF                MOV     A,R7
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 83  

0110 6407              XRL     A,#07H
0112 705D              JNZ     ?C0145
                                           ; SOURCE LINE # 1302
                                           ; SOURCE LINE # 1304
0114 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
0117 E0                MOVX    A,@DPTR
0118 FF                MOV     R7,A
0119 EF                MOV     A,R7
011A 5401              ANL     A,#01H
011C FF                MOV     R7,A
011D 7E00              MOV     R6,#00H
011F EF                MOV     A,R7
0120 4E                ORL     A,R6
0121 604E              JZ      ?C0145
                                           ; SOURCE LINE # 1305
                                           ; SOURCE LINE # 1306
0123 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
0126 E0                MOVX    A,@DPTR
0127 FF                MOV     R7,A
0128 EF                MOV     A,R7
0129 54FE              ANL     A,#0FEH
012B FF                MOV     R7,A
012C 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
012F EF                MOV     A,R7
0130 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1307
0131 900003            MOV     DPTR,#03H
0134 120000      E     LCALL   ?C?XBPOFF
0137 120000      E     LCALL   ?C?PLDXDATA
013A E9                MOV     A,R1
013B 2401              ADD     A,#01H
013D F9                MOV     R1,A
013E EA                MOV     A,R2
013F 3400              ADDC    A,#00H
0141 FA                MOV     R2,A
0142 120000      E     LCALL   ?C?CLDPTR
0145 FF                MOV     R7,A
0146 EF                MOV     A,R7
0147 B40627            CJNE    A,#06H,?C0145
014A 900003            MOV     DPTR,#03H
014D 120000      E     LCALL   ?C?XBPOFF
0150 120000      E     LCALL   ?C?PLDXDATA
0153 E9                MOV     A,R1
0154 2402              ADD     A,#02H
0156 F9                MOV     R1,A
0157 EA                MOV     A,R2
0158 3400              ADDC    A,#00H
015A FA                MOV     R2,A
015B 120000      E     LCALL   ?C?CLDPTR
015E FF                MOV     R7,A
015F EF                MOV     A,R7
0160 B4010E            CJNE    A,#01H,?C0145
                                           ; SOURCE LINE # 1309
                                           ; SOURCE LINE # 1312
0163 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
0166 E0                MOVX    A,@DPTR
0167 FF                MOV     R7,A
0168 EF                MOV     A,R7
0169 4402              ORL     A,#02H
016B FF                MOV     R7,A
016C 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
016F EF                MOV     A,R7
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 84  

0170 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1313
                                           ; SOURCE LINE # 1314
                                           ; SOURCE LINE # 1315
                                           ; SOURCE LINE # 1317
                                           ; SOURCE LINE # 1318
0171         ?C0145:
                                           ; SOURCE LINE # 1320
0171 850083      E     MOV     DPH,?C_XBP
0174 850082      E     MOV     DPL,?C_XBP+01H
0177 E0                MOVX    A,@DPTR
0178 FF                MOV     R7,A
0179 EF                MOV     A,R7
017A C3                CLR     C
017B 9408              SUBB    A,#08H
017D 4055              JC      ?C0154
017F 850083      E     MOV     DPH,?C_XBP
0182 850082      E     MOV     DPL,?C_XBP+01H
0185 E0                MOVX    A,@DPTR
0186 FF                MOV     R7,A
0187 EF                MOV     A,R7
0188 D3                SETB    C
0189 940E              SUBB    A,#0EH
018B 5047              JNC     ?C0154
                                           ; SOURCE LINE # 1321
                                           ; SOURCE LINE # 1322
018D 900003            MOV     DPTR,#03H
0190 120000      E     LCALL   ?C?XBPOFF
0193 120000      E     LCALL   ?C?PLDXDATA
0196 E9                MOV     A,R1
0197 2401              ADD     A,#01H
0199 F9                MOV     R1,A
019A EA                MOV     A,R2
019B 3400              ADDC    A,#00H
019D FA                MOV     R2,A
019E 120000      E     LCALL   ?C?CLDPTR
01A1 FF                MOV     R7,A
01A2 900000      R     MOV     DPTR,#USB_MIDI2_TxRunStat
01A5 E0                MOVX    A,@DPTR
01A6 FE                MOV     R6,A
01A7 EE                MOV     A,R6
01A8 B5070D            CJNE    A,AR7,?C0155
                                           ; SOURCE LINE # 1323
                                           ; SOURCE LINE # 1324
01AB 850083      E     MOV     DPH,?C_XBP
01AE 850082      E     MOV     DPL,?C_XBP+01H
01B1 A3                INC     DPTR
01B2 A3                INC     DPTR
01B3 E0                MOVX    A,@DPTR
01B4 04                INC     A
01B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1325
01B6 8021              SJMP    ?C0160
01B8         ?C0155:
                                           ; SOURCE LINE # 1327
                                           ; SOURCE LINE # 1328
01B8 900003            MOV     DPTR,#03H
01BB 120000      E     LCALL   ?C?XBPOFF
01BE 120000      E     LCALL   ?C?PLDXDATA
01C1 E9                MOV     A,R1
01C2 2401              ADD     A,#01H
01C4 F9                MOV     R1,A
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 85  

01C5 EA                MOV     A,R2
01C6 3400              ADDC    A,#00H
01C8 FA                MOV     R2,A
01C9 120000      E     LCALL   ?C?CLDPTR
01CC FF                MOV     R7,A
01CD 900000      R     MOV     DPTR,#USB_MIDI2_TxRunStat
01D0 EF                MOV     A,R7
01D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1329
                                           ; SOURCE LINE # 1330
01D2 8005              SJMP    ?C0160
01D4         ?C0154:
                                           ; SOURCE LINE # 1332
                                           ; SOURCE LINE # 1333
01D4 900000      R     MOV     DPTR,#USB_MIDI2_TxRunStat
01D7 E4                CLR     A
01D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1334
01D9         ?C0160:
                                           ; SOURCE LINE # 1337
                                           ; SOURCE LINE # 1338
01D9 900003            MOV     DPTR,#03H
01DC 120000      E     LCALL   ?C?XBPOFF
01DF 120000      E     LCALL   ?C?PLDXDATA
01E2 850083      E     MOV     DPH,?C_XBP
01E5 850082      E     MOV     DPL,?C_XBP+01H
01E8 A3                INC     DPTR
01E9 A3                INC     DPTR
01EA E0                MOVX    A,@DPTR
01EB FF                MOV     R7,A
01EC E9                MOV     A,R1
01ED 2F                ADD     A,R7
01EE F9                MOV     R1,A
01EF E4                CLR     A
01F0 3A                ADDC    A,R2
01F1 FA                MOV     R2,A
01F2 120000      E     LCALL   ?C?CLDPTR
01F5 FF                MOV     R7,A
01F6 120000      E     LCALL   _?MIDI2_UART_PutChar
                                           ; SOURCE LINE # 1339
01F9 850083      E     MOV     DPH,?C_XBP
01FC 850082      E     MOV     DPL,?C_XBP+01H
01FF A3                INC     DPTR
0200 A3                INC     DPTR
0201 E0                MOVX    A,@DPTR
0202 04                INC     A
0203 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1340
0204 850083      E     MOV     DPH,?C_XBP
0207 850082      E     MOV     DPL,?C_XBP+01H
020A A3                INC     DPTR
020B E0                MOVX    A,@DPTR
020C FF                MOV     R7,A
020D 850083      E     MOV     DPH,?C_XBP
0210 850082      E     MOV     DPL,?C_XBP+01H
0213 A3                INC     DPTR
0214 A3                INC     DPTR
0215 E0                MOVX    A,@DPTR
0216 FE                MOV     R6,A
0217 EE                MOV     A,R6
0218 D3                SETB    C
0219 9F                SUBB    A,R7
C51 COMPILER V9.51   USB_MIDI                                                              02/21/2017 15:19:26 PAGE 86  

021A 40BD              JC      ?C0160
                                           ; SOURCE LINE # 1341
021C         ?C0141:
                                           ; SOURCE LINE # 1345
021C 7F00              MOV     R7,#00H
021E 120000      E     LCALL   _?LED_OutB_Write
                                           ; SOURCE LINE # 1347
0221 900006            MOV     DPTR,#06H
0224 120000      E     LCALL   ?C?ADDXBP
0227 22                RET     
             ; FUNCTION _?USB_MIDI2_ProcessUsbOut (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5698    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =     87       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
