C51 COMPILER V9.51   USB_DESCR                                                             02/21/2017 15:19:25 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USB_DESCR
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\USB_descr.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\USB_descr.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(
                    -.\DP8051\DP8051_Keil_951\Debug/USB_descr.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\USB_descr.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USB_descr.c
   3          * Version 2.70
   4          *
   5          * Description:
   6          *  USB descriptors and storage.
   7          *
   8          *  Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "USB.h"
  18          #include "USB_pvt.h"
  19          
  20          
  21          /*****************************************************************************
  22          *  User supplied descriptors.  If you want to specify your own descriptors,
  23          *  define USER_SUPPLIED_DESCRIPTORS below and add your descriptors.
  24          *****************************************************************************/
  25          /* `#START USER_DESCRIPTORS_DECLARATIONS` Place your declaration here */
  26          
  27          /* `#END` */
  28          
  29          
  30          /***************************************
  31          *  USB Customizer Generated Descriptors
  32          ***************************************/
  33          
  34          #if !defined(USER_SUPPLIED_DESCRIPTORS)
  35          /*********************************************************************
  36          * Device Descriptors
  37          *********************************************************************/
  38          const uint8 CYCODE USB_DEVICE0_DESCR[18u] = {
  39          /* Descriptor Length                       */ 0x12u,
  40          /* DescriptorType: DEVICE                  */ 0x01u,
  41          /* bcdUSB (ver 2.0)                        */ 0x00u, 0x02u,
  42          /* bDeviceClass                            */ 0x00u,
  43          /* bDeviceSubClass                         */ 0x00u,
  44          /* bDeviceProtocol                         */ 0x00u,
  45          /* bMaxPacketSize0                         */ 0x08u,
  46          /* idVendor                                */ 0xB4u, 0x04u,
  47          /* idProduct                               */ 0x32u, 0xD2u,
  48          /* bcdDevice                               */ 0x00u, 0x00u,
  49          /* iManufacturer                           */ 0x01u,
  50          /* iProduct                                */ 0x02u,
  51          /* iSerialNumber                           */ 0x80u,
  52          /* bNumConfigurations                      */ 0x01u
  53          };
C51 COMPILER V9.51   USB_DESCR                                                             02/21/2017 15:19:25 PAGE 2   

  54          /*********************************************************************
  55          * Config Descriptor  
  56          *********************************************************************/
  57          const uint8 CYCODE USB_DEVICE0_CONFIGURATION0_DESCR[133u] = {
  58          /*  Config Descriptor Length               */ 0x09u,
  59          /*  DescriptorType: CONFIG                 */ 0x02u,
  60          /*  wTotalLength                           */ 0x85u, 0x00u,
  61          /*  bNumInterfaces                         */ 0x02u,
  62          /*  bConfigurationValue                    */ 0x01u,
  63          /*  iConfiguration                         */ 0x02u,
  64          /*  bmAttributes                           */ 0x80u,
  65          /*  bMaxPower                              */ 0x32u,
  66          /*********************************************************************
  67          * AudioControl Interface Descriptor
  68          *********************************************************************/
  69          /*  Interface Descriptor Length            */ 0x09u,
  70          /*  DescriptorType: INTERFACE              */ 0x04u,
  71          /*  bInterfaceNumber                       */ 0x00u,
  72          /*  bAlternateSetting                      */ 0x00u,
  73          /*  bNumEndpoints                          */ 0x00u,
  74          /*  bInterfaceClass                        */ 0x01u,
  75          /*  bInterfaceSubClass                     */ 0x01u,
  76          /*  bInterfaceProtocol                     */ 0x00u,
  77          /*  iInterface                             */ 0x06u,
  78          /*********************************************************************
  79          * AC Header Descriptor
  80          *********************************************************************/
  81          /*  AC Header Descriptor Length            */ 0x09u,
  82          /*  DescriptorType: AUDIO                  */ 0x24u,
  83          /*  bDescriptorSubtype                     */ 0x01u,
  84          /*  bcdADC                                 */ 0x00u, 0x01u,
  85          /*  wTotalLength                           */ 0x09u, 0x00u,
  86          /*  bInCollection                          */ 0x01u,
  87          /*  baInterfaceNr                          */ 0x01u,
  88          /*********************************************************************
  89          * MIDIStreaming Interface Descriptor
  90          *********************************************************************/
  91          /*  Interface Descriptor Length            */ 0x09u,
  92          /*  DescriptorType: INTERFACE              */ 0x04u,
  93          /*  bInterfaceNumber                       */ 0x01u,
  94          /*  bAlternateSetting                      */ 0x00u,
  95          /*  bNumEndpoints                          */ 0x02u,
  96          /*  bInterfaceClass                        */ 0x01u,
  97          /*  bInterfaceSubClass                     */ 0x03u,
  98          /*  bInterfaceProtocol                     */ 0x00u,
  99          /*  iInterface                             */ 0x05u,
 100          /*********************************************************************
 101          * MS Header Descriptor
 102          *********************************************************************/
 103          /*  MS Header Descriptor Length            */ 0x07u,
 104          /*  DescriptorType: AUDIO                  */ 0x24u,
 105          /*  bDescriptorSubtype                     */ 0x01u,
 106          /*  bcdADC                                 */ 0x00u, 0x01u,
 107          /*  wTotalLength                           */ 0x43u, 0x00u,
 108          /*********************************************************************
 109          * MIDI IN Jack Descriptor
 110          *********************************************************************/
 111          /*  MIDI IN Jack Descriptor Length         */ 0x06u,
 112          /*  DescriptorType: AUDIO                  */ 0x24u,
 113          /*  bDescriptorSubtype                     */ 0x02u,
 114          /*  bJackType                              */ 0x01u,
 115          /*  bJackID                                */ 0x01u,
C51 COMPILER V9.51   USB_DESCR                                                             02/21/2017 15:19:25 PAGE 3   

 116          /*  iJack                                  */ 0x03u,
 117          /*********************************************************************
 118          * MIDI IN Jack Descriptor
 119          *********************************************************************/
 120          /*  MIDI IN Jack Descriptor Length         */ 0x06u,
 121          /*  DescriptorType: AUDIO                  */ 0x24u,
 122          /*  bDescriptorSubtype                     */ 0x02u,
 123          /*  bJackType                              */ 0x02u,
 124          /*  bJackID                                */ 0x02u,
 125          /*  iJack                                  */ 0x03u,
 126          /*********************************************************************
 127          * MIDI OUT Jack Descriptor
 128          *********************************************************************/
 129          /*  MIDI OUT Jack Descriptor Length        */ 0x09u,
 130          /*  DescriptorType: AUDIO                  */ 0x24u,
 131          /*  bDescriptorSubtype                     */ 0x03u,
 132          /*  bJackType                              */ 0x01u,
 133          /*  bJackID                                */ 0x03u,
 134          /*  bNrInputPins                           */ 0x01u,
 135          /*  baSourceID                             */ 0x02u,
 136          /*  baSourceID                             */ 0x01u,
 137          /*  iJack                                  */ 0x04u,
 138          /*********************************************************************
 139          * MIDI OUT Jack Descriptor
 140          *********************************************************************/
 141          /*  MIDI OUT Jack Descriptor Length        */ 0x09u,
 142          /*  DescriptorType: AUDIO                  */ 0x24u,
 143          /*  bDescriptorSubtype                     */ 0x03u,
 144          /*  bJackType                              */ 0x02u,
 145          /*  bJackID                                */ 0x04u,
 146          /*  bNrInputPins                           */ 0x01u,
 147          /*  baSourceID                             */ 0x01u,
 148          /*  baSourceID                             */ 0x01u,
 149          /*  iJack                                  */ 0x04u,
 150          /*********************************************************************
 151          * MIDI IN Jack Descriptor
 152          *********************************************************************/
 153          /*  MIDI IN Jack Descriptor Length         */ 0x06u,
 154          /*  DescriptorType: AUDIO                  */ 0x24u,
 155          /*  bDescriptorSubtype                     */ 0x02u,
 156          /*  bJackType                              */ 0x01u,
 157          /*  bJackID                                */ 0x05u,
 158          /*  iJack                                  */ 0x07u,
 159          /*********************************************************************
 160          * MIDI IN Jack Descriptor
 161          *********************************************************************/
 162          /*  MIDI IN Jack Descriptor Length         */ 0x06u,
 163          /*  DescriptorType: AUDIO                  */ 0x24u,
 164          /*  bDescriptorSubtype                     */ 0x02u,
 165          /*  bJackType                              */ 0x02u,
 166          /*  bJackID                                */ 0x06u,
 167          /*  iJack                                  */ 0x07u,
 168          /*********************************************************************
 169          * MIDI OUT Jack Descriptor
 170          *********************************************************************/
 171          /*  MIDI OUT Jack Descriptor Length        */ 0x09u,
 172          /*  DescriptorType: AUDIO                  */ 0x24u,
 173          /*  bDescriptorSubtype                     */ 0x03u,
 174          /*  bJackType                              */ 0x01u,
 175          /*  bJackID                                */ 0x07u,
 176          /*  bNrInputPins                           */ 0x01u,
 177          /*  baSourceID                             */ 0x06u,
C51 COMPILER V9.51   USB_DESCR                                                             02/21/2017 15:19:25 PAGE 4   

 178          /*  baSourceID                             */ 0x01u,
 179          /*  iJack                                  */ 0x04u,
 180          /*********************************************************************
 181          * MIDI OUT Jack Descriptor
 182          *********************************************************************/
 183          /*  MIDI OUT Jack Descriptor Length        */ 0x09u,
 184          /*  DescriptorType: AUDIO                  */ 0x24u,
 185          /*  bDescriptorSubtype                     */ 0x03u,
 186          /*  bJackType                              */ 0x02u,
 187          /*  bJackID                                */ 0x08u,
 188          /*  bNrInputPins                           */ 0x01u,
 189          /*  baSourceID                             */ 0x05u,
 190          /*  baSourceID                             */ 0x01u,
 191          /*  iJack                                  */ 0x08u,
 192          /*********************************************************************
 193          * Endpoint Descriptor
 194          *********************************************************************/
 195          /*  Endpoint Descriptor Length             */ 0x09u,
 196          /*  DescriptorType: ENDPOINT               */ 0x05u,
 197          /*  bEndpointAddress                       */ 0x81u,
 198          /*  bmAttributes                           */ 0x02u,
 199          /*  wMaxPacketSize                         */ 0x20u, 0x00u,
 200          /*  bInterval                              */ 0x00u,
 201          /*  bRefresh                               */ 0x00u,
 202          /*  bSynchAddress                          */ 0x00u,
 203          /*********************************************************************
 204          * MS Bulk Data Endpoint Descriptor
 205          *********************************************************************/
 206          /*  Endpoint Descriptor Length             */ 0x06u,
 207          /*  DescriptorType: CS_ENDPOINT            */ 0x25u,
 208          /*  bDescriptorSubtype                     */ 0x01u,
 209          /*  bNumEmbMIDIJack                        */ 0x02u,
 210          /*  baAssocJackID                          */ 0x03u, 0x07u,
 211          /*********************************************************************
 212          * Endpoint Descriptor
 213          *********************************************************************/
 214          /*  Endpoint Descriptor Length             */ 0x09u,
 215          /*  DescriptorType: ENDPOINT               */ 0x05u,
 216          /*  bEndpointAddress                       */ 0x02u,
 217          /*  bmAttributes                           */ 0x02u,
 218          /*  wMaxPacketSize                         */ 0x20u, 0x00u,
 219          /*  bInterval                              */ 0x00u,
 220          /*  bRefresh                               */ 0x00u,
 221          /*  bSynchAddress                          */ 0x00u,
 222          /*********************************************************************
 223          * MS Bulk Data Endpoint Descriptor
 224          *********************************************************************/
 225          /*  Endpoint Descriptor Length             */ 0x06u,
 226          /*  DescriptorType: CS_ENDPOINT            */ 0x25u,
 227          /*  bDescriptorSubtype                     */ 0x01u,
 228          /*  bNumEmbMIDIJack                        */ 0x02u,
 229          /*  baAssocJackID                          */ 0x01u, 0x05u
 230          };
 231          
 232          /*********************************************************************
 233          * String Descriptor Table
 234          *********************************************************************/
 235          const uint8 CYCODE USB_STRING_DESCRIPTORS[185u] = {
 236          /*********************************************************************
 237          * Language ID Descriptor
 238          *********************************************************************/
 239          /* Descriptor Length                       */ 0x04u,
C51 COMPILER V9.51   USB_DESCR                                                             02/21/2017 15:19:25 PAGE 5   

 240          /* DescriptorType: STRING                  */ 0x03u,
 241          /* Language Id                             */ 0x09u, 0x04u,
 242          /*********************************************************************
 243          * String Descriptor: "Cypress"
 244          *********************************************************************/
 245          /* Descriptor Length                       */ 0x10u,
 246          /* DescriptorType: STRING                  */ 0x03u,
 247           (uint8)'C', 0u,(uint8)'y', 0u,(uint8)'p', 0u,(uint8)'r', 0u,(uint8)'e', 0u,
 248           (uint8)'s', 0u,(uint8)'s', 0u,
 249          /*********************************************************************
 250          * String Descriptor: "USB MIDI"
 251          *********************************************************************/
 252          /* Descriptor Length                       */ 0x12u,
 253          /* DescriptorType: STRING                  */ 0x03u,
 254           (uint8)'U', 0u,(uint8)'S', 0u,(uint8)'B', 0u,(uint8)' ', 0u,(uint8)'M', 0u,
 255           (uint8)'I', 0u,(uint8)'D', 0u,(uint8)'I', 0u,
 256          /*********************************************************************
 257          * String Descriptor: "MIDI IN"
 258          *********************************************************************/
 259          /* Descriptor Length                       */ 0x10u,
 260          /* DescriptorType: STRING                  */ 0x03u,
 261           (uint8)'M', 0u,(uint8)'I', 0u,(uint8)'D', 0u,(uint8)'I', 0u,(uint8)' ', 0u,
 262           (uint8)'I', 0u,(uint8)'N', 0u,
 263          /*********************************************************************
 264          * String Descriptor: "MIDI OUT"
 265          *********************************************************************/
 266          /* Descriptor Length                       */ 0x12u,
 267          /* DescriptorType: STRING                  */ 0x03u,
 268           (uint8)'M', 0u,(uint8)'I', 0u,(uint8)'D', 0u,(uint8)'I', 0u,(uint8)' ', 0u,
 269           (uint8)'O', 0u,(uint8)'U', 0u,(uint8)'T', 0u,
 270          /*********************************************************************
 271          * String Descriptor: "MIDI Streaming Intf"
 272          *********************************************************************/
 273          /* Descriptor Length                       */ 0x28u,
 274          /* DescriptorType: STRING                  */ 0x03u,
 275           (uint8)'M', 0u,(uint8)'I', 0u,(uint8)'D', 0u,(uint8)'I', 0u,(uint8)' ', 0u,
 276           (uint8)'S', 0u,(uint8)'t', 0u,(uint8)'r', 0u,(uint8)'e', 0u,(uint8)'a', 0u,
 277           (uint8)'m', 0u,(uint8)'i', 0u,(uint8)'n', 0u,(uint8)'g', 0u,(uint8)' ', 0u,
 278           (uint8)'I', 0u,(uint8)'n', 0u,(uint8)'t', 0u,(uint8)'f', 0u,
 279          /*********************************************************************
 280          * String Descriptor: "MIDI Interface"
 281          *********************************************************************/
 282          /* Descriptor Length                       */ 0x1Eu,
 283          /* DescriptorType: STRING                  */ 0x03u,
 284           (uint8)'M', 0u,(uint8)'I', 0u,(uint8)'D', 0u,(uint8)'I', 0u,(uint8)' ', 0u,
 285           (uint8)'I', 0u,(uint8)'n', 0u,(uint8)'t', 0u,(uint8)'e', 0u,(uint8)'r', 0u,
 286           (uint8)'f', 0u,(uint8)'a', 0u,(uint8)'c', 0u,(uint8)'e', 0u,
 287          /*********************************************************************
 288          * String Descriptor: "MIDI IN 2"
 289          *********************************************************************/
 290          /* Descriptor Length                       */ 0x14u,
 291          /* DescriptorType: STRING                  */ 0x03u,
 292           (uint8)'M', 0u,(uint8)'I', 0u,(uint8)'D', 0u,(uint8)'I', 0u,(uint8)' ', 0u,
 293           (uint8)'I', 0u,(uint8)'N', 0u,(uint8)' ', 0u,(uint8)'2', 0u,
 294          /*********************************************************************
 295          * String Descriptor: "MIDI OUT 2"
 296          *********************************************************************/
 297          /* Descriptor Length                       */ 0x16u,
 298          /* DescriptorType: STRING                  */ 0x03u,
 299           (uint8)'M', 0u,(uint8)'I', 0u,(uint8)'D', 0u,(uint8)'I', 0u,(uint8)' ', 0u,
 300           (uint8)'O', 0u,(uint8)'U', 0u,(uint8)'T', 0u,(uint8)' ', 0u,(uint8)'2', 0u,
 301          /*********************************************************************/
C51 COMPILER V9.51   USB_DESCR                                                             02/21/2017 15:19:25 PAGE 6   

 302          /* Marks the end of the list.              */ 0x00u};
 303          /*********************************************************************/
 304          
 305          /*********************************************************************
 306          * Serial Number String Descriptor
 307          *********************************************************************/
 308          const uint8 CYCODE USB_SN_STRING_DESCRIPTOR[2] = {
 309          /* Descriptor Length                       */ 0x02u,
 310          /* DescriptorType: STRING                  */ 0x03u
 311          };
 312          
 313          
 314          
 315          /*********************************************************************
 316          * Endpoint Setting Table -- This table contain the endpoint setting
 317          *                           for each endpoint in the configuration. It
 318          *                           contains the necessary information to
 319          *                           configure the endpoint hardware for each
 320          *                           interface and alternate setting.
 321          *********************************************************************/
 322          const T_USB_EP_SETTINGS_BLOCK CYCODE USB_DEVICE0_CONFIGURATION0_EP_SETTINGS_TABLE[2u] = {
 323          /* IFC  ALT    EPAddr bmAttr MaxPktSize Class ********************/
 324          {0x01u, 0x00u, 0x81u, 0x02u, 0x0020u,   0x01u},
 325          {0x01u, 0x00u, 0x02u, 0x02u, 0x0020u,   0x01u}
 326          };
 327          const uint8 CYCODE USB_DEVICE0_CONFIGURATION0_INTERFACE_CLASS[2u] = {
 328          0x01u, 0x01u
 329          };
 330          /*********************************************************************
 331          * Config Dispatch Table -- Points to the Config Descriptor and each of
 332          *                          and endpoint setup table and to each
 333          *                          interface table if it specifies a USB Class
 334          *********************************************************************/
 335          const T_USB_LUT CYCODE USB_DEVICE0_CONFIGURATION0_TABLE[5u] = {
 336              {0x01u,     &USB_DEVICE0_CONFIGURATION0_DESCR},
 337              {0x02u,     &USB_DEVICE0_CONFIGURATION0_EP_SETTINGS_TABLE},
 338              {0x00u,    NULL},
 339              {0x00u,    NULL},
 340              {0x00u,     &USB_DEVICE0_CONFIGURATION0_INTERFACE_CLASS}
 341          };
 342          /*********************************************************************
 343          * Device Dispatch Table -- Points to the Device Descriptor and each of
 344          *                          and Configuration Tables for this Device 
 345          *********************************************************************/
 346          const T_USB_LUT CYCODE USB_DEVICE0_TABLE[2u] = {
 347              {0x01u,     &USB_DEVICE0_DESCR},
 348              {0x01u,     &USB_DEVICE0_CONFIGURATION0_TABLE}
 349          };
 350          /*********************************************************************
 351          * Device Table -- Indexed by the device number.
 352          *********************************************************************/
 353          const T_USB_LUT CYCODE USB_TABLE[1u] = {
 354              {0x01u,     &USB_DEVICE0_TABLE}
 355          };
 356          
 357          #endif /* USER_SUPPLIED_DESCRIPTORS */
 358          
 359          #if defined(USB_ENABLE_MSOS_STRING)
 360          
 361              /******************************************************************************
 362              *  USB Microsoft OS String Descriptor
 363              *  "MSFT" identifies a Microsoft host
C51 COMPILER V9.51   USB_DESCR                                                             02/21/2017 15:19:25 PAGE 7   

 364              *  "100" specifies version 1.00
 365              *  USB_GET_EXTENDED_CONFIG_DESCRIPTOR becomes the bRequest value
 366              *  in a host vendor device/class request
 367              ******************************************************************************/
 368          
 369              const uint8 CYCODE USB_MSOS_DESCRIPTOR[USB_MSOS_DESCRIPTOR_LENGTH] = {
 370              /* Descriptor Length                       */   0x12u,
 371              /* DescriptorType: STRING                  */   0x03u,
 372              /* qwSignature - "MSFT100"                 */   (uint8)'M', 0u, (uint8)'S', 0u, (uint8)'F', 0u, (uint8
             -)'T', 0u,
 373                                                              (uint8)'1', 0u, (uint8)'0', 0u, (uint8)'0', 0u,
 374              /* bMS_VendorCode:                         */   USB_GET_EXTENDED_CONFIG_DESCRIPTOR,
 375              /* bPad                                    */   0x00u
 376              };
 377          
 378              /* Extended Configuration Descriptor */
 379          
 380              const uint8 CYCODE USB_MSOS_CONFIGURATION_DESCR[USB_MSOS_CONF_DESCR_LENGTH] = {
 381              /*  Length of the descriptor 4 bytes       */   0x28u, 0x00u, 0x00u, 0x00u,
 382              /*  Version of the descriptor 2 bytes      */   0x00u, 0x01u,
 383              /*  wIndex - Fixed:INDEX_CONFIG_DESCRIPTOR */   0x04u, 0x00u,
 384              /*  bCount - Count of device functions.    */   0x01u,
 385              /*  Reserved : 7 bytes                     */   0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
 386              /*  bFirstInterfaceNumber                  */   0x00u,
 387              /*  Reserved                               */   0x01u,
 388              /*  compatibleID    - "CYUSB\0\0"          */   (uint8)'C', (uint8)'Y', (uint8)'U', (uint8)'S', (uint8
             -)'B',
 389                                                              0x00u, 0x00u, 0x00u,
 390              /*  subcompatibleID - "00001\0\0"          */   (uint8)'0', (uint8)'0', (uint8)'0', (uint8)'0', (uint8
             -)'1',
 391                                                              0x00u, 0x00u, 0x00u,
 392              /*  Reserved : 6 bytes                     */   0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
 393              };
 394          
 395          #endif /* USB_ENABLE_MSOS_STRING */
 396          
 397          /* DIE ID string descriptor for 8 bytes ID */
 398          #if defined(USB_ENABLE_IDSN_STRING)
 399              uint8 USB_idSerialNumberStringDescriptor[USB_IDSN_DESCR_LENGTH];
 400          #endif /* USB_ENABLE_IDSN_STRING */
 401          
 402          
 403          /* [] END OF FILE */
C51 COMPILER V9.51   USB_DESCR                                                             02/21/2017 15:19:25 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE




MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    444    ----
   XDATA SIZE       =     34    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
