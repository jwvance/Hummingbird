--
--	Conversion of Hummingbird(Continuous Output).v to vh2:
--
--	Cypress Semiconductor - WARP Version 6.3 IR 41
--	Tue May 09 14:54:15 2017
--

USE cypress.cypress.all;
USE cypress.rtlpkg.all;
ENTITY top_RTL IS
ATTRIBUTE part_name of top_RTL:TYPE IS "cpsoc3";
END top_RTL;
--------------------------------------------------------
ARCHITECTURE R_T_L OF top_RTL IS
SIGNAL Net_317 : bit;
SIGNAL Net_406 : bit;
SIGNAL Net_91 : bit;
SIGNAL Net_400 : bit;
SIGNAL Net_86 : bit;
SIGNAL tmpOE__MIDI_PWR_net_0 : bit;
SIGNAL zero : bit;
SIGNAL tmpFB_0__MIDI_PWR_net_0 : bit;
SIGNAL tmpIO_0__MIDI_PWR_net_0 : bit;
TERMINAL tmpSIOVREF__MIDI_PWR_net_0 : bit;
TERMINAL Net_459 : bit;
SIGNAL one : bit;
SIGNAL tmpINTERRUPT_0__MIDI_PWR_net_0 : bit;
SIGNAL tmpOE__MIDI_OUT1_net_0 : bit;
SIGNAL tmpFB_0__MIDI_OUT1_net_0 : bit;
SIGNAL tmpIO_0__MIDI_OUT1_net_0 : bit;
TERMINAL tmpSIOVREF__MIDI_OUT1_net_0 : bit;
TERMINAL Net_387 : bit;
SIGNAL tmpINTERRUPT_0__MIDI_OUT1_net_0 : bit;
SIGNAL tmpOE__MIDI_IN1_net_0 : bit;
SIGNAL Net_417 : bit;
SIGNAL tmpIO_0__MIDI_IN1_net_0 : bit;
TERMINAL tmpSIOVREF__MIDI_IN1_net_0 : bit;
TERMINAL Net_416 : bit;
SIGNAL tmpINTERRUPT_0__MIDI_IN1_net_0 : bit;
SIGNAL Net_322 : bit;
SIGNAL Net_323 : bit;
SIGNAL \MIDI1_UART:Net_61\ : bit;
SIGNAL Net_355 : bit;
SIGNAL \MIDI1_UART:BUART:clock_op\ : bit;
SIGNAL \MIDI1_UART:BUART:reset_reg\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_hd_send_break\ : bit;
SIGNAL \MIDI1_UART:BUART:HalfDuplexSend\ : bit;
SIGNAL \MIDI1_UART:BUART:FinalParityType_1\ : bit;
SIGNAL \MIDI1_UART:BUART:FinalParityType_0\ : bit;
SIGNAL \MIDI1_UART:BUART:FinalAddrMode_2\ : bit;
SIGNAL \MIDI1_UART:BUART:FinalAddrMode_1\ : bit;
SIGNAL \MIDI1_UART:BUART:FinalAddrMode_0\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_ctrl_mark\ : bit;
SIGNAL \MIDI1_UART:BUART:reset_reg_dp\ : bit;
SIGNAL \MIDI1_UART:BUART:reset_sr\ : bit;
SIGNAL \MIDI1_UART:BUART:HalfDuplexSend_last\ : bit;
SIGNAL \MIDI1_UART:BUART:txn\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_interrupt_out\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_interrupt_out\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_1\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_0\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:tx_shift_out\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_fifo_notfull\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_fifo_empty\ : bit;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:counter_load\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_2\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_bitclk\ : bit;
SIGNAL \MIDI1_UART:BUART:counter_load_not\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_bitclk_dp\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_counter_dp\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_7\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_0\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_counter_tc\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_6\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_5\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_4\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_0\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_1\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_2\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_3\ : bit;
SIGNAL Net_320 : bit;
SIGNAL \MIDI1_UART:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_mark\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_parity_bit\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_addressmatch\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_addressmatch1\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_addressmatch2\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_1\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_0\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_bitclk_enable\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_postpoll\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_load_fifo\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:hd_shift_out\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_fifonotempty\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_fifofull\ : bit;
SIGNAL \MIDI1_UART:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \MIDI1_UART:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:rx_counter_load\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_3\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_2\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_bitclk_pre\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_2\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_1\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_0\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_6\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_5\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_4\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_3\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count7_tc\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_bitclk\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_0\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_markspace_status\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_1\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_2\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_error_status\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_3\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_stop_bit_error\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_4\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_5\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_6\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_319 : bit;
SIGNAL \MIDI1_UART:BUART:rx_markspace_pre\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_error_pre\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_2 : bit;
SIGNAL \MIDI1_UART:BUART:rx_address_detected\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_last\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_3 : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newa_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newa_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newa_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newa_3\ : bit;
SIGNAL MODIN3_6 : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newa_2\ : bit;
SIGNAL MODIN3_5 : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newa_1\ : bit;
SIGNAL MODIN3_4 : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newa_0\ : bit;
SIGNAL MODIN3_3 : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newb_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newb_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newb_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newb_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newb_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newb_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:newb_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:dataa_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:dataa_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:dataa_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:dataa_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:dataa_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:dataa_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:dataa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:datab_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:datab_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:datab_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:datab_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:datab_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:datab_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:datab_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:lta_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:gta_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:lta_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:gta_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:lta_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:gta_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:lta_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:gta_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:lta_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:gta_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:lta_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:gta_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:lta_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_2:g2:a0:gta_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:newa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:newb_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:dataa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:datab_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:xeq\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:xneq\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:xlt\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:xlte\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:xgt\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:g1:a0:xgte\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:lt\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:MODULE_3:lt\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:eq\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:MODULE_3:eq\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:gt\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:MODULE_3:gt\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:gte\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:MODULE_3:gte\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_3:lte\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:MODULE_3:lte\:SIGNAL IS 2;
SIGNAL tmpOE__MIDI_OUT2_net_0 : bit;
SIGNAL tmpFB_0__MIDI_OUT2_net_0 : bit;
SIGNAL tmpIO_0__MIDI_OUT2_net_0 : bit;
TERMINAL tmpSIOVREF__MIDI_OUT2_net_0 : bit;
TERMINAL Net_404 : bit;
SIGNAL tmpINTERRUPT_0__MIDI_OUT2_net_0 : bit;
SIGNAL tmpOE__MIDI_IN2_net_0 : bit;
SIGNAL Net_418 : bit;
SIGNAL tmpIO_0__MIDI_IN2_net_0 : bit;
TERMINAL tmpSIOVREF__MIDI_IN2_net_0 : bit;
TERMINAL Net_457 : bit;
SIGNAL tmpINTERRUPT_0__MIDI_IN2_net_0 : bit;
SIGNAL Net_332 : bit;
SIGNAL Net_333 : bit;
SIGNAL \MIDI2_UART:Net_61\ : bit;
SIGNAL \MIDI2_UART:BUART:clock_op\ : bit;
SIGNAL \MIDI2_UART:BUART:reset_reg\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_hd_send_break\ : bit;
SIGNAL \MIDI2_UART:BUART:HalfDuplexSend\ : bit;
SIGNAL \MIDI2_UART:BUART:FinalParityType_1\ : bit;
SIGNAL \MIDI2_UART:BUART:FinalParityType_0\ : bit;
SIGNAL \MIDI2_UART:BUART:FinalAddrMode_2\ : bit;
SIGNAL \MIDI2_UART:BUART:FinalAddrMode_1\ : bit;
SIGNAL \MIDI2_UART:BUART:FinalAddrMode_0\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_ctrl_mark\ : bit;
SIGNAL \MIDI2_UART:BUART:reset_reg_dp\ : bit;
SIGNAL \MIDI2_UART:BUART:reset_sr\ : bit;
SIGNAL \MIDI2_UART:BUART:HalfDuplexSend_last\ : bit;
SIGNAL \MIDI2_UART:BUART:txn\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_interrupt_out\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_interrupt_out\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_state_1\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_state_0\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:tx_shift_out\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_fifo_notfull\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_fifo_empty\ : bit;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:counter_load\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_state_2\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_bitclk\ : bit;
SIGNAL \MIDI2_UART:BUART:counter_load_not\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_bitclk_dp\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_counter_dp\ : bit;
SIGNAL \MIDI2_UART:BUART:sc_out_7\ : bit;
SIGNAL \MIDI2_UART:BUART:sc_out_6\ : bit;
SIGNAL \MIDI2_UART:BUART:sc_out_5\ : bit;
SIGNAL \MIDI2_UART:BUART:sc_out_4\ : bit;
SIGNAL \MIDI2_UART:BUART:sc_out_3\ : bit;
SIGNAL \MIDI2_UART:BUART:sc_out_2\ : bit;
SIGNAL \MIDI2_UART:BUART:sc_out_1\ : bit;
SIGNAL \MIDI2_UART:BUART:sc_out_0\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_counter_tc\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_status_6\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_status_5\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_status_4\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_status_0\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_status_1\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_status_2\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_status_3\ : bit;
SIGNAL Net_330 : bit;
SIGNAL \MIDI2_UART:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_mark\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_parity_bit\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_addressmatch\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_addressmatch1\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_addressmatch2\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_state_1\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_state_0\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_bitclk_enable\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_postpoll\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_load_fifo\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:hd_shift_out\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_fifonotempty\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_fifofull\ : bit;
SIGNAL \MIDI2_UART:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \MIDI2_UART:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:rx_counter_load\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_state_3\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_state_2\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_bitclk_pre\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_count_2\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_count_1\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_count_0\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_count_6\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_count_5\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_count_4\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_count_3\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_count7_tc\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_bitclk\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_status_0\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_markspace_status\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_status_1\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_status_2\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_parity_error_status\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_status_3\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_stop_bit_error\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_status_4\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_status_5\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_status_6\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_329 : bit;
SIGNAL \MIDI2_UART:BUART:rx_markspace_pre\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_parity_error_pre\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_break_status\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:cmp_vv_vv_MODGEN_4\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_address_detected\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_last\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_parity_bit\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:cmp_vv_vv_MODGEN_5\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newa_6\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newa_5\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newa_4\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newa_3\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODIN4_6\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newa_2\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODIN4_5\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newa_1\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODIN4_4\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newa_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODIN4_3\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newb_6\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newb_5\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newb_4\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newb_3\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newb_2\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newb_1\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:newb_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:dataa_6\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:dataa_5\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:dataa_4\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:dataa_3\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:dataa_2\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:dataa_1\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:dataa_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:datab_6\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:datab_5\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:datab_4\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:datab_3\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:datab_2\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:datab_1\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:datab_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:lta_6\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:gta_6\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:lta_5\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:gta_5\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:lta_4\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:gta_4\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:lta_3\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:gta_3\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:lta_2\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:gta_2\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:lta_1\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:gta_1\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:lta_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_4:g2:a0:gta_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:newa_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:newb_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:dataa_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:datab_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:xeq\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:xneq\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:xlt\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:xlte\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:xgt\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:g1:a0:xgte\ : bit;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:lt\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:MODULE_5:lt\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:eq\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:MODULE_5:eq\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:gt\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:MODULE_5:gt\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:gte\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:MODULE_5:gte\:SIGNAL IS 2;
SIGNAL \MIDI2_UART:BUART:sRX:MODULE_5:lte\ : bit;
ATTRIBUTE port_state_att of \MIDI2_UART:BUART:sRX:MODULE_5:lte\:SIGNAL IS 2;
SIGNAL \USB:dma_nrq_0\ : bit;
SIGNAL \USB:Net_1800\ : bit;
SIGNAL \USB:ept_int_0\ : bit;
SIGNAL \USB:dma_nrq_3\ : bit;
SIGNAL \USB:Net_1803\ : bit;
SIGNAL \USB:Net_1801\ : bit;
SIGNAL \USB:dma_nrq_1\ : bit;
SIGNAL \USB:dma_nrq_4\ : bit;
SIGNAL \USB:Net_1804\ : bit;
SIGNAL \USB:dma_nrq_5\ : bit;
SIGNAL \USB:Net_1805\ : bit;
SIGNAL \USB:dma_nrq_6\ : bit;
SIGNAL \USB:Net_1806\ : bit;
SIGNAL \USB:dma_nrq_7\ : bit;
SIGNAL \USB:Net_1807\ : bit;
SIGNAL \USB:Net_81\ : bit;
SIGNAL \USB:Net_79\ : bit;
SIGNAL \USB:ept_int_2\ : bit;
SIGNAL \USB:ept_int_1\ : bit;
SIGNAL \USB:Net_1784\ : bit;
SIGNAL \USB:dma_nrq_2\ : bit;
SIGNAL \USB:Net_1802\ : bit;
SIGNAL \USB:Net_1010\ : bit;
SIGNAL \USB:tmpOE__Dm_net_0\ : bit;
SIGNAL \USB:tmpFB_0__Dm_net_0\ : bit;
TERMINAL \USB:Net_597\ : bit;
SIGNAL \USB:tmpIO_0__Dm_net_0\ : bit;
TERMINAL \USB:tmpSIOVREF__Dm_net_0\ : bit;
SIGNAL \USB:tmpINTERRUPT_0__Dm_net_0\ : bit;
SIGNAL \USB:tmpOE__Dp_net_0\ : bit;
SIGNAL \USB:tmpFB_0__Dp_net_0\ : bit;
TERMINAL \USB:Net_1000\ : bit;
SIGNAL \USB:tmpIO_0__Dp_net_0\ : bit;
TERMINAL \USB:tmpSIOVREF__Dp_net_0\ : bit;
SIGNAL Net_339 : bit;
SIGNAL \USB:ept_int_8\ : bit;
SIGNAL \USB:ept_int_7\ : bit;
SIGNAL \USB:ept_int_6\ : bit;
SIGNAL \USB:ept_int_5\ : bit;
SIGNAL \USB:ept_int_4\ : bit;
SIGNAL \USB:ept_int_3\ : bit;
SIGNAL \USB:Net_95\ : bit;
SIGNAL \USB:dma_req_7\ : bit;
SIGNAL \USB:dma_req_6\ : bit;
SIGNAL \USB:dma_req_5\ : bit;
SIGNAL \USB:dma_req_4\ : bit;
SIGNAL \USB:dma_req_3\ : bit;
SIGNAL \USB:dma_req_2\ : bit;
SIGNAL \USB:dma_req_1\ : bit;
SIGNAL \USB:dma_req_0\ : bit;
SIGNAL \USB:Net_824\ : bit;
TERMINAL Net_386 : bit;
TERMINAL Net_381 : bit;
TERMINAL Net_389 : bit;
TERMINAL Net_401 : bit;
TERMINAL Net_390 : bit;
TERMINAL Net_402 : bit;
TERMINAL Net_414 : bit;
TERMINAL Net_407 : bit;
TERMINAL Net_408 : bit;
TERMINAL Net_409 : bit;
TERMINAL Net_410 : bit;
TERMINAL Net_412 : bit;
TERMINAL Net_413 : bit;
TERMINAL Net_461 : bit;
TERMINAL Net_426 : bit;
TERMINAL Net_427 : bit;
TERMINAL Net_456 : bit;
TERMINAL Net_433 : bit;
TERMINAL Net_441 : bit;
TERMINAL Net_446 : bit;
TERMINAL Net_447 : bit;
TERMINAL Net_420 : bit;
TERMINAL Net_448 : bit;
TERMINAL Net_449 : bit;
TERMINAL \ADC_SAR_1:Net_248\ : bit;
TERMINAL \ADC_SAR_1:Net_233\ : bit;
SIGNAL Net_481 : bit;
SIGNAL \ADC_SAR_1:vp_ctl_0\ : bit;
SIGNAL \ADC_SAR_1:vp_ctl_2\ : bit;
SIGNAL \ADC_SAR_1:vn_ctl_1\ : bit;
SIGNAL \ADC_SAR_1:vn_ctl_3\ : bit;
SIGNAL \ADC_SAR_1:vp_ctl_1\ : bit;
SIGNAL \ADC_SAR_1:vp_ctl_3\ : bit;
SIGNAL \ADC_SAR_1:vn_ctl_0\ : bit;
SIGNAL \ADC_SAR_1:vn_ctl_2\ : bit;
SIGNAL \ADC_SAR_1:Net_376\ : bit;
SIGNAL \ADC_SAR_1:Net_188\ : bit;
SIGNAL \ADC_SAR_1:Net_221\ : bit;
TERMINAL Net_478 : bit;
TERMINAL \ADC_SAR_1:Net_126\ : bit;
TERMINAL \ADC_SAR_1:Net_215\ : bit;
TERMINAL \ADC_SAR_1:Net_257\ : bit;
SIGNAL \ADC_SAR_1:soc\ : bit;
SIGNAL \ADC_SAR_1:Net_252\ : bit;
SIGNAL Net_484 : bit;
SIGNAL \ADC_SAR_1:Net_207_11\ : bit;
SIGNAL \ADC_SAR_1:Net_207_10\ : bit;
SIGNAL \ADC_SAR_1:Net_207_9\ : bit;
SIGNAL \ADC_SAR_1:Net_207_8\ : bit;
SIGNAL \ADC_SAR_1:Net_207_7\ : bit;
SIGNAL \ADC_SAR_1:Net_207_6\ : bit;
SIGNAL \ADC_SAR_1:Net_207_5\ : bit;
SIGNAL \ADC_SAR_1:Net_207_4\ : bit;
SIGNAL \ADC_SAR_1:Net_207_3\ : bit;
SIGNAL \ADC_SAR_1:Net_207_2\ : bit;
SIGNAL \ADC_SAR_1:Net_207_1\ : bit;
SIGNAL \ADC_SAR_1:Net_207_0\ : bit;
TERMINAL \ADC_SAR_1:Net_209\ : bit;
TERMINAL Net_479 : bit;
TERMINAL \ADC_SAR_1:Net_255\ : bit;
TERMINAL \ADC_SAR_1:Net_368\ : bit;
SIGNAL \ADC_SAR_1:Net_381\ : bit;
SIGNAL tmpOE__MIC_IN_net_0 : bit;
SIGNAL tmpFB_0__MIC_IN_net_0 : bit;
SIGNAL tmpIO_0__MIC_IN_net_0 : bit;
TERMINAL tmpSIOVREF__MIC_IN_net_0 : bit;
SIGNAL tmpINTERRUPT_0__MIC_IN_net_0 : bit;
SIGNAL tmpOE__MIC_GND_net_0 : bit;
SIGNAL tmpFB_0__MIC_GND_net_0 : bit;
SIGNAL tmpIO_0__MIC_GND_net_0 : bit;
TERMINAL tmpSIOVREF__MIC_GND_net_0 : bit;
SIGNAL tmpINTERRUPT_0__MIC_GND_net_0 : bit;
SIGNAL Net_10 : bit;
SIGNAL Net_488 : bit;
SIGNAL \Timer_1:Net_260\ : bit;
SIGNAL Net_489 : bit;
SIGNAL \Timer_1:Net_55\ : bit;
SIGNAL Net_657 : bit;
SIGNAL \Timer_1:Net_53\ : bit;
SIGNAL \Timer_1:TimerUDB:ClockOutFromEnBlock\ : bit;
SIGNAL \Timer_1:TimerUDB:Clk_Ctl_i\ : bit;
SIGNAL \Timer_1:TimerUDB:control_7\ : bit;
SIGNAL \Timer_1:TimerUDB:control_6\ : bit;
SIGNAL \Timer_1:TimerUDB:control_5\ : bit;
SIGNAL \Timer_1:TimerUDB:control_4\ : bit;
SIGNAL \Timer_1:TimerUDB:control_3\ : bit;
SIGNAL \Timer_1:TimerUDB:control_2\ : bit;
SIGNAL \Timer_1:TimerUDB:control_1\ : bit;
SIGNAL \Timer_1:TimerUDB:control_0\ : bit;
SIGNAL \Timer_1:TimerUDB:ctrl_enable\ : bit;
SIGNAL \Timer_1:TimerUDB:ctrl_ten\ : bit;
SIGNAL \Timer_1:TimerUDB:ctrl_cmode_1\ : bit;
SIGNAL \Timer_1:TimerUDB:ctrl_cmode_0\ : bit;
SIGNAL \Timer_1:TimerUDB:ctrl_tmode_1\ : bit;
SIGNAL \Timer_1:TimerUDB:ctrl_tmode_0\ : bit;
SIGNAL \Timer_1:TimerUDB:ctrl_ic_1\ : bit;
SIGNAL \Timer_1:TimerUDB:ctrl_ic_0\ : bit;
SIGNAL \Timer_1:TimerUDB:fifo_load_polarized\ : bit;
SIGNAL \Timer_1:TimerUDB:capture_last\ : bit;
SIGNAL \Timer_1:TimerUDB:capt_fifo_load\ : bit;
SIGNAL \Timer_1:TimerUDB:timer_enable\ : bit;
SIGNAL \Timer_1:TimerUDB:run_mode\ : bit;
SIGNAL \Timer_1:TimerUDB:hwEnable\ : bit;
SIGNAL \Timer_1:TimerUDB:status_tc\ : bit;
SIGNAL \Timer_1:TimerUDB:trigger_enable\ : bit;
SIGNAL \Timer_1:TimerUDB:per_zero\ : bit;
SIGNAL \Timer_1:TimerUDB:tc_i\ : bit;
SIGNAL \Timer_1:TimerUDB:tc_reg_i\ : bit;
SIGNAL \Timer_1:TimerUDB:hwEnable_reg\ : bit;
SIGNAL \Timer_1:TimerUDB:capture_out_reg_i\ : bit;
SIGNAL Net_493 : bit;
SIGNAL \Timer_1:TimerUDB:capt_fifo_load_int\ : bit;
SIGNAL \Timer_1:TimerUDB:runmode_enable\ : bit;
SIGNAL \Timer_1:TimerUDB:trig_reg\ : bit;
SIGNAL \Timer_1:TimerUDB:status_6\ : bit;
SIGNAL \Timer_1:TimerUDB:status_5\ : bit;
SIGNAL \Timer_1:TimerUDB:status_4\ : bit;
SIGNAL \Timer_1:TimerUDB:status_0\ : bit;
SIGNAL \Timer_1:TimerUDB:status_1\ : bit;
SIGNAL \Timer_1:TimerUDB:status_2\ : bit;
SIGNAL \Timer_1:TimerUDB:fifo_full\ : bit;
SIGNAL \Timer_1:TimerUDB:status_3\ : bit;
SIGNAL \Timer_1:TimerUDB:fifo_nempty\ : bit;
SIGNAL \Timer_1:TimerUDB:cs_addr_2\ : bit;
SIGNAL \Timer_1:TimerUDB:cs_addr_1\ : bit;
SIGNAL \Timer_1:TimerUDB:cs_addr_0\ : bit;
SIGNAL \Timer_1:TimerUDB:zeros_3\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce0_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce0_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl0_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl0_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:nc0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff0_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff0_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce1_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce1_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl1_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl1_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:z1_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:z1_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff1_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff1_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ov_msb_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ov_msb_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:co_msb_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:co_msb_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmsb_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cmsb_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:so_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:so_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:nc6\ : bit;
SIGNAL \Timer_1:TimerUDB:nc8\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce0_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl0_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:z0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:z0_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff0_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce1_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl1_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:z1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:z1_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff1_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ov_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ov_msb_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:co_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:co_msb_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmsb_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cmsb_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:so_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:so_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f0_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f0_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f0_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f0_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:carry0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:sh_right0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:sh_left0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:msb0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_eq0_1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_eq0_0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_lt0_1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_lt0_0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_zero0_1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_zero0_0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_ff0_1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_ff0_0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cap0_1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cap0_0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cfb0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce0_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce0_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl0_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl0_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:nc1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff0_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff0_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce1_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce1_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl1_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl1_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:z1_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:z1_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff1_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff1_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ov_msb_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ov_msb_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:co_msb_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:co_msb_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmsb_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cmsb_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:so_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:so_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:nc5\ : bit;
SIGNAL \Timer_1:TimerUDB:nc7\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce0_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl0_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:z0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:z0_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff0_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce1_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl1_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:z1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:z1_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff1_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ov_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ov_msb_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:co_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:co_msb_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmsb_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cmsb_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:so_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:so_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f0_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f0_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f0_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f0_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:carry1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:sh_right1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:sh_left1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:msb1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_eq1_1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_eq1_0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_lt1_1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_lt1_0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_zero1_1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_zero1_0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_ff1_1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmp_ff1_0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cap1_1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cap1_0\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cfb1\ : bit;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce0_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce0_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl0_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl0_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff0_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff0_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce1_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce1_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl1_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl1_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:z1_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:z1_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff1_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff1_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ov_msb_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ov_msb_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:co_msb_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:co_msb_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmsb_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cmsb_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:so_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:so_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce0_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce0_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl0_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl0_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:z0_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:z0_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff0_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff0_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ce1_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ce1_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cl1_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cl1_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:z1_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:z1_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ff1_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ff1_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:ov_msb_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:ov_msb_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:co_msb_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:co_msb_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:cmsb_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:cmsb_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:so_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:so_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f0_bus_stat_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f0_bus_stat_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f0_blk_stat_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f0_blk_stat_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_bus_stat_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_reg_2\ : bit;
ATTRIBUTE port_state_att of \Timer_1:TimerUDB:sT24:timerdp:f1_blk_stat_reg_2\:SIGNAL IS 2;
SIGNAL \Timer_1:Net_102\ : bit;
SIGNAL \Timer_1:Net_266\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_enable\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_is_active\ : bit;
ATTRIBUTE soft of \UI_ADC:AMuxHw_2_Decoder_is_active\:SIGNAL IS '1';
SIGNAL \UI_ADC:cmp_vv_vv_MODGEN_1\ : bit;
SIGNAL \UI_ADC:clock\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_5\ : bit;
SIGNAL \UI_ADC:ch_addr_5\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_4\ : bit;
SIGNAL \UI_ADC:ch_addr_4\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_3\ : bit;
SIGNAL \UI_ADC:ch_addr_3\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_2\ : bit;
SIGNAL \UI_ADC:ch_addr_2\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_1\ : bit;
SIGNAL \UI_ADC:ch_addr_1\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_0\ : bit;
SIGNAL \UI_ADC:ch_addr_0\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_0\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_1\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_2\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_3\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_4\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_5\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_6\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_7\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_8\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_9\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_10\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_11\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_12\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_13\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_14\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_15\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_16\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_17\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_18\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_19\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_20\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_21\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_22\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_23\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_24\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_25\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_26\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_27\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_28\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_29\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_30\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_31\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_32\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_33\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_34\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_35\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_36\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_37\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_38\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_39\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_40\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_41\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_42\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_43\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_44\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_45\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_46\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_47\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_48\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_49\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_50\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_51\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_52\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_53\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_54\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_55\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_56\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_57\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_58\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_59\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_60\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_61\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_62\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_63\ : bit;
TERMINAL Net_601 : bit;
TERMINAL Net_600 : bit;
TERMINAL Net_599 : bit;
TERMINAL Net_598 : bit;
TERMINAL Net_597 : bit;
TERMINAL Net_596 : bit;
TERMINAL Net_595 : bit;
TERMINAL Net_594 : bit;
TERMINAL Net_593 : bit;
TERMINAL Net_592 : bit;
TERMINAL Net_591 : bit;
TERMINAL Net_590 : bit;
TERMINAL Net_589 : bit;
TERMINAL Net_588 : bit;
TERMINAL Net_587 : bit;
TERMINAL Net_586 : bit;
TERMINAL Net_585 : bit;
TERMINAL Net_583 : bit;
TERMINAL Net_581 : bit;
TERMINAL Net_580 : bit;
TERMINAL Net_578 : bit;
TERMINAL Net_576 : bit;
TERMINAL Net_575 : bit;
TERMINAL Net_573 : bit;
TERMINAL Net_571 : bit;
TERMINAL Net_570 : bit;
TERMINAL Net_568 : bit;
TERMINAL Net_566 : bit;
TERMINAL Net_565 : bit;
TERMINAL Net_563 : bit;
TERMINAL Net_561 : bit;
TERMINAL Net_560 : bit;
TERMINAL Net_558 : bit;
TERMINAL Net_556 : bit;
TERMINAL Net_555 : bit;
TERMINAL Net_553 : bit;
TERMINAL Net_551 : bit;
TERMINAL Net_550 : bit;
TERMINAL Net_548 : bit;
TERMINAL Net_546 : bit;
TERMINAL Net_545 : bit;
TERMINAL Net_543 : bit;
TERMINAL Net_541 : bit;
TERMINAL Net_540 : bit;
TERMINAL Net_538 : bit;
TERMINAL Net_536 : bit;
TERMINAL Net_535 : bit;
TERMINAL Net_533 : bit;
TERMINAL Net_531 : bit;
TERMINAL Net_530 : bit;
TERMINAL Net_528 : bit;
TERMINAL Net_526 : bit;
TERMINAL Net_525 : bit;
TERMINAL Net_523 : bit;
TERMINAL Net_521 : bit;
TERMINAL Net_520 : bit;
TERMINAL Net_518 : bit;
TERMINAL Net_516 : bit;
TERMINAL Net_515 : bit;
TERMINAL Net_513 : bit;
TERMINAL Net_511 : bit;
TERMINAL Net_510 : bit;
TERMINAL Net_508 : bit;
TERMINAL Net_507 : bit;
TERMINAL \UI_ADC:V_single\ : bit;
TERMINAL \UI_ADC:SAR:Net_248\ : bit;
TERMINAL \UI_ADC:SAR:Net_235\ : bit;
SIGNAL \UI_ADC:SAR:vp_ctl_0\ : bit;
SIGNAL \UI_ADC:SAR:vp_ctl_2\ : bit;
SIGNAL \UI_ADC:SAR:vn_ctl_1\ : bit;
SIGNAL \UI_ADC:SAR:vn_ctl_3\ : bit;
SIGNAL \UI_ADC:SAR:vp_ctl_1\ : bit;
SIGNAL \UI_ADC:SAR:vp_ctl_3\ : bit;
SIGNAL \UI_ADC:SAR:vn_ctl_0\ : bit;
SIGNAL \UI_ADC:SAR:vn_ctl_2\ : bit;
SIGNAL \UI_ADC:SAR:Net_188\ : bit;
TERMINAL \UI_ADC:Net_2803\ : bit;
TERMINAL \UI_ADC:SAR:Net_126\ : bit;
TERMINAL \UI_ADC:SAR:Net_215\ : bit;
TERMINAL \UI_ADC:SAR:Net_257\ : bit;
SIGNAL \UI_ADC:SAR:soc\ : bit;
SIGNAL \UI_ADC:SAR:Net_252\ : bit;
SIGNAL Net_505 : bit;
SIGNAL \UI_ADC:SAR:Net_207_11\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_10\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_9\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_8\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_7\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_6\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_5\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_4\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_3\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_2\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_1\ : bit;
SIGNAL \UI_ADC:SAR:Net_207_0\ : bit;
SIGNAL \UI_ADC:Net_3830\ : bit;
TERMINAL \UI_ADC:SAR:Net_209\ : bit;
TERMINAL \UI_ADC:SAR:Net_149\ : bit;
TERMINAL \UI_ADC:SAR:Net_255\ : bit;
TERMINAL \UI_ADC:SAR:Net_368\ : bit;
SIGNAL \UI_ADC:SAR:Net_221\ : bit;
SIGNAL \UI_ADC:SAR:Net_381\ : bit;
SIGNAL \UI_ADC:SAR:Net_376\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:enable\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:control_0\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:load_period\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:control_1\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:sw_soc\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:control_2\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:clk_fin\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:clk_ctrl\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:count_5\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:count_4\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:count_3\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:count_2\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:count_1\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:count_0\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:status_7\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:status_6\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:status_5\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:status_4\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:status_3\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:status_2\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:status_1\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:status_0\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:nrq_edge_detect_reg\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:cnt_enable\ : bit;
SIGNAL \UI_ADC:Net_3710\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:bus_clk_nrq_reg\ : bit;
SIGNAL \UI_ADC:Net_3935\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:nrq_reg\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:nrq_edge_detect\ : bit;
SIGNAL Net_506 : bit;
SIGNAL \UI_ADC:soc_out\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:control_7\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:control_6\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:control_5\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:control_4\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:control_3\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:count_6\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:cnt_tc\ : bit;
SIGNAL \UI_ADC:Net_3874\ : bit;
SIGNAL \UI_ADC:Net_3698\ : bit;
SIGNAL \UI_ADC:nrq\ : bit;
SIGNAL \UI_ADC:Net_3905\ : bit;
SIGNAL \UI_ADC:Net_3867\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newa_5\ : bit;
SIGNAL \UI_ADC:MODIN1_5\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newa_4\ : bit;
SIGNAL \UI_ADC:MODIN1_4\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newa_3\ : bit;
SIGNAL \UI_ADC:MODIN1_3\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newa_2\ : bit;
SIGNAL \UI_ADC:MODIN1_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newa_1\ : bit;
SIGNAL \UI_ADC:MODIN1_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newa_0\ : bit;
SIGNAL \UI_ADC:MODIN1_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newb_5\ : bit;
SIGNAL \UI_ADC:MODIN2_5\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newb_4\ : bit;
SIGNAL \UI_ADC:MODIN2_4\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newb_3\ : bit;
SIGNAL \UI_ADC:MODIN2_3\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newb_2\ : bit;
SIGNAL \UI_ADC:MODIN2_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newb_1\ : bit;
SIGNAL \UI_ADC:MODIN2_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:newb_0\ : bit;
SIGNAL \UI_ADC:MODIN2_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:dataa_5\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:dataa_4\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:dataa_3\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:dataa_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:dataa_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:dataa_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:datab_5\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:datab_4\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:datab_3\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:datab_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:datab_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:datab_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:a_5\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:a_4\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:a_3\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:a_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:a_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:b_5\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:b_4\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:b_3\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:b_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:b_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:eq_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:eq_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:eq_3\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:eq_4\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:eq_5\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:albi_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:agbi_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:lt_3\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:gt_3\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:lt_4\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:gt_4\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:lt_5\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:gt_5\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:lti_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:gti_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:lt_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:gt_1\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:lt_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:gt_2\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:xeq\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:xneq\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:xlt\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:xlte\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:xgt\ : bit;
SIGNAL \UI_ADC:MODULE_1:g1:a0:xgte\ : bit;
SIGNAL \UI_ADC:MODULE_1:lt\ : bit;
ATTRIBUTE port_state_att of \UI_ADC:MODULE_1:lt\:SIGNAL IS 2;
SIGNAL \UI_ADC:MODULE_1:gt\ : bit;
ATTRIBUTE port_state_att of \UI_ADC:MODULE_1:gt\:SIGNAL IS 2;
SIGNAL \UI_ADC:MODULE_1:gte\ : bit;
ATTRIBUTE port_state_att of \UI_ADC:MODULE_1:gte\:SIGNAL IS 2;
SIGNAL \UI_ADC:MODULE_1:lte\ : bit;
ATTRIBUTE port_state_att of \UI_ADC:MODULE_1:lte\:SIGNAL IS 2;
SIGNAL \UI_ADC:MODULE_1:neq\ : bit;
ATTRIBUTE port_state_att of \UI_ADC:MODULE_1:neq\:SIGNAL IS 2;
SIGNAL Net_12 : bit;
SIGNAL Net_604 : bit;
SIGNAL \UI_TIMER:Net_260\ : bit;
SIGNAL \UI_TIMER:Net_266\ : bit;
SIGNAL \UI_TIMER:Net_51\ : bit;
SIGNAL \UI_TIMER:Net_261\ : bit;
SIGNAL \UI_TIMER:Net_57\ : bit;
SIGNAL Net_606 : bit;
SIGNAL Net_615 : bit;
SIGNAL \UI_TIMER:Net_102\ : bit;
SIGNAL tmpOE__POT_IN_KEY_net_0 : bit;
SIGNAL tmpFB_0__POT_IN_KEY_net_0 : bit;
SIGNAL tmpIO_0__POT_IN_KEY_net_0 : bit;
TERMINAL tmpSIOVREF__POT_IN_KEY_net_0 : bit;
SIGNAL tmpINTERRUPT_0__POT_IN_KEY_net_0 : bit;
SIGNAL tmpOE__POT_IN_SCALE_net_0 : bit;
SIGNAL tmpFB_0__POT_IN_SCALE_net_0 : bit;
SIGNAL tmpIO_0__POT_IN_SCALE_net_0 : bit;
TERMINAL tmpSIOVREF__POT_IN_SCALE_net_0 : bit;
SIGNAL tmpINTERRUPT_0__POT_IN_SCALE_net_0 : bit;
SIGNAL \UART:Net_61\ : bit;
SIGNAL \UART:BUART:clock_op\ : bit;
SIGNAL \UART:BUART:reset_reg\ : bit;
SIGNAL \UART:BUART:tx_hd_send_break\ : bit;
SIGNAL \UART:BUART:HalfDuplexSend\ : bit;
SIGNAL \UART:BUART:FinalParityType_1\ : bit;
SIGNAL \UART:BUART:FinalParityType_0\ : bit;
SIGNAL \UART:BUART:FinalAddrMode_2\ : bit;
SIGNAL \UART:BUART:FinalAddrMode_1\ : bit;
SIGNAL \UART:BUART:FinalAddrMode_0\ : bit;
SIGNAL \UART:BUART:tx_ctrl_mark\ : bit;
SIGNAL \UART:BUART:reset_sr\ : bit;
SIGNAL \UART:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_625 : bit;
SIGNAL \UART:BUART:txn\ : bit;
SIGNAL Net_631 : bit;
SIGNAL \UART:BUART:tx_interrupt_out\ : bit;
SIGNAL Net_632 : bit;
SIGNAL \UART:BUART:tx_state_1\ : bit;
SIGNAL \UART:BUART:tx_state_0\ : bit;
SIGNAL \UART:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \UART:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART:BUART:tx_shift_out\ : bit;
SIGNAL \UART:BUART:tx_fifo_notfull\ : bit;
SIGNAL \UART:BUART:tx_fifo_empty\ : bit;
SIGNAL \UART:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:counter_load_not\ : bit;
SIGNAL \UART:BUART:tx_state_2\ : bit;
SIGNAL \UART:BUART:tx_bitclk_dp\ : bit;
SIGNAL \UART:BUART:tx_counter_dp\ : bit;
SIGNAL \UART:BUART:sc_out_7\ : bit;
SIGNAL \UART:BUART:sc_out_6\ : bit;
SIGNAL \UART:BUART:sc_out_5\ : bit;
SIGNAL \UART:BUART:sc_out_4\ : bit;
SIGNAL \UART:BUART:sc_out_3\ : bit;
SIGNAL \UART:BUART:sc_out_2\ : bit;
SIGNAL \UART:BUART:sc_out_1\ : bit;
SIGNAL \UART:BUART:sc_out_0\ : bit;
SIGNAL \UART:BUART:tx_counter_tc\ : bit;
SIGNAL \UART:BUART:tx_status_6\ : bit;
SIGNAL \UART:BUART:tx_status_5\ : bit;
SIGNAL \UART:BUART:tx_status_4\ : bit;
SIGNAL \UART:BUART:tx_status_0\ : bit;
SIGNAL \UART:BUART:tx_status_1\ : bit;
SIGNAL \UART:BUART:tx_status_2\ : bit;
SIGNAL \UART:BUART:tx_status_3\ : bit;
SIGNAL Net_627 : bit;
SIGNAL \UART:BUART:tx_bitclk\ : bit;
SIGNAL \UART:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \UART:BUART:tx_mark\ : bit;
SIGNAL \UART:BUART:tx_parity_bit\ : bit;
SIGNAL tmpOE__Tx_1_net_0 : bit;
SIGNAL tmpFB_0__Tx_1_net_0 : bit;
SIGNAL tmpIO_0__Tx_1_net_0 : bit;
TERMINAL tmpSIOVREF__Tx_1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Tx_1_net_0 : bit;
SIGNAL tmpOE__SDA_1_net_0 : bit;
SIGNAL tmpFB_0__SDA_1_net_0 : bit;
SIGNAL Net_34 : bit;
TERMINAL tmpSIOVREF__SDA_1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__SDA_1_net_0 : bit;
SIGNAL tmpOE__SCL_1_net_0 : bit;
SIGNAL tmpFB_0__SCL_1_net_0 : bit;
SIGNAL Net_35 : bit;
TERMINAL tmpSIOVREF__SCL_1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__SCL_1_net_0 : bit;
SIGNAL \I2C_CharLCD:sda_x_wire\ : bit;
SIGNAL \I2C_CharLCD:Net_643_1\ : bit;
SIGNAL \I2C_CharLCD:Net_697\ : bit;
SIGNAL \I2C_CharLCD:bus_clk\ : bit;
SIGNAL \I2C_CharLCD:Net_1109_0\ : bit;
SIGNAL \I2C_CharLCD:Net_1109_1\ : bit;
SIGNAL \I2C_CharLCD:Net_643_0\ : bit;
SIGNAL \I2C_CharLCD:Net_643_2\ : bit;
SIGNAL \I2C_CharLCD:scl_x_wire\ : bit;
SIGNAL \I2C_CharLCD:Net_969\ : bit;
SIGNAL \I2C_CharLCD:Net_968\ : bit;
SIGNAL \I2C_CharLCD:udb_clk\ : bit;
SIGNAL Net_650 : bit;
SIGNAL \I2C_CharLCD:Net_973\ : bit;
SIGNAL Net_651 : bit;
SIGNAL \I2C_CharLCD:Net_974\ : bit;
SIGNAL \I2C_CharLCD:scl_yfb\ : bit;
SIGNAL \I2C_CharLCD:sda_yfb\ : bit;
SIGNAL \I2C_CharLCD:tmpOE__Bufoe_scl_net_0\ : bit;
SIGNAL \I2C_CharLCD:tmpOE__Bufoe_sda_net_0\ : bit;
SIGNAL \I2C_CharLCD:timeout_clk\ : bit;
SIGNAL Net_656 : bit;
SIGNAL \I2C_CharLCD:Net_975\ : bit;
SIGNAL Net_654 : bit;
SIGNAL Net_655 : bit;
SIGNAL \MIDI1_UART:BUART:reset_reg\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:txn\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_1\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_0\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_2\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_bitclk\\D\ : bit;
SIGNAL Net_320D : bit;
SIGNAL \MIDI1_UART:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_mark\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_1\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_0\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_3\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_2\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_bitclk\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_break_status\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_address_detected\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_last\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:reset_reg\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:txn\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_state_1\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_state_0\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_state_2\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_bitclk\\D\ : bit;
SIGNAL Net_330D : bit;
SIGNAL \MIDI2_UART:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_mark\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_state_1\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_state_0\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_state_3\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_state_2\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_bitclk\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_break_status\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_address_detected\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_last\\D\ : bit;
SIGNAL \MIDI2_UART:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \Timer_1:TimerUDB:capture_last\\D\ : bit;
SIGNAL \Timer_1:TimerUDB:tc_reg_i\\D\ : bit;
SIGNAL \Timer_1:TimerUDB:hwEnable_reg\\D\ : bit;
SIGNAL \Timer_1:TimerUDB:capture_out_reg_i\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_5\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_4\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_3\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_2\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_1\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_old_id_0\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_0\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_1\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_2\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_3\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_4\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_5\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_6\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_7\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_8\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_9\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_10\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_11\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_12\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_13\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_14\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_15\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_16\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_17\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_18\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_19\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_20\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_21\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_22\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_23\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_24\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_25\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_26\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_27\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_28\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_29\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_30\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_31\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_32\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_33\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_34\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_35\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_36\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_37\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_38\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_39\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_40\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_41\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_42\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_43\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_44\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_45\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_46\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_47\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_48\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_49\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_50\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_51\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_52\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_53\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_54\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_55\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_56\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_57\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_58\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_59\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_60\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_61\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_62\\D\ : bit;
SIGNAL \UI_ADC:AMuxHw_2_Decoder_one_hot_63\\D\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:nrq_edge_detect_reg\\D\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:bus_clk_nrq_reg\\D\ : bit;
SIGNAL \UI_ADC:bSAR_SEQ:nrq_reg\\D\ : bit;
SIGNAL \UART:BUART:reset_reg\\D\ : bit;
SIGNAL \UART:BUART:txn\\D\ : bit;
SIGNAL \UART:BUART:tx_state_1\\D\ : bit;
SIGNAL \UART:BUART:tx_state_0\\D\ : bit;
SIGNAL \UART:BUART:tx_state_2\\D\ : bit;
SIGNAL Net_627D : bit;
SIGNAL \UART:BUART:tx_bitclk\\D\ : bit;
SIGNAL \UART:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \UART:BUART:tx_mark\\D\ : bit;
SIGNAL \UART:BUART:tx_parity_bit\\D\ : bit;
BEGIN

zero <=  ('0') ;

tmpOE__MIDI_PWR_net_0 <=  ('1') ;

\MIDI1_UART:BUART:counter_load_not\ <= ((not \MIDI1_UART:BUART:tx_bitclk\ and \MIDI1_UART:BUART:tx_state_2\)
	OR \MIDI1_UART:BUART:tx_state_0\
	OR \MIDI1_UART:BUART:tx_state_1\);

\MIDI1_UART:BUART:tx_bitclk_enable_pre\ <= (not \MIDI1_UART:BUART:tx_bitclk_dp\);

\MIDI1_UART:BUART:tx_status_0\ <= ((not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_fifo_empty\ and \MIDI1_UART:BUART:tx_state_2\ and \MIDI1_UART:BUART:tx_bitclk\));

\MIDI1_UART:BUART:tx_status_2\ <= (not \MIDI1_UART:BUART:tx_fifo_notfull\);

\MIDI1_UART:BUART:tx_mark\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:tx_mark\));

\MIDI1_UART:BUART:tx_state_2\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_2\ and not \MIDI1_UART:BUART:tx_counter_dp\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_bitclk\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_2\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_bitclk\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_bitclk\ and \MIDI1_UART:BUART:tx_state_2\));

\MIDI1_UART:BUART:tx_state_1\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_state_2\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_bitclk\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_counter_dp\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_bitclk\ and \MIDI1_UART:BUART:tx_state_1\));

\MIDI1_UART:BUART:tx_state_0\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_fifo_empty\ and not \MIDI1_UART:BUART:tx_state_2\ and not \MIDI1_UART:BUART:tx_bitclk\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_state_0\ and not \MIDI1_UART:BUART:tx_fifo_empty\ and \MIDI1_UART:BUART:tx_bitclk\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_fifo_empty\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_bitclk\ and \MIDI1_UART:BUART:tx_state_0\));

\MIDI1_UART:BUART:txn\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_0\ and not \MIDI1_UART:BUART:tx_shift_out\ and not \MIDI1_UART:BUART:tx_state_2\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_bitclk\ and \MIDI1_UART:BUART:tx_counter_dp\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_state_2\ and not \MIDI1_UART:BUART:tx_bitclk\ and \MIDI1_UART:BUART:tx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_shift_out\ and not \MIDI1_UART:BUART:tx_state_2\ and \MIDI1_UART:BUART:tx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_bitclk\ and Net_400 and \MIDI1_UART:BUART:tx_state_1\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and Net_400 and \MIDI1_UART:BUART:tx_state_2\));

\MIDI1_UART:BUART:tx_parity_bit\\D\ <= ((not \MIDI1_UART:BUART:tx_state_0\ and Net_400 and \MIDI1_UART:BUART:tx_parity_bit\)
	OR \MIDI1_UART:BUART:tx_parity_bit\);

\MIDI1_UART:BUART:rx_counter_load\ <= ((not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:rx_state_2\));

\MIDI1_UART:BUART:rx_bitclk_pre\ <= ((not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\ and not \MIDI1_UART:BUART:rx_count_0\));

\MIDI1_UART:BUART:rx_state_stop1_reg\\D\ <= (not \MIDI1_UART:BUART:rx_state_2\
	OR not \MIDI1_UART:BUART:rx_state_3\
	OR \MIDI1_UART:BUART:rx_state_0\
	OR \MIDI1_UART:BUART:rx_state_1\);

\MIDI1_UART:BUART:rx_status_4\ <= ((\MIDI1_UART:BUART:rx_load_fifo\ and \MIDI1_UART:BUART:rx_fifofull\));

\MIDI1_UART:BUART:rx_status_5\ <= ((\MIDI1_UART:BUART:rx_fifonotempty\ and \MIDI1_UART:BUART:rx_state_stop1_reg\));

\MIDI1_UART:BUART:rx_stop_bit_error\\D\ <= ((not Net_417 and not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_3\ and \MIDI1_UART:BUART:rx_state_2\));

\MIDI1_UART:BUART:rx_load_fifo\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:rx_state_2\ and \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:rx_state_2\ and not MODIN3_6 and not MODIN3_4 and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:rx_state_2\ and not MODIN3_6 and not MODIN3_5 and \MIDI1_UART:BUART:rx_state_0\));

\MIDI1_UART:BUART:rx_state_3\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_2\ and not MODIN3_6 and not MODIN3_4 and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_2\ and not MODIN3_6 and not MODIN3_5 and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_1\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_2\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_state_3\));

\MIDI1_UART:BUART:rx_state_2\\D\ <= ((not Net_417 and not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:rx_state_2\ and \MIDI1_UART:BUART:rx_last\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:rx_state_2\ and \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and not MODIN3_6 and not MODIN3_4 and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and not MODIN3_6 and not MODIN3_5 and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_1\ and \MIDI1_UART:BUART:rx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_state_2\));

\MIDI1_UART:BUART:rx_state_1\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_1\));

\MIDI1_UART:BUART:rx_state_0\\D\ <= ((not Net_417 and not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and MODIN3_5 and MODIN3_4)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and MODIN3_6)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_1\ and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_state_2\));

\MIDI1_UART:BUART:rx_last\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and Net_417));

\MIDI1_UART:BUART:rx_address_detected\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_address_detected\));

\MIDI1_UART:BUART:rx_parity_bit\\D\ <= ((not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:rx_state_2\ and \MIDI1_UART:BUART:rx_parity_bit\)
	OR (Net_417 and \MIDI1_UART:BUART:rx_state_2\ and \MIDI1_UART:BUART:rx_parity_bit\)
	OR \MIDI1_UART:BUART:rx_parity_bit\);

\MIDI2_UART:BUART:counter_load_not\ <= ((not \MIDI2_UART:BUART:tx_bitclk\ and \MIDI2_UART:BUART:tx_state_2\)
	OR \MIDI2_UART:BUART:tx_state_0\
	OR \MIDI2_UART:BUART:tx_state_1\);

\MIDI2_UART:BUART:tx_bitclk_enable_pre\ <= (not \MIDI2_UART:BUART:tx_bitclk_dp\);

\MIDI2_UART:BUART:tx_status_0\ <= ((not \MIDI2_UART:BUART:tx_state_1\ and not \MIDI2_UART:BUART:tx_state_0\ and \MIDI2_UART:BUART:tx_fifo_empty\ and \MIDI2_UART:BUART:tx_state_2\ and \MIDI2_UART:BUART:tx_bitclk\));

\MIDI2_UART:BUART:tx_status_2\ <= (not \MIDI2_UART:BUART:tx_fifo_notfull\);

\MIDI2_UART:BUART:tx_mark\\D\ <= ((not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:tx_mark\));

\MIDI2_UART:BUART:tx_state_2\\D\ <= ((not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_2\ and not \MIDI2_UART:BUART:tx_counter_dp\ and \MIDI2_UART:BUART:tx_state_1\ and \MIDI2_UART:BUART:tx_bitclk\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_2\ and \MIDI2_UART:BUART:tx_state_1\ and \MIDI2_UART:BUART:tx_state_0\ and \MIDI2_UART:BUART:tx_bitclk\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_1\ and \MIDI2_UART:BUART:tx_state_0\ and \MIDI2_UART:BUART:tx_state_2\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_0\ and \MIDI2_UART:BUART:tx_state_1\ and \MIDI2_UART:BUART:tx_state_2\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_bitclk\ and \MIDI2_UART:BUART:tx_state_2\));

\MIDI2_UART:BUART:tx_state_1\\D\ <= ((not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_1\ and not \MIDI2_UART:BUART:tx_state_2\ and \MIDI2_UART:BUART:tx_state_0\ and \MIDI2_UART:BUART:tx_bitclk\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_0\ and \MIDI2_UART:BUART:tx_state_1\ and \MIDI2_UART:BUART:tx_counter_dp\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_0\ and \MIDI2_UART:BUART:tx_state_1\ and \MIDI2_UART:BUART:tx_state_2\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_bitclk\ and \MIDI2_UART:BUART:tx_state_1\));

\MIDI2_UART:BUART:tx_state_0\\D\ <= ((not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_1\ and not \MIDI2_UART:BUART:tx_fifo_empty\ and not \MIDI2_UART:BUART:tx_state_2\ and not \MIDI2_UART:BUART:tx_bitclk\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_1\ and not \MIDI2_UART:BUART:tx_state_0\ and not \MIDI2_UART:BUART:tx_fifo_empty\ and \MIDI2_UART:BUART:tx_bitclk\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_fifo_empty\ and \MIDI2_UART:BUART:tx_state_0\ and \MIDI2_UART:BUART:tx_state_2\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_1\ and \MIDI2_UART:BUART:tx_state_0\ and \MIDI2_UART:BUART:tx_state_2\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_bitclk\ and \MIDI2_UART:BUART:tx_state_0\));

\MIDI2_UART:BUART:txn\\D\ <= ((not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_0\ and not \MIDI2_UART:BUART:tx_shift_out\ and not \MIDI2_UART:BUART:tx_state_2\ and \MIDI2_UART:BUART:tx_state_1\ and \MIDI2_UART:BUART:tx_bitclk\ and \MIDI2_UART:BUART:tx_counter_dp\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_1\ and not \MIDI2_UART:BUART:tx_state_2\ and not \MIDI2_UART:BUART:tx_bitclk\ and \MIDI2_UART:BUART:tx_state_0\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_state_1\ and not \MIDI2_UART:BUART:tx_shift_out\ and not \MIDI2_UART:BUART:tx_state_2\ and \MIDI2_UART:BUART:tx_state_0\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:tx_bitclk\ and Net_406 and \MIDI2_UART:BUART:tx_state_1\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and Net_406 and \MIDI2_UART:BUART:tx_state_2\));

\MIDI2_UART:BUART:tx_parity_bit\\D\ <= ((not \MIDI2_UART:BUART:tx_state_0\ and Net_406 and \MIDI2_UART:BUART:tx_parity_bit\)
	OR \MIDI2_UART:BUART:tx_parity_bit\);

\MIDI2_UART:BUART:rx_counter_load\ <= ((not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_0\ and not \MIDI2_UART:BUART:rx_state_3\ and not \MIDI2_UART:BUART:rx_state_2\));

\MIDI2_UART:BUART:rx_bitclk_pre\ <= ((not \MIDI2_UART:BUART:rx_count_2\ and not \MIDI2_UART:BUART:rx_count_1\ and not \MIDI2_UART:BUART:rx_count_0\));

\MIDI2_UART:BUART:rx_state_stop1_reg\\D\ <= (not \MIDI2_UART:BUART:rx_state_2\
	OR not \MIDI2_UART:BUART:rx_state_3\
	OR \MIDI2_UART:BUART:rx_state_0\
	OR \MIDI2_UART:BUART:rx_state_1\);

\MIDI2_UART:BUART:rx_status_4\ <= ((\MIDI2_UART:BUART:rx_load_fifo\ and \MIDI2_UART:BUART:rx_fifofull\));

\MIDI2_UART:BUART:rx_status_5\ <= ((\MIDI2_UART:BUART:rx_fifonotempty\ and \MIDI2_UART:BUART:rx_state_stop1_reg\));

\MIDI2_UART:BUART:rx_stop_bit_error\\D\ <= ((not Net_418 and not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_0\ and \MIDI2_UART:BUART:rx_bitclk_enable\ and \MIDI2_UART:BUART:rx_state_3\ and \MIDI2_UART:BUART:rx_state_2\));

\MIDI2_UART:BUART:rx_load_fifo\\D\ <= ((not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_0\ and not \MIDI2_UART:BUART:rx_state_2\ and \MIDI2_UART:BUART:rx_bitclk_enable\ and \MIDI2_UART:BUART:rx_state_3\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_3\ and not \MIDI2_UART:BUART:rx_state_2\ and not \MIDI2_UART:BUART:rx_count_6\ and not \MIDI2_UART:BUART:rx_count_4\ and \MIDI2_UART:BUART:rx_state_0\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_3\ and not \MIDI2_UART:BUART:rx_state_2\ and not \MIDI2_UART:BUART:rx_count_6\ and not \MIDI2_UART:BUART:rx_count_5\ and \MIDI2_UART:BUART:rx_state_0\));

\MIDI2_UART:BUART:rx_state_3\\D\ <= ((not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_2\ and not \MIDI2_UART:BUART:rx_count_6\ and not \MIDI2_UART:BUART:rx_count_4\ and \MIDI2_UART:BUART:rx_state_0\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_2\ and not \MIDI2_UART:BUART:rx_count_6\ and not \MIDI2_UART:BUART:rx_count_5\ and \MIDI2_UART:BUART:rx_state_0\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_bitclk_enable\ and \MIDI2_UART:BUART:rx_state_3\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_state_1\ and \MIDI2_UART:BUART:rx_state_3\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_2\ and \MIDI2_UART:BUART:rx_state_3\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_state_0\ and \MIDI2_UART:BUART:rx_state_3\));

\MIDI2_UART:BUART:rx_state_2\\D\ <= ((not Net_418 and not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_0\ and not \MIDI2_UART:BUART:rx_state_3\ and not \MIDI2_UART:BUART:rx_state_2\ and \MIDI2_UART:BUART:rx_last\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_0\ and not \MIDI2_UART:BUART:rx_state_2\ and \MIDI2_UART:BUART:rx_bitclk_enable\ and \MIDI2_UART:BUART:rx_state_3\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_3\ and not \MIDI2_UART:BUART:rx_count_6\ and not \MIDI2_UART:BUART:rx_count_4\ and \MIDI2_UART:BUART:rx_state_0\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_3\ and not \MIDI2_UART:BUART:rx_count_6\ and not \MIDI2_UART:BUART:rx_count_5\ and \MIDI2_UART:BUART:rx_state_0\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_bitclk_enable\ and \MIDI2_UART:BUART:rx_state_2\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_state_1\ and \MIDI2_UART:BUART:rx_state_2\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_state_0\ and \MIDI2_UART:BUART:rx_state_2\));

\MIDI2_UART:BUART:rx_state_1\\D\ <= ((not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_state_1\));

\MIDI2_UART:BUART:rx_state_0\\D\ <= ((not Net_418 and not \MIDI2_UART:BUART:reset_reg\ and not \MIDI2_UART:BUART:rx_state_1\ and not \MIDI2_UART:BUART:rx_state_3\ and \MIDI2_UART:BUART:rx_bitclk_enable\ and \MIDI2_UART:BUART:rx_state_2\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_state_0\ and \MIDI2_UART:BUART:rx_count_5\ and \MIDI2_UART:BUART:rx_count_4\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_state_0\ and \MIDI2_UART:BUART:rx_count_6\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_state_0\ and \MIDI2_UART:BUART:rx_state_3\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_state_1\ and \MIDI2_UART:BUART:rx_state_0\)
	OR (not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_state_0\ and \MIDI2_UART:BUART:rx_state_2\));

\MIDI2_UART:BUART:rx_last\\D\ <= ((not \MIDI2_UART:BUART:reset_reg\ and Net_418));

\MIDI2_UART:BUART:rx_address_detected\\D\ <= ((not \MIDI2_UART:BUART:reset_reg\ and \MIDI2_UART:BUART:rx_address_detected\));

\MIDI2_UART:BUART:rx_parity_bit\\D\ <= ((not \MIDI2_UART:BUART:rx_state_0\ and not \MIDI2_UART:BUART:rx_state_2\ and \MIDI2_UART:BUART:rx_parity_bit\)
	OR (Net_418 and \MIDI2_UART:BUART:rx_state_2\ and \MIDI2_UART:BUART:rx_parity_bit\)
	OR \MIDI2_UART:BUART:rx_parity_bit\);

\Timer_1:TimerUDB:status_tc\ <= ((\Timer_1:TimerUDB:control_7\ and \Timer_1:TimerUDB:per_zero\));

\UI_ADC:AMuxHw_2_Decoder_is_active\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (\UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_0\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_1\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_2\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_3\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_4\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_5\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_6\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_7\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_8\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_9\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_10\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_11\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_12\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_13\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_14\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_15\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_16\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_17\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_18\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_19\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_20\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_21\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_22\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_23\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_24\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_25\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_26\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_27\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_28\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_29\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_30\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_31\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_32\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_33\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_34\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_35\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_36\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_37\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_38\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_39\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_40\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_41\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_42\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_43\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_44\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_45\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_46\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_47\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_48\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_49\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_50\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_51\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_52\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_53\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_54\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_55\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_56\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_57\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_58\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_59\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_60\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_61\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_62\\D\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\));

\UI_ADC:AMuxHw_2_Decoder_one_hot_63\\D\ <= ((\UI_ADC:AMuxHw_2_Decoder_is_active\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\));

\UI_ADC:bSAR_SEQ:cnt_enable\ <= (\UI_ADC:bSAR_SEQ:load_period\
	OR Net_505);

\UI_ADC:bSAR_SEQ:bus_clk_nrq_reg\\D\ <= ((not Net_506 and \UI_ADC:bSAR_SEQ:bus_clk_nrq_reg\)
	OR \UI_ADC:Net_3935\);

\UI_ADC:bSAR_SEQ:nrq_edge_detect\ <= ((not \UI_ADC:bSAR_SEQ:nrq_reg\ and \UI_ADC:bSAR_SEQ:bus_clk_nrq_reg\));

\UI_ADC:MODULE_1:g1:a0:gx:u0:lt_5\ <= ((not \UI_ADC:ch_addr_5\ and not \UI_ADC:ch_addr_4\ and not \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \UI_ADC:ch_addr_4\ and not \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \UI_ADC:ch_addr_5\ and not \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \UI_ADC:ch_addr_3\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \UI_ADC:ch_addr_5\ and not \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\)
	OR (not \UI_ADC:ch_addr_4\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_4\)
	OR (not \UI_ADC:ch_addr_5\ and \UI_ADC:AMuxHw_2_Decoder_old_id_5\));

\UI_ADC:MODULE_1:g1:a0:gx:u0:gt_5\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_5\ and \UI_ADC:ch_addr_4\ and \UI_ADC:ch_addr_3\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_4\ and \UI_ADC:ch_addr_3\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_5\ and \UI_ADC:ch_addr_3\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_3\ and \UI_ADC:ch_addr_3\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_5\ and \UI_ADC:ch_addr_4\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_4\ and \UI_ADC:ch_addr_4\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_5\ and \UI_ADC:ch_addr_5\));

\UI_ADC:MODULE_1:g1:a0:gx:u0:lt_2\ <= ((not \UI_ADC:ch_addr_2\ and not \UI_ADC:ch_addr_1\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \UI_ADC:ch_addr_1\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \UI_ADC:ch_addr_2\ and not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \UI_ADC:ch_addr_0\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \UI_ADC:ch_addr_2\ and not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\)
	OR (not \UI_ADC:ch_addr_1\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_1\)
	OR (not \UI_ADC:ch_addr_2\ and \UI_ADC:AMuxHw_2_Decoder_old_id_2\));

\UI_ADC:MODULE_1:g1:a0:gx:u0:gt_2\ <= ((not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_2\ and \UI_ADC:ch_addr_1\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_1\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_2\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_0\ and \UI_ADC:ch_addr_0\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_2\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and not \UI_ADC:AMuxHw_2_Decoder_old_id_1\ and \UI_ADC:ch_addr_1\)
	OR (not \UI_ADC:AMuxHw_2_Decoder_old_id_2\ and \UI_ADC:ch_addr_2\));

Net_625 <= (not \UART:BUART:txn\);

\UART:BUART:counter_load_not\ <= ((not \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_state_2\)
	OR \UART:BUART:tx_state_0\
	OR \UART:BUART:tx_state_1\);

\UART:BUART:tx_status_0\ <= ((not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_state_0\ and \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_fifo_empty\ and \UART:BUART:tx_state_2\));

\UART:BUART:tx_status_2\ <= (not \UART:BUART:tx_fifo_notfull\);

Net_627D <= ((not \UART:BUART:reset_reg\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:tx_state_0\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:tx_state_1\));

\UART:BUART:tx_bitclk\\D\ <= ((not \UART:BUART:tx_state_2\ and \UART:BUART:tx_bitclk_enable_pre\)
	OR (\UART:BUART:tx_state_0\ and \UART:BUART:tx_bitclk_enable_pre\)
	OR (\UART:BUART:tx_state_1\ and \UART:BUART:tx_bitclk_enable_pre\));

\UART:BUART:tx_mark\\D\ <= ((not \UART:BUART:reset_reg\ and \UART:BUART:tx_mark\));

\UART:BUART:tx_state_2\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_2\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_counter_dp\ and \UART:BUART:tx_bitclk\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_2\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_bitclk\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_state_2\));

\UART:BUART:tx_state_1\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_state_2\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_bitclk\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_2\ and not \UART:BUART:tx_bitclk\ and \UART:BUART:tx_state_1\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_0\ and not \UART:BUART:tx_counter_dp\ and \UART:BUART:tx_state_1\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_2\));

\UART:BUART:tx_state_0\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_fifo_empty\ and \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_state_0\ and not \UART:BUART:tx_fifo_empty\ and not \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_2\ and not \UART:BUART:tx_bitclk\ and \UART:BUART:tx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_fifo_empty\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_2\));

\UART:BUART:txn\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_0\ and not \UART:BUART:tx_shift_out\ and not \UART:BUART:tx_state_2\ and not \UART:BUART:tx_counter_dp\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_bitclk\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_state_2\ and not \UART:BUART:tx_bitclk\ and \UART:BUART:tx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_shift_out\ and not \UART:BUART:tx_state_2\ and \UART:BUART:tx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_bitclk\ and \UART:BUART:txn\ and \UART:BUART:tx_state_1\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:txn\ and \UART:BUART:tx_state_2\));

\UART:BUART:tx_parity_bit\\D\ <= ((not \UART:BUART:tx_state_0\ and \UART:BUART:txn\ and \UART:BUART:tx_parity_bit\)
	OR (not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_state_0\ and \UART:BUART:tx_parity_bit\)
	OR \UART:BUART:tx_parity_bit\);

\SleepTimer:gsRef_1\:cy_gsref_v1_0
	GENERIC MAP(guid=>"0335EFD7-9943-4db5-B556-454A5AD8A118")
	PORT MAP(sig_out=>Net_317);
MIDI_PWR:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"12f75402-8258-4a24-b9e9-c367efce01c5",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"0",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"1",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"",
		ovt_slew_control=>"",
		ovt_hyst_trim=>"",
		input_buffer_sel=>"")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>(tmpFB_0__MIDI_PWR_net_0),
		analog=>(open),
		io=>(tmpIO_0__MIDI_PWR_net_0),
		siovref=>(tmpSIOVREF__MIDI_PWR_net_0),
		annotation=>Net_459,
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MIDI_PWR_net_0);
MIDI_OUT1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"b9e1db07-a07e-4cf5-8771-93eb2ff0ddc0",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"0",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"1",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"",
		ovt_slew_control=>"",
		ovt_hyst_trim=>"",
		input_buffer_sel=>"")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>Net_400,
		fb=>(tmpFB_0__MIDI_OUT1_net_0),
		analog=>(open),
		io=>(tmpIO_0__MIDI_OUT1_net_0),
		siovref=>(tmpSIOVREF__MIDI_OUT1_net_0),
		annotation=>Net_387,
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MIDI_OUT1_net_0);
MIDI_IN1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"6c474820-c2f5-46c6-aa01-7db6a7b6db1f",
		drive_mode=>"010",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"0",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"1",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"",
		ovt_slew_control=>"",
		ovt_hyst_trim=>"",
		input_buffer_sel=>"")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>Net_417,
		analog=>(open),
		io=>(tmpIO_0__MIDI_IN1_net_0),
		siovref=>(tmpSIOVREF__MIDI_IN1_net_0),
		annotation=>Net_416,
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MIDI_IN1_net_0);
\MIDI1_UART:TXInternalInterrupt\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_322);
\MIDI1_UART:RXInternalInterrupt\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_323);
\MIDI1_UART:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_355,
		enable=>tmpOE__MIDI_PWR_net_0,
		clock_out=>\MIDI1_UART:BUART:clock_op\);
\MIDI1_UART:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\MIDI1_UART:BUART:reset_reg\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		cs_addr=>(\MIDI1_UART:BUART:tx_state_1\, \MIDI1_UART:BUART:tx_state_0\, \MIDI1_UART:BUART:tx_bitclk_enable_pre\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\MIDI1_UART:BUART:tx_shift_out\,
		f0_bus_stat=>\MIDI1_UART:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\MIDI1_UART:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\MIDI1_UART:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\MIDI1_UART:BUART:reset_reg\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		cs_addr=>(zero, zero, \MIDI1_UART:BUART:counter_load_not\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>\MIDI1_UART:BUART:tx_bitclk_dp\,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>\MIDI1_UART:BUART:tx_counter_dp\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>(\MIDI1_UART:BUART:sc_out_7\, \MIDI1_UART:BUART:sc_out_6\, \MIDI1_UART:BUART:sc_out_5\, \MIDI1_UART:BUART:sc_out_4\,
			\MIDI1_UART:BUART:sc_out_3\, \MIDI1_UART:BUART:sc_out_2\, \MIDI1_UART:BUART:sc_out_1\, \MIDI1_UART:BUART:sc_out_0\));
\MIDI1_UART:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\MIDI1_UART:BUART:reset_reg\,
		clock=>\MIDI1_UART:BUART:clock_op\,
		status=>(zero, zero, zero, \MIDI1_UART:BUART:tx_fifo_notfull\,
			\MIDI1_UART:BUART:tx_status_2\, \MIDI1_UART:BUART:tx_fifo_empty\, \MIDI1_UART:BUART:tx_status_0\),
		interrupt=>Net_322);
\MIDI1_UART:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\MIDI1_UART:BUART:reset_reg\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		cs_addr=>(\MIDI1_UART:BUART:rx_state_1\, \MIDI1_UART:BUART:rx_state_0\, \MIDI1_UART:BUART:rx_bitclk_enable\),
		route_si=>Net_417,
		route_ci=>zero,
		f0_load=>\MIDI1_UART:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\MIDI1_UART:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\MIDI1_UART:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\MIDI1_UART:BUART:hd_shift_out\,
		f0_bus_stat=>\MIDI1_UART:BUART:rx_fifonotempty\,
		f0_blk_stat=>\MIDI1_UART:BUART:rx_fifofull\,
		f1_bus_stat=>\MIDI1_UART:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\MIDI1_UART:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\MIDI1_UART:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110001",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\MIDI1_UART:BUART:clock_op\,
		reset=>\MIDI1_UART:BUART:reset_reg\,
		load=>\MIDI1_UART:BUART:rx_counter_load\,
		enable=>tmpOE__MIDI_PWR_net_0,
		count=>(MODIN3_6, MODIN3_5, MODIN3_4, MODIN3_3,
			\MIDI1_UART:BUART:rx_count_2\, \MIDI1_UART:BUART:rx_count_1\, \MIDI1_UART:BUART:rx_count_0\),
		tc=>\MIDI1_UART:BUART:rx_count7_tc\);
\MIDI1_UART:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\MIDI1_UART:BUART:reset_reg\,
		clock=>\MIDI1_UART:BUART:clock_op\,
		status=>(zero, \MIDI1_UART:BUART:rx_status_5\, \MIDI1_UART:BUART:rx_status_4\, \MIDI1_UART:BUART:rx_status_3\,
			\MIDI1_UART:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_323);
MIDI_OUT2:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"16e2c6df-bfa9-4d60-8902-0c211b69d05a",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"0",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"1",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"",
		ovt_slew_control=>"",
		ovt_hyst_trim=>"",
		input_buffer_sel=>"")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>Net_406,
		fb=>(tmpFB_0__MIDI_OUT2_net_0),
		analog=>(open),
		io=>(tmpIO_0__MIDI_OUT2_net_0),
		siovref=>(tmpSIOVREF__MIDI_OUT2_net_0),
		annotation=>Net_404,
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MIDI_OUT2_net_0);
MIDI_IN2:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"1425177d-0d0e-4468-8bcc-e638e5509a9b",
		drive_mode=>"010",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"0",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"1",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"",
		ovt_slew_control=>"",
		ovt_hyst_trim=>"",
		input_buffer_sel=>"")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>Net_418,
		analog=>(open),
		io=>(tmpIO_0__MIDI_IN2_net_0),
		siovref=>(tmpSIOVREF__MIDI_IN2_net_0),
		annotation=>Net_457,
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MIDI_IN2_net_0);
\MIDI2_UART:TXInternalInterrupt\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_332);
\MIDI2_UART:RXInternalInterrupt\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_333);
\MIDI2_UART:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_355,
		enable=>tmpOE__MIDI_PWR_net_0,
		clock_out=>\MIDI2_UART:BUART:clock_op\);
\MIDI2_UART:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\MIDI2_UART:BUART:reset_reg\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		cs_addr=>(\MIDI2_UART:BUART:tx_state_1\, \MIDI2_UART:BUART:tx_state_0\, \MIDI2_UART:BUART:tx_bitclk_enable_pre\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\MIDI2_UART:BUART:tx_shift_out\,
		f0_bus_stat=>\MIDI2_UART:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\MIDI2_UART:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\MIDI2_UART:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\MIDI2_UART:BUART:reset_reg\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		cs_addr=>(zero, zero, \MIDI2_UART:BUART:counter_load_not\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>\MIDI2_UART:BUART:tx_bitclk_dp\,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>\MIDI2_UART:BUART:tx_counter_dp\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>(\MIDI2_UART:BUART:sc_out_7\, \MIDI2_UART:BUART:sc_out_6\, \MIDI2_UART:BUART:sc_out_5\, \MIDI2_UART:BUART:sc_out_4\,
			\MIDI2_UART:BUART:sc_out_3\, \MIDI2_UART:BUART:sc_out_2\, \MIDI2_UART:BUART:sc_out_1\, \MIDI2_UART:BUART:sc_out_0\));
\MIDI2_UART:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\MIDI2_UART:BUART:reset_reg\,
		clock=>\MIDI2_UART:BUART:clock_op\,
		status=>(zero, zero, zero, \MIDI2_UART:BUART:tx_fifo_notfull\,
			\MIDI2_UART:BUART:tx_status_2\, \MIDI2_UART:BUART:tx_fifo_empty\, \MIDI2_UART:BUART:tx_status_0\),
		interrupt=>Net_332);
\MIDI2_UART:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\MIDI2_UART:BUART:reset_reg\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		cs_addr=>(\MIDI2_UART:BUART:rx_state_1\, \MIDI2_UART:BUART:rx_state_0\, \MIDI2_UART:BUART:rx_bitclk_enable\),
		route_si=>Net_418,
		route_ci=>zero,
		f0_load=>\MIDI2_UART:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\MIDI2_UART:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\MIDI2_UART:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\MIDI2_UART:BUART:hd_shift_out\,
		f0_bus_stat=>\MIDI2_UART:BUART:rx_fifonotempty\,
		f0_blk_stat=>\MIDI2_UART:BUART:rx_fifofull\,
		f1_bus_stat=>\MIDI2_UART:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\MIDI2_UART:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\MIDI2_UART:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110001",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\MIDI2_UART:BUART:clock_op\,
		reset=>\MIDI2_UART:BUART:reset_reg\,
		load=>\MIDI2_UART:BUART:rx_counter_load\,
		enable=>tmpOE__MIDI_PWR_net_0,
		count=>(\MIDI2_UART:BUART:rx_count_6\, \MIDI2_UART:BUART:rx_count_5\, \MIDI2_UART:BUART:rx_count_4\, \MIDI2_UART:BUART:rx_count_3\,
			\MIDI2_UART:BUART:rx_count_2\, \MIDI2_UART:BUART:rx_count_1\, \MIDI2_UART:BUART:rx_count_0\),
		tc=>\MIDI2_UART:BUART:rx_count7_tc\);
\MIDI2_UART:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\MIDI2_UART:BUART:reset_reg\,
		clock=>\MIDI2_UART:BUART:clock_op\,
		status=>(zero, \MIDI2_UART:BUART:rx_status_5\, \MIDI2_UART:BUART:rx_status_4\, \MIDI2_UART:BUART:rx_status_3\,
			\MIDI2_UART:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_333);
Clock_1:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"cae5798c-7ee3-44d1-9fb6-9cadf8f651f4",
		source_clock_id=>"",
		divisor=>0,
		period=>"4000000000",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_355,
		dig_domain_out=>open);
\USB:ep_0\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USB:ept_int_0\);
\USB:bus_reset\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USB:Net_81\);
\USB:arb_int\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USB:Net_79\);
\USB:ep_2\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USB:ept_int_2\);
\USB:ep_1\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USB:ept_int_1\);
\USB:Clock_vbus\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"207de35d-96fa-4d9c-93e8-b56a5d18b7b9/03f503a7-085a-4304-b786-de885b1c2f21",
		source_clock_id=>"75C2148C-3656-4d8a-846D-0CAE99AB6FF7",
		divisor=>0,
		period=>"0",
		is_direct=>'1',
		is_digital=>'1')
	PORT MAP(clock_out=>\USB:Net_1784\,
		dig_domain_out=>open);
\USB:dp_int\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USB:Net_1010\);
\USB:Dm\:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"207de35d-96fa-4d9c-93e8-b56a5d18b7b9/8b77a6c4-10a0-4390-971c-672353e2a49c",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"NONCONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"0",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"",
		slew_rate=>"0",
		spanning=>'1',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"",
		ovt_slew_control=>"",
		ovt_hyst_trim=>"",
		input_buffer_sel=>"")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>(\USB:tmpFB_0__Dm_net_0\),
		analog=>\USB:Net_597\,
		io=>(\USB:tmpIO_0__Dm_net_0\),
		siovref=>(\USB:tmpSIOVREF__Dm_net_0\),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>\USB:tmpINTERRUPT_0__Dm_net_0\);
\USB:Dp\:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"207de35d-96fa-4d9c-93e8-b56a5d18b7b9/618a72fc-5ddd-4df5-958f-a3d55102db42",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"10",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"0",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"",
		ovt_slew_control=>"",
		ovt_hyst_trim=>"",
		input_buffer_sel=>"")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>(\USB:tmpFB_0__Dp_net_0\),
		analog=>\USB:Net_1000\,
		io=>(\USB:tmpIO_0__Dp_net_0\),
		siovref=>(\USB:tmpSIOVREF__Dp_net_0\),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>\USB:Net_1010\);
\USB:USB\:cy_psoc3_usb_v1_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(dp=>\USB:Net_1000\,
		dm=>\USB:Net_597\,
		sof_int=>Net_339,
		arb_int=>\USB:Net_79\,
		usb_int=>\USB:Net_81\,
		ept_int=>(\USB:ept_int_8\, \USB:ept_int_7\, \USB:ept_int_6\, \USB:ept_int_5\,
			\USB:ept_int_4\, \USB:ept_int_3\, \USB:ept_int_2\, \USB:ept_int_1\,
			\USB:ept_int_0\),
		ord_int=>\USB:Net_95\,
		dma_req=>(\USB:dma_req_7\, \USB:dma_req_6\, \USB:dma_req_5\, \USB:dma_req_4\,
			\USB:dma_req_3\, \USB:dma_req_2\, \USB:dma_req_1\, \USB:dma_req_0\),
		dma_termin=>\USB:Net_824\);
\USB:sof_int\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_339);
Sleep_isr:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_317);
Q_1:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"NPN_v1_0",
		port_names=>"B, C, E",
		width=>3)
	PORT MAP(connect=>(Net_386, Net_381, Net_389));
R_1:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_401, Net_386));
R_2:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_386, Net_389));
GND_2:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Gnd_v1_0",
		port_names=>"T1",
		width=>1)
	PORT MAP(connect=>Net_389);
R_3:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_381, Net_390));
R_4:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_402, Net_414));
PWR_1:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Power_v1_0",
		port_names=>"T1",
		width=>1)
	PORT MAP(connect=>Net_414);
Q_2:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"NPN_v1_0",
		port_names=>"B, C, E",
		width=>3)
	PORT MAP(connect=>(Net_407, Net_408, Net_409));
R_5:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_410, Net_407));
R_6:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_407, Net_409));
GND_3:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Gnd_v1_0",
		port_names=>"T1",
		width=>1)
	PORT MAP(connect=>Net_409);
R_7:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_408, Net_412));
R_8:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_413, Net_414));
PWR_2:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Power_v1_0",
		port_names=>"T1",
		width=>1)
	PORT MAP(connect=>Net_461);
R_9:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_426, Net_427));
Q_3:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"PhotoTrans_v1_0",
		port_names=>"C, E",
		width=>2)
	PORT MAP(connect=>(Net_456, Net_433));
D_1:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Diode_v1_0",
		port_names=>"A, K",
		width=>2)
	PORT MAP(connect=>(Net_441, Net_427));
D_2:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Diode_v1_0",
		port_names=>"A, K",
		width=>2)
	PORT MAP(connect=>(Net_427, Net_441));
GND_4:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Gnd_v1_0",
		port_names=>"T1",
		width=>1)
	PORT MAP(connect=>Net_433);
R_10:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_446, Net_447));
Q_4:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"PhotoTrans_v1_0",
		port_names=>"C, E",
		width=>2)
	PORT MAP(connect=>(Net_420, Net_448));
D_3:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Diode_v1_0",
		port_names=>"A, K",
		width=>2)
	PORT MAP(connect=>(Net_449, Net_447));
D_4:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Diode_v1_0",
		port_names=>"A, K",
		width=>2)
	PORT MAP(connect=>(Net_447, Net_449));
GND_5:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Gnd_v1_0",
		port_names=>"T1",
		width=>1)
	PORT MAP(connect=>Net_448);
R_11:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_456, Net_416));
R_12:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_420, Net_457));
Q_5:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"PFET_En_v1_0",
		port_names=>"D, G, S",
		width=>3)
	PORT MAP(connect=>(Net_461, Net_459, Net_414));
R_13:cy_annotation_universal_v1_0
	GENERIC MAP(comp_name=>"Resistor_v1_0",
		port_names=>"T1, T2",
		width=>2)
	PORT MAP(connect=>(Net_459, Net_461));
\ADC_SAR_1:cy_analog_virtualmux_3_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_SAR_1:Net_248\,
		signal2=>\ADC_SAR_1:Net_233\);
\ADC_SAR_1:IRQ\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_481);
\ADC_SAR_1:theACLK\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"cf9e3160-8489-49d3-af75-1fdb76893283/696a0979-21fc-4185-bf38-6c79febcde7a",
		source_clock_id=>"",
		divisor=>0,
		period=>"976562500",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\ADC_SAR_1:Net_376\,
		dig_domain_out=>open);
\ADC_SAR_1:ADC_SAR\:cy_psoc5_sar_v2_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(vplus=>Net_478,
		vminus=>\ADC_SAR_1:Net_126\,
		ext_pin=>\ADC_SAR_1:Net_215\,
		vrefhi_out=>\ADC_SAR_1:Net_257\,
		vref=>\ADC_SAR_1:Net_248\,
		clock=>\ADC_SAR_1:Net_376\,
		pump_clock=>\ADC_SAR_1:Net_376\,
		sof_udb=>zero,
		clk_udb=>zero,
		vp_ctl_udb=>(zero, zero, zero, zero),
		vn_ctl_udb=>(zero, zero, zero, zero),
		irq=>\ADC_SAR_1:Net_252\,
		next_out=>Net_484,
		data_out=>(\ADC_SAR_1:Net_207_11\, \ADC_SAR_1:Net_207_10\, \ADC_SAR_1:Net_207_9\, \ADC_SAR_1:Net_207_8\,
			\ADC_SAR_1:Net_207_7\, \ADC_SAR_1:Net_207_6\, \ADC_SAR_1:Net_207_5\, \ADC_SAR_1:Net_207_4\,
			\ADC_SAR_1:Net_207_3\, \ADC_SAR_1:Net_207_2\, \ADC_SAR_1:Net_207_1\, \ADC_SAR_1:Net_207_0\),
		eof_udb=>Net_481);
\ADC_SAR_1:cy_analog_virtualmux_2_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_SAR_1:Net_215\,
		signal2=>\ADC_SAR_1:Net_209\);
\ADC_SAR_1:cy_analog_virtualmux_1_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_SAR_1:Net_126\,
		signal2=>Net_479);
\ADC_SAR_1:noconnect\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\ADC_SAR_1:Net_209\);
\ADC_SAR_1:vRef_1024\:cy_vref_v1_0
	GENERIC MAP(guid=>"89B398AD-36A8-4627-9212-707F2986319E",
		name=>"1.024V",
		autoenable=>'1',
		ignoresleep=>'0')
	PORT MAP(vout=>\ADC_SAR_1:Net_233\);
\ADC_SAR_1:cy_analog_virtualmux_4_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_SAR_1:Net_257\,
		signal2=>\ADC_SAR_1:Net_255\);
\ADC_SAR_1:cy_analog_noconnect_1\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\ADC_SAR_1:Net_255\);
\ADC_SAR_1:noconnect_1\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\ADC_SAR_1:Net_368\);
MIC_IN:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"77715107-f8d5-47e5-a629-0fb83101ac6b",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>(tmpFB_0__MIC_IN_net_0),
		analog=>Net_478,
		io=>(tmpIO_0__MIC_IN_net_0),
		siovref=>(tmpSIOVREF__MIC_IN_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MIC_IN_net_0);
MIC_GND:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"5567d7e3-1ab7-477a-bfa9-ba4f7b7305bc",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>(tmpFB_0__MIC_GND_net_0),
		analog=>Net_479,
		io=>(tmpIO_0__MIC_GND_net_0),
		siovref=>(tmpSIOVREF__MIC_GND_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MIC_GND_net_0);
timer_clock:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"c0fb34bd-1044-4931-9788-16b01ce89812",
		source_clock_id=>"75C2148C-3656-4d8a-846D-0CAE99AB6FF7",
		divisor=>0,
		period=>"0",
		is_direct=>'1',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_10,
		dig_domain_out=>open);
\Timer_1:TimerUDB:clock_enable_block\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_10,
		enable=>tmpOE__MIDI_PWR_net_0,
		clock_out=>\Timer_1:TimerUDB:ClockOutFromEnBlock\);
\Timer_1:TimerUDB:sCTRLReg:SyncCtl:cy_psoc3_udb_Ctl_Clk_Sync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_10,
		enable=>tmpOE__MIDI_PWR_net_0,
		clock_out=>\Timer_1:TimerUDB:Clk_Ctl_i\);
\Timer_1:TimerUDB:sCTRLReg:SyncCtl:ctrlreg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"11111111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\Timer_1:TimerUDB:Clk_Ctl_i\,
		control=>(\Timer_1:TimerUDB:control_7\, \Timer_1:TimerUDB:control_6\, \Timer_1:TimerUDB:control_5\, \Timer_1:TimerUDB:control_4\,
			\Timer_1:TimerUDB:control_3\, \Timer_1:TimerUDB:control_2\, \Timer_1:TimerUDB:control_1\, \Timer_1:TimerUDB:control_0\));
\Timer_1:TimerUDB:rstSts:stsreg\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000011",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>zero,
		clock=>\Timer_1:TimerUDB:ClockOutFromEnBlock\,
		status=>(zero, zero, zero, \Timer_1:TimerUDB:status_3\,
			\Timer_1:TimerUDB:status_2\, zero, \Timer_1:TimerUDB:status_tc\),
		interrupt=>Net_489);
\Timer_1:TimerUDB:sT24:timerdp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111000000000000000000000001000000000000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\Timer_1:TimerUDB:ClockOutFromEnBlock\,
		cs_addr=>(zero, \Timer_1:TimerUDB:control_7\, \Timer_1:TimerUDB:per_zero\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>\Timer_1:TimerUDB:nc0\,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>\Timer_1:TimerUDB:nc6\,
		f0_blk_stat=>\Timer_1:TimerUDB:nc8\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>\Timer_1:TimerUDB:sT24:timerdp:carry0\,
		sir=>zero,
		sor=>open,
		sil=>\Timer_1:TimerUDB:sT24:timerdp:sh_right0\,
		sol=>\Timer_1:TimerUDB:sT24:timerdp:sh_left0\,
		msbi=>\Timer_1:TimerUDB:sT24:timerdp:msb0\,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_eq0_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_eq0_0\),
		cli=>(zero, zero),
		clo=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_lt0_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_lt0_0\),
		zi=>(zero, zero),
		zo=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_zero0_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_zero0_0\),
		fi=>(zero, zero),
		fo=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_ff0_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_ff0_0\),
		capi=>(zero, zero),
		capo=>(\Timer_1:TimerUDB:sT24:timerdp:cap0_1\, \Timer_1:TimerUDB:sT24:timerdp:cap0_0\),
		cfbi=>zero,
		cfbo=>\Timer_1:TimerUDB:sT24:timerdp:cfb0\,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Timer_1:TimerUDB:sT24:timerdp:u1\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\Timer_1:TimerUDB:ClockOutFromEnBlock\,
		cs_addr=>(zero, \Timer_1:TimerUDB:control_7\, \Timer_1:TimerUDB:per_zero\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>\Timer_1:TimerUDB:nc1\,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>\Timer_1:TimerUDB:nc5\,
		f0_blk_stat=>\Timer_1:TimerUDB:nc7\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>\Timer_1:TimerUDB:sT24:timerdp:carry0\,
		co=>\Timer_1:TimerUDB:sT24:timerdp:carry1\,
		sir=>\Timer_1:TimerUDB:sT24:timerdp:sh_left0\,
		sor=>\Timer_1:TimerUDB:sT24:timerdp:sh_right0\,
		sil=>\Timer_1:TimerUDB:sT24:timerdp:sh_right1\,
		sol=>\Timer_1:TimerUDB:sT24:timerdp:sh_left1\,
		msbi=>\Timer_1:TimerUDB:sT24:timerdp:msb1\,
		msbo=>\Timer_1:TimerUDB:sT24:timerdp:msb0\,
		cei=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_eq0_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_eq0_0\),
		ceo=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_eq1_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_eq1_0\),
		cli=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_lt0_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_lt0_0\),
		clo=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_lt1_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_lt1_0\),
		zi=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_zero0_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_zero0_0\),
		zo=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_zero1_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_zero1_0\),
		fi=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_ff0_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_ff0_0\),
		fo=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_ff1_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_ff1_0\),
		capi=>(\Timer_1:TimerUDB:sT24:timerdp:cap0_1\, \Timer_1:TimerUDB:sT24:timerdp:cap0_0\),
		capo=>(\Timer_1:TimerUDB:sT24:timerdp:cap1_1\, \Timer_1:TimerUDB:sT24:timerdp:cap1_0\),
		cfbi=>\Timer_1:TimerUDB:sT24:timerdp:cfb0\,
		cfbo=>\Timer_1:TimerUDB:sT24:timerdp:cfb1\,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Timer_1:TimerUDB:sT24:timerdp:u2\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\Timer_1:TimerUDB:ClockOutFromEnBlock\,
		cs_addr=>(zero, \Timer_1:TimerUDB:control_7\, \Timer_1:TimerUDB:per_zero\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>\Timer_1:TimerUDB:per_zero\,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>\Timer_1:TimerUDB:status_3\,
		f0_blk_stat=>\Timer_1:TimerUDB:status_2\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>\Timer_1:TimerUDB:sT24:timerdp:carry1\,
		co=>open,
		sir=>\Timer_1:TimerUDB:sT24:timerdp:sh_left1\,
		sor=>\Timer_1:TimerUDB:sT24:timerdp:sh_right1\,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>\Timer_1:TimerUDB:sT24:timerdp:msb1\,
		cei=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_eq1_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_eq1_0\),
		ceo=>open,
		cli=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_lt1_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_lt1_0\),
		clo=>open,
		zi=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_zero1_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_zero1_0\),
		zo=>open,
		fi=>(\Timer_1:TimerUDB:sT24:timerdp:cmp_ff1_1\, \Timer_1:TimerUDB:sT24:timerdp:cmp_ff1_0\),
		fo=>open,
		capi=>(\Timer_1:TimerUDB:sT24:timerdp:cap1_1\, \Timer_1:TimerUDB:sT24:timerdp:cap1_0\),
		capo=>open,
		cfbi=>\Timer_1:TimerUDB:sT24:timerdp:cfb1\,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
isr_1:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_489);
\UI_ADC:AMuxHw_2\:cy_psoc3_amux_v1_0
	GENERIC MAP(cy_registers=>"",
		muxin_width=>64,
		hw_control=>'1',
		one_active=>'1',
		init_mux_sel=>"0000000000000000000000000000000000000000000000000000000000000000",
		api_type=>2,
		connect_mode=>1)
	PORT MAP(muxin=>(Net_601, Net_600, Net_599, Net_598,
			Net_597, Net_596, Net_595, Net_594,
			Net_593, Net_592, Net_591, Net_590,
			Net_589, Net_588, Net_587, Net_586,
			Net_585, Net_583, Net_581, Net_580,
			Net_578, Net_576, Net_575, Net_573,
			Net_571, Net_570, Net_568, Net_566,
			Net_565, Net_563, Net_561, Net_560,
			Net_558, Net_556, Net_555, Net_553,
			Net_551, Net_550, Net_548, Net_546,
			Net_545, Net_543, Net_541, Net_540,
			Net_538, Net_536, Net_535, Net_533,
			Net_531, Net_530, Net_528, Net_526,
			Net_525, Net_523, Net_521, Net_520,
			Net_518, Net_516, Net_515, Net_513,
			Net_511, Net_510, Net_508, Net_507),
		hw_ctrl_en=>(\UI_ADC:AMuxHw_2_Decoder_one_hot_63\, \UI_ADC:AMuxHw_2_Decoder_one_hot_62\, \UI_ADC:AMuxHw_2_Decoder_one_hot_61\, \UI_ADC:AMuxHw_2_Decoder_one_hot_60\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_59\, \UI_ADC:AMuxHw_2_Decoder_one_hot_58\, \UI_ADC:AMuxHw_2_Decoder_one_hot_57\, \UI_ADC:AMuxHw_2_Decoder_one_hot_56\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_55\, \UI_ADC:AMuxHw_2_Decoder_one_hot_54\, \UI_ADC:AMuxHw_2_Decoder_one_hot_53\, \UI_ADC:AMuxHw_2_Decoder_one_hot_52\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_51\, \UI_ADC:AMuxHw_2_Decoder_one_hot_50\, \UI_ADC:AMuxHw_2_Decoder_one_hot_49\, \UI_ADC:AMuxHw_2_Decoder_one_hot_48\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_47\, \UI_ADC:AMuxHw_2_Decoder_one_hot_46\, \UI_ADC:AMuxHw_2_Decoder_one_hot_45\, \UI_ADC:AMuxHw_2_Decoder_one_hot_44\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_43\, \UI_ADC:AMuxHw_2_Decoder_one_hot_42\, \UI_ADC:AMuxHw_2_Decoder_one_hot_41\, \UI_ADC:AMuxHw_2_Decoder_one_hot_40\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_39\, \UI_ADC:AMuxHw_2_Decoder_one_hot_38\, \UI_ADC:AMuxHw_2_Decoder_one_hot_37\, \UI_ADC:AMuxHw_2_Decoder_one_hot_36\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_35\, \UI_ADC:AMuxHw_2_Decoder_one_hot_34\, \UI_ADC:AMuxHw_2_Decoder_one_hot_33\, \UI_ADC:AMuxHw_2_Decoder_one_hot_32\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_31\, \UI_ADC:AMuxHw_2_Decoder_one_hot_30\, \UI_ADC:AMuxHw_2_Decoder_one_hot_29\, \UI_ADC:AMuxHw_2_Decoder_one_hot_28\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_27\, \UI_ADC:AMuxHw_2_Decoder_one_hot_26\, \UI_ADC:AMuxHw_2_Decoder_one_hot_25\, \UI_ADC:AMuxHw_2_Decoder_one_hot_24\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_23\, \UI_ADC:AMuxHw_2_Decoder_one_hot_22\, \UI_ADC:AMuxHw_2_Decoder_one_hot_21\, \UI_ADC:AMuxHw_2_Decoder_one_hot_20\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_19\, \UI_ADC:AMuxHw_2_Decoder_one_hot_18\, \UI_ADC:AMuxHw_2_Decoder_one_hot_17\, \UI_ADC:AMuxHw_2_Decoder_one_hot_16\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_15\, \UI_ADC:AMuxHw_2_Decoder_one_hot_14\, \UI_ADC:AMuxHw_2_Decoder_one_hot_13\, \UI_ADC:AMuxHw_2_Decoder_one_hot_12\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_11\, \UI_ADC:AMuxHw_2_Decoder_one_hot_10\, \UI_ADC:AMuxHw_2_Decoder_one_hot_9\, \UI_ADC:AMuxHw_2_Decoder_one_hot_8\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_7\, \UI_ADC:AMuxHw_2_Decoder_one_hot_6\, \UI_ADC:AMuxHw_2_Decoder_one_hot_5\, \UI_ADC:AMuxHw_2_Decoder_one_hot_4\,
			\UI_ADC:AMuxHw_2_Decoder_one_hot_3\, \UI_ADC:AMuxHw_2_Decoder_one_hot_2\, \UI_ADC:AMuxHw_2_Decoder_one_hot_1\, \UI_ADC:AMuxHw_2_Decoder_one_hot_0\),
		vout=>\UI_ADC:V_single\);
\UI_ADC:SAR:cy_analog_virtualmux_3_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\UI_ADC:SAR:Net_248\,
		signal2=>\UI_ADC:SAR:Net_235\);
\UI_ADC:SAR:ADC_SAR\:cy_psoc5_sar_v2_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(vplus=>\UI_ADC:Net_2803\,
		vminus=>\UI_ADC:SAR:Net_126\,
		ext_pin=>\UI_ADC:SAR:Net_215\,
		vrefhi_out=>\UI_ADC:SAR:Net_257\,
		vref=>\UI_ADC:SAR:Net_248\,
		clock=>\UI_ADC:clock\,
		pump_clock=>\UI_ADC:clock\,
		sof_udb=>zero,
		clk_udb=>zero,
		vp_ctl_udb=>(zero, zero, zero, zero),
		vn_ctl_udb=>(zero, zero, zero, zero),
		irq=>\UI_ADC:SAR:Net_252\,
		next_out=>Net_505,
		data_out=>(\UI_ADC:SAR:Net_207_11\, \UI_ADC:SAR:Net_207_10\, \UI_ADC:SAR:Net_207_9\, \UI_ADC:SAR:Net_207_8\,
			\UI_ADC:SAR:Net_207_7\, \UI_ADC:SAR:Net_207_6\, \UI_ADC:SAR:Net_207_5\, \UI_ADC:SAR:Net_207_4\,
			\UI_ADC:SAR:Net_207_3\, \UI_ADC:SAR:Net_207_2\, \UI_ADC:SAR:Net_207_1\, \UI_ADC:SAR:Net_207_0\),
		eof_udb=>\UI_ADC:Net_3830\);
\UI_ADC:SAR:cy_analog_virtualmux_2_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\UI_ADC:SAR:Net_215\,
		signal2=>\UI_ADC:SAR:Net_209\);
\UI_ADC:SAR:cy_analog_virtualmux_1_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\UI_ADC:SAR:Net_126\,
		signal2=>\UI_ADC:SAR:Net_149\);
\UI_ADC:SAR:noconnect\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\UI_ADC:SAR:Net_209\);
\UI_ADC:SAR:cy_analog_virtualmux_4_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\UI_ADC:SAR:Net_257\,
		signal2=>\UI_ADC:SAR:Net_149\);
\UI_ADC:SAR:cy_analog_noconnect_1\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\UI_ADC:SAR:Net_255\);
\UI_ADC:SAR:vRef_Vdda_1\:cy_vref_v1_0
	GENERIC MAP(guid=>"4720866E-BC14-478d-B8A0-3E44F38CADAC",
		name=>"Vdda/2",
		autoenable=>'1',
		ignoresleep=>'0')
	PORT MAP(vout=>\UI_ADC:SAR:Net_235\);
\UI_ADC:SAR:noconnect_1\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\UI_ADC:SAR:Net_368\);
\UI_ADC:cy_analog_virtualmux_1_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\UI_ADC:Net_2803\,
		signal2=>\UI_ADC:V_single\);
\UI_ADC:bSAR_SEQ:ClkEn\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\UI_ADC:clock\,
		enable=>\UI_ADC:bSAR_SEQ:enable\,
		clock_out=>\UI_ADC:bSAR_SEQ:clk_fin\);
\UI_ADC:bSAR_SEQ:ClkCtrl\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\UI_ADC:clock\,
		enable=>tmpOE__MIDI_PWR_net_0,
		clock_out=>\UI_ADC:bSAR_SEQ:clk_ctrl\);
\UI_ADC:bSAR_SEQ:CtrlReg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000110",
		cy_ctrl_mode_0=>"00000111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\UI_ADC:bSAR_SEQ:clk_ctrl\,
		control=>(\UI_ADC:bSAR_SEQ:control_7\, \UI_ADC:bSAR_SEQ:control_6\, \UI_ADC:bSAR_SEQ:control_5\, \UI_ADC:bSAR_SEQ:control_4\,
			\UI_ADC:bSAR_SEQ:control_3\, \UI_ADC:bSAR_SEQ:control_2\, \UI_ADC:bSAR_SEQ:load_period\, \UI_ADC:bSAR_SEQ:enable\));
\UI_ADC:bSAR_SEQ:ChannelCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"0000001",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\UI_ADC:bSAR_SEQ:clk_fin\,
		reset=>zero,
		load=>\UI_ADC:bSAR_SEQ:load_period\,
		enable=>\UI_ADC:bSAR_SEQ:cnt_enable\,
		count=>(\UI_ADC:bSAR_SEQ:count_6\, \UI_ADC:ch_addr_5\, \UI_ADC:ch_addr_4\, \UI_ADC:ch_addr_3\,
			\UI_ADC:ch_addr_2\, \UI_ADC:ch_addr_1\, \UI_ADC:ch_addr_0\),
		tc=>\UI_ADC:bSAR_SEQ:cnt_tc\);
\UI_ADC:bSAR_SEQ:EOCSts\:cy_psoc3_status
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"00000001")
	PORT MAP(reset=>zero,
		clock=>\UI_ADC:bSAR_SEQ:clk_fin\,
		status=>(zero, zero, zero, zero,
			zero, zero, zero, Net_506));
\UI_ADC:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"5dcda39c-23eb-4e33-bf74-01657d713b5a/9725d809-97e7-404e-b621-dfdbe78d0ca9",
		source_clock_id=>"",
		divisor=>0,
		period=>"999992000.064",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\UI_ADC:clock\,
		dig_domain_out=>open);
\UI_ADC:TempBuf\:cy_dma_v1_0
	GENERIC MAP(drq_type=>"00",
		num_tds=>0)
	PORT MAP(drq=>\UI_ADC:Net_3830\,
		trq=>zero,
		nrq=>\UI_ADC:Net_3698\);
\UI_ADC:FinalBuf\:cy_dma_v1_0
	GENERIC MAP(drq_type=>"00",
		num_tds=>0)
	PORT MAP(drq=>\UI_ADC:Net_3698\,
		trq=>zero,
		nrq=>\UI_ADC:nrq\);
\UI_ADC:BusClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"5dcda39c-23eb-4e33-bf74-01657d713b5a/3d23b625-9a71-4c05-baf4-2f904356009b",
		source_clock_id=>"75C2148C-3656-4d8a-846D-0CAE99AB6FF7",
		divisor=>0,
		period=>"0",
		is_direct=>'1',
		is_digital=>'1')
	PORT MAP(clock_out=>\UI_ADC:Net_3710\,
		dig_domain_out=>open);
\UI_ADC:IRQ\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_506);
\UI_ADC:Sync:genblk1[0]:INST\:cy_psoc3_sync
	PORT MAP(clock=>\UI_ADC:Net_3710\,
		sc_in=>\UI_ADC:nrq\,
		sc_out=>\UI_ADC:Net_3935\);
\UI_ADC:MODULE_1:g1:a0:gx:u0:gne(1):c4:c6:u1\:cy_buf
	PORT MAP(x=>\UI_ADC:MODULE_1:g1:a0:gx:u0:lt_5\,
		y=>\UI_ADC:MODULE_1:g1:a0:gx:u0:lti_1\);
\UI_ADC:MODULE_1:g1:a0:gx:u0:gne(1):c4:c6:u2\:cy_buf
	PORT MAP(x=>\UI_ADC:MODULE_1:g1:a0:gx:u0:gt_5\,
		y=>\UI_ADC:MODULE_1:g1:a0:gx:u0:gti_1\);
\UI_ADC:MODULE_1:g1:a0:gx:u0:gne(0):c3:u1\:cy_buf
	PORT MAP(x=>\UI_ADC:MODULE_1:g1:a0:gx:u0:lt_2\,
		y=>\UI_ADC:MODULE_1:g1:a0:gx:u0:lti_0\);
\UI_ADC:MODULE_1:g1:a0:gx:u0:gne(0):c3:u2\:cy_buf
	PORT MAP(x=>\UI_ADC:MODULE_1:g1:a0:gx:u0:gt_2\,
		y=>\UI_ADC:MODULE_1:g1:a0:gx:u0:gti_0\);
\UI_TIMER:TimerHW\:cy_psoc3_timer_v1_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(clock=>Net_604,
		kill=>zero,
		enable=>tmpOE__MIDI_PWR_net_0,
		capture=>zero,
		timer_reset=>zero,
		tc=>Net_615,
		compare=>\UI_TIMER:Net_261\,
		interrupt=>\UI_TIMER:Net_57\);
UI_isr:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_615);
POT_IN_KEY:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"71dd4ef3-2a4f-4ad3-82e1-38853e4970bd",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>(tmpFB_0__POT_IN_KEY_net_0),
		analog=>Net_507,
		io=>(tmpIO_0__POT_IN_KEY_net_0),
		siovref=>(tmpSIOVREF__POT_IN_KEY_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__POT_IN_KEY_net_0);
POT_IN_SCALE:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"ac4bf09e-d383-4086-aeca-f8afd3f4fa46",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>(tmpFB_0__POT_IN_SCALE_net_0),
		analog=>Net_508,
		io=>(tmpIO_0__POT_IN_SCALE_net_0),
		siovref=>(tmpSIOVREF__POT_IN_SCALE_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__POT_IN_SCALE_net_0);
timer_clock_1:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"d6cb6fcf-61d6-4c1b-9874-4a9487ec4f9d",
		source_clock_id=>"75C2148C-3656-4d8a-846D-0CAE99AB6FF7",
		divisor=>0,
		period=>"0",
		is_direct=>'1',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_604,
		dig_domain_out=>open);
\UART:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_355,
		enable=>tmpOE__MIDI_PWR_net_0,
		clock_out=>\UART:BUART:clock_op\);
\UART:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART:BUART:reset_reg\,
		clk=>\UART:BUART:clock_op\,
		cs_addr=>(\UART:BUART:tx_state_1\, \UART:BUART:tx_state_0\, \UART:BUART:tx_bitclk_enable_pre\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART:BUART:tx_shift_out\,
		f0_bus_stat=>\UART:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\UART:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\UART:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART:BUART:reset_reg\,
		clk=>\UART:BUART:clock_op\,
		cs_addr=>(zero, zero, \UART:BUART:counter_load_not\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>\UART:BUART:tx_bitclk_enable_pre\,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>\UART:BUART:tx_counter_dp\,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>(\UART:BUART:sc_out_7\, \UART:BUART:sc_out_6\, \UART:BUART:sc_out_5\, \UART:BUART:sc_out_4\,
			\UART:BUART:sc_out_3\, \UART:BUART:sc_out_2\, \UART:BUART:sc_out_1\, \UART:BUART:sc_out_0\));
\UART:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART:BUART:reset_reg\,
		clock=>\UART:BUART:clock_op\,
		status=>(zero, zero, zero, \UART:BUART:tx_fifo_notfull\,
			\UART:BUART:tx_status_2\, \UART:BUART:tx_fifo_empty\, \UART:BUART:tx_status_0\),
		interrupt=>\UART:BUART:tx_interrupt_out\);
Tx_1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"2c4bda81-76b8-44ec-a3d6-d700969c0634",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>Net_625,
		fb=>(tmpFB_0__Tx_1_net_0),
		analog=>(open),
		io=>(tmpIO_0__Tx_1_net_0),
		siovref=>(tmpSIOVREF__Tx_1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Tx_1_net_0);
SDA_1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"22863ebe-a37b-476f-b252-6e49a8c00b12",
		drive_mode=>"100",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"B",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>(tmpFB_0__SDA_1_net_0),
		analog=>(open),
		io=>Net_34,
		siovref=>(tmpSIOVREF__SDA_1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__SDA_1_net_0);
SCL_1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"02f2cf2c-2c7a-49df-9246-7a3435c21be3",
		drive_mode=>"100",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"B",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__MIDI_PWR_net_0),
		y=>(zero),
		fb=>(tmpFB_0__SCL_1_net_0),
		analog=>(open),
		io=>Net_35,
		siovref=>(tmpSIOVREF__SCL_1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__MIDI_PWR_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__MIDI_PWR_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__SCL_1_net_0);
\I2C_CharLCD:I2C_IRQ\:cy_isr_v1_0
	GENERIC MAP(int_type=>"00",
		is_nmi=>'0')
	PORT MAP(int_signal=>\I2C_CharLCD:Net_697\);
\I2C_CharLCD:I2C_FF\:cy_psoc3_i2c_v1_0
	GENERIC MAP(cy_registers=>"",
		use_wakeup=>'0')
	PORT MAP(clock=>\I2C_CharLCD:bus_clk\,
		scl_in=>\I2C_CharLCD:Net_1109_0\,
		sda_in=>\I2C_CharLCD:Net_1109_1\,
		scl_out=>\I2C_CharLCD:Net_643_0\,
		sda_out=>\I2C_CharLCD:sda_x_wire\,
		interrupt=>\I2C_CharLCD:Net_697\);
\I2C_CharLCD:BusClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"c821e721-680c-4376-b857-e4a6ce23cab9/5ece924d-20ba-480e-9102-bc082dcdd926",
		source_clock_id=>"75C2148C-3656-4d8a-846D-0CAE99AB6FF7",
		divisor=>0,
		period=>"0",
		is_direct=>'1',
		is_digital=>'1')
	PORT MAP(clock_out=>\I2C_CharLCD:bus_clk\,
		dig_domain_out=>open);
\I2C_CharLCD:Bufoe_scl\:cy_bufoe
	PORT MAP(x=>\I2C_CharLCD:Net_643_0\,
		oe=>tmpOE__MIDI_PWR_net_0,
		y=>Net_35,
		yfb=>\I2C_CharLCD:Net_1109_0\);
\I2C_CharLCD:Bufoe_sda\:cy_bufoe
	PORT MAP(x=>\I2C_CharLCD:sda_x_wire\,
		oe=>tmpOE__MIDI_PWR_net_0,
		y=>Net_34,
		yfb=>\I2C_CharLCD:Net_1109_1\);
\MIDI1_UART:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:reset_reg\);
\MIDI1_UART:BUART:txn\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:txn\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>Net_400);
\MIDI1_UART:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_state_1\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_state_1\);
\MIDI1_UART:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_state_0\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_state_0\);
\MIDI1_UART:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_state_2\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_state_2\);
\MIDI1_UART:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_bitclk_enable_pre\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_bitclk\);
Net_320:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>Net_320);
\MIDI1_UART:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_ctrl_mark_last\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_ctrl_mark_last\);
\MIDI1_UART:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_mark\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_mark\);
\MIDI1_UART:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_parity_bit\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_parity_bit\);
\MIDI1_UART:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_state_1\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_state_1\);
\MIDI1_UART:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_state_0\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_state_0\);
\MIDI1_UART:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_load_fifo\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_load_fifo\);
\MIDI1_UART:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_state_3\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_state_3\);
\MIDI1_UART:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_state_2\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_state_2\);
\MIDI1_UART:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_bitclk_pre\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_bitclk_enable\);
\MIDI1_UART:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_state_stop1_reg\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_state_stop1_reg\);
\MIDI1_UART:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_markspace_status\);
\MIDI1_UART:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_status_2\);
\MIDI1_UART:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_stop_bit_error\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_status_3\);
\MIDI1_UART:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_addr_match_status\);
\MIDI1_UART:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_markspace_pre\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_markspace_pre\);
\MIDI1_UART:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_parity_error_pre\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_parity_error_pre\);
\MIDI1_UART:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_break_status\);
\MIDI1_UART:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_address_detected\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_address_detected\);
\MIDI1_UART:BUART:rx_last\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_last\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_last\);
\MIDI1_UART:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_parity_bit\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_parity_bit\);
\MIDI2_UART:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:reset_reg\);
\MIDI2_UART:BUART:txn\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:txn\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>Net_406);
\MIDI2_UART:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:tx_state_1\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:tx_state_1\);
\MIDI2_UART:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:tx_state_0\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:tx_state_0\);
\MIDI2_UART:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:tx_state_2\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:tx_state_2\);
\MIDI2_UART:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:tx_bitclk_enable_pre\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:tx_bitclk\);
Net_330:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>Net_330);
\MIDI2_UART:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:tx_ctrl_mark_last\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:tx_ctrl_mark_last\);
\MIDI2_UART:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:tx_mark\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:tx_mark\);
\MIDI2_UART:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:tx_parity_bit\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:tx_parity_bit\);
\MIDI2_UART:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_state_1\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_state_1\);
\MIDI2_UART:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_state_0\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_state_0\);
\MIDI2_UART:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_load_fifo\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_load_fifo\);
\MIDI2_UART:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_state_3\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_state_3\);
\MIDI2_UART:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_state_2\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_state_2\);
\MIDI2_UART:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_bitclk_pre\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_bitclk_enable\);
\MIDI2_UART:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_state_stop1_reg\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_state_stop1_reg\);
\MIDI2_UART:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_markspace_status\);
\MIDI2_UART:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_status_2\);
\MIDI2_UART:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_stop_bit_error\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_status_3\);
\MIDI2_UART:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_addr_match_status\);
\MIDI2_UART:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_markspace_pre\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_markspace_pre\);
\MIDI2_UART:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_parity_error_pre\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_parity_error_pre\);
\MIDI2_UART:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_break_status\);
\MIDI2_UART:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_address_detected\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_address_detected\);
\MIDI2_UART:BUART:rx_last\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_last\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_last\);
\MIDI2_UART:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\MIDI2_UART:BUART:rx_parity_bit\\D\,
		clk=>\MIDI2_UART:BUART:clock_op\,
		q=>\MIDI2_UART:BUART:rx_parity_bit\);
\Timer_1:TimerUDB:capture_last\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Timer_1:TimerUDB:ClockOutFromEnBlock\,
		q=>\Timer_1:TimerUDB:capture_last\);
\Timer_1:TimerUDB:tc_reg_i\:cy_dff
	PORT MAP(d=>\Timer_1:TimerUDB:status_tc\,
		clk=>\Timer_1:TimerUDB:ClockOutFromEnBlock\,
		q=>\Timer_1:TimerUDB:tc_reg_i\);
\Timer_1:TimerUDB:hwEnable_reg\:cy_dff
	PORT MAP(d=>\Timer_1:TimerUDB:control_7\,
		clk=>\Timer_1:TimerUDB:ClockOutFromEnBlock\,
		q=>\Timer_1:TimerUDB:hwEnable_reg\);
\Timer_1:TimerUDB:capture_out_reg_i\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Timer_1:TimerUDB:ClockOutFromEnBlock\,
		q=>\Timer_1:TimerUDB:capture_out_reg_i\);
\UI_ADC:AMuxHw_2_Decoder_old_id_5\:cy_dff
	PORT MAP(d=>\UI_ADC:ch_addr_5\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_old_id_5\);
\UI_ADC:AMuxHw_2_Decoder_old_id_4\:cy_dff
	PORT MAP(d=>\UI_ADC:ch_addr_4\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_old_id_4\);
\UI_ADC:AMuxHw_2_Decoder_old_id_3\:cy_dff
	PORT MAP(d=>\UI_ADC:ch_addr_3\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_old_id_3\);
\UI_ADC:AMuxHw_2_Decoder_old_id_2\:cy_dff
	PORT MAP(d=>\UI_ADC:ch_addr_2\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_old_id_2\);
\UI_ADC:AMuxHw_2_Decoder_old_id_1\:cy_dff
	PORT MAP(d=>\UI_ADC:ch_addr_1\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_old_id_1\);
\UI_ADC:AMuxHw_2_Decoder_old_id_0\:cy_dff
	PORT MAP(d=>\UI_ADC:ch_addr_0\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_old_id_0\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_0\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_0\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_0\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_1\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_1\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_1\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_2\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_2\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_2\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_3\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_3\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_3\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_4\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_4\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_4\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_5\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_5\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_5\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_6\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_6\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_6\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_7\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_7\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_7\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_8\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_8\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_8\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_9\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_9\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_9\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_10\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_10\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_10\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_11\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_11\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_11\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_12\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_12\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_12\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_13\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_13\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_13\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_14\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_14\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_14\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_15\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_15\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_15\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_16\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_16\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_16\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_17\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_17\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_17\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_18\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_18\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_18\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_19\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_19\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_19\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_20\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_20\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_20\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_21\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_21\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_21\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_22\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_22\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_22\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_23\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_23\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_23\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_24\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_24\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_24\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_25\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_25\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_25\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_26\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_26\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_26\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_27\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_27\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_27\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_28\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_28\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_28\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_29\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_29\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_29\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_30\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_30\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_30\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_31\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_31\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_31\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_32\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_32\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_32\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_33\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_33\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_33\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_34\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_34\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_34\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_35\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_35\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_35\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_36\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_36\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_36\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_37\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_37\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_37\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_38\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_38\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_38\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_39\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_39\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_39\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_40\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_40\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_40\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_41\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_41\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_41\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_42\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_42\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_42\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_43\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_43\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_43\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_44\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_44\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_44\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_45\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_45\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_45\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_46\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_46\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_46\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_47\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_47\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_47\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_48\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_48\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_48\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_49\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_49\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_49\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_50\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_50\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_50\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_51\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_51\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_51\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_52\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_52\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_52\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_53\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_53\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_53\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_54\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_54\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_54\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_55\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_55\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_55\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_56\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_56\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_56\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_57\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_57\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_57\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_58\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_58\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_58\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_59\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_59\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_59\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_60\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_60\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_60\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_61\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_61\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_61\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_62\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_62\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_62\);
\UI_ADC:AMuxHw_2_Decoder_one_hot_63\:cy_dff
	PORT MAP(d=>\UI_ADC:AMuxHw_2_Decoder_one_hot_63\\D\,
		clk=>\UI_ADC:clock\,
		q=>\UI_ADC:AMuxHw_2_Decoder_one_hot_63\);
\UI_ADC:bSAR_SEQ:nrq_edge_detect_reg\:cy_dff
	PORT MAP(d=>\UI_ADC:bSAR_SEQ:nrq_edge_detect\,
		clk=>\UI_ADC:bSAR_SEQ:clk_fin\,
		q=>Net_506);
\UI_ADC:bSAR_SEQ:bus_clk_nrq_reg\:cy_dff
	PORT MAP(d=>\UI_ADC:bSAR_SEQ:bus_clk_nrq_reg\\D\,
		clk=>\UI_ADC:Net_3710\,
		q=>\UI_ADC:bSAR_SEQ:bus_clk_nrq_reg\);
\UI_ADC:bSAR_SEQ:nrq_reg\:cy_dff
	PORT MAP(d=>\UI_ADC:bSAR_SEQ:bus_clk_nrq_reg\,
		clk=>\UI_ADC:bSAR_SEQ:clk_fin\,
		q=>\UI_ADC:bSAR_SEQ:nrq_reg\);
\UART:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:reset_reg\);
\UART:BUART:txn\:cy_dff
	PORT MAP(d=>\UART:BUART:txn\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:txn\);
\UART:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_state_1\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_state_1\);
\UART:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_state_0\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_state_0\);
\UART:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_state_2\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_state_2\);
Net_627:cy_dff
	PORT MAP(d=>Net_627D,
		clk=>\UART:BUART:clock_op\,
		q=>Net_627);
\UART:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_bitclk\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_bitclk\);
\UART:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_ctrl_mark_last\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_ctrl_mark_last\);
\UART:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_mark\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_mark\);
\UART:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_parity_bit\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_parity_bit\);

END R_T_L;
