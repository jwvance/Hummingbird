C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -main.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.\DP8051\DP8051_Keil_951\Deb
                    -ug/main.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: main.c
   3          *
   4          * Version: 1.0
   5          *
   6          * Description:
   7          *  This is source code for the datasheet example of the USBFS component.
   8          *   
   9          * Related Document:
  10          *  Universal Serial Bus Specification Revision 2.0 
  11          *  Universal Serial Bus Device Class Definition for MIDI Devices Release 1.0
  12          *  MIDI 1.0 Detailed Specification Document Version 4.2
  13          *
  14          ********************************************************************************
  15          * Copyright 2012-2013, Cypress Semiconductor Corporation. All rights reserved.
  16          * This software is owned by Cypress Semiconductor Corporation and is protected
  17          * by and subject to worldwide patent and copyright laws and treaties.
  18          * Therefore, you may use this software only as provided in the license agreement
  19          * accompanying the software package from which you obtained this software.
  20          * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  21          * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  22          * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  23          *******************************************************************************/
  24          
  25          #include <device.h>
  26          
  27          #define BUTT1   (0x01u)
  28          #define BUTT2   (0x02u)
  29          
  30          /* Identity Reply message */
  31          const uint8 CYCODE MIDI_IDENTITY_REPLY[] = {
  32              0xF0u,      /* SysEx */
  33              0x7Eu,      /* Non-Realtime */
  34              0x7Fu,      /* ID of target device (7F - "All Call") */
  35              0x06u,      /* Sub-ID#1 - General Information */
  36              0x02u,      /* Sub-ID#2 - Identity Reply */
  37              0x7Du,      /* Manufacturer's ID: 7D - Educational Use */
  38              0xB4u, 0x04u,               /* Family code */
  39              0x32u, 0xD2u,               /* Model number */
  40              0x01u, 0x00u, 0x00u, 0x00u, /* Version number */
  41              /*0xF7         End of SysEx automatically appended */
  42          };
  43          
  44          /* Need for Identity Reply message */
  45          extern volatile uint8 USB_MIDI1_InqFlags;
  46          extern volatile uint8 USB_MIDI2_InqFlags;
  47          
  48          volatile uint8 usbActivityCounter = 0u;
  49          
  50          uint8 csButtStates = 0u;
  51          uint8 csButtStates_old = 0u;
  52          uint8 csButtChange = 0u;
  53          uint8 inqFlags_old = 0u;
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 2   

  54          
  55          
  56          /*******************************************************************************
  57          * Function Name: SleepIsr
  58          ********************************************************************************
  59          * Summary:
  60          *  The sleep interrupt service routine used to determine the sleep condition.
  61          *  Devices should go into the Suspend state after they see a constant Idle 
  62          *  state on their upstream facing bus lines for more than 3.0 ms. 
  63          *  The device must actually be suspended, drawing only suspend current from the 
  64          *  bus after no more than 10 ms of bus inactivity on all its ports.
  65          *  This ISR is run each 4ms, so after second turn without USB activity, the 
  66          *  device should be suspended.
  67          *
  68          * Parameters:
  69          *  None
  70          *
  71          * Return:
  72          *  None
  73          *
  74          *******************************************************************************/
  75          CY_ISR(SleepIsr)
  76          {
  77   1          /* Chech USB activity */
  78   1          if( USB_CheckActivity() != 0u ) 
  79   1          {
  80   2              usbActivityCounter = 0u;
  81   2          } 
  82   1          else 
  83   1          {
  84   2              usbActivityCounter++;
  85   2          }
  86   1          /* Clear Pending Interrupt */
  87   1          SleepTimer_GetStatus();
  88   1      }
  89          
  90          
  91          void main()
  92          {
  93   1          uint8 midiMsg[4];    
  94   1      
  95   1          /* Enable Global Interrupts */
  96   1          CYGlobalIntEnable;
  97   1      
  98   1          /* Start USBFS device 0 with VDDD operation */
  99   1          USB_Start(0u, USB_DWR_VDDD_OPERATION); 
 100   1      
 101   1          while(1u)
 102   1          {
 103   2              
 104   2              if(USB_IsConfigurationChanged() != 0u) /* Host could send double SET_INTERFACE request */
 105   2              {
 106   3                  if(USB_GetConfiguration() != 0u)   /* Init IN endpoints when device configured */
 107   3                  {
 108   4                      MIDI_PWR_Write(0u); /* Power ON CY8CKIT-044 board */
 109   4                      /* Start ISR to determine the sleep condition */
 110   4                      Sleep_isr_StartEx(SleepIsr);
 111   4                      /* Start SleepTimer's operation */
 112   4                      SleepTimer_Start();
 113   4                      /* Enable the output endpoint */
 114   4                      USB_MIDI_EP_Init();
 115   4                  }
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 3   

 116   3                  else
 117   3                  {
 118   4                      SleepTimer_Stop();
 119   4                  }    
 120   3              }        
 121   2              
 122   2              if(USB_GetConfiguration() != 0u)    /* Service USB MIDI when device configured */
 123   2              {
 124   3                  /* Call this API from UART RX ISR for Auto DMA mode */
 125   3                  #if(USB_EP_MM != USB__EP_DMAAUTO) 
 126   3                      USB_MIDI_IN_Service();
 127   3                  #endif
 128   3                  /* In Manual EP Memory Management mode OUT_EP_Service() 
 129   3                  *  may have to be called from main foreground or from OUT EP ISR
 130   3                  */
 131   3                  #if(USB_EP_MM != USB__EP_DMAAUTO) 
 132   3                      USB_MIDI_OUT_EP_Service();
 133   3                  #endif
 134   3      
 135   3                  /* Sending an Identity Reply Universal Sysex message back to the computer */
 136   3                  if((USB_MIDI1_InqFlags & USB_INQ_IDENTITY_REQ_FLAG) != 0u)
 137   3                  {
 138   4                      USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE
             -_00);
 139   4                      USB_MIDI1_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 140   4                  }
 141   3                  #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 142   3                      if((USB_MIDI2_InqFlags & USB_INQ_IDENTITY_REQ_FLAG) != 0u)
 143   3                      {
 144   4                          USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_C
             -ABLE_01);
 145   4                          USB_MIDI2_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 146   4                      }
 147   3                  #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 148   3                  
 149   3                  /* Service Keys */
 150   3                      if (SW1_Read() == 0u) 
 151   3                  {
 152   4                      csButtStates |= BUTT1;
 153   4                  }
 154   3                  else
 155   3                  {
 156   4                      csButtStates &= ~BUTT1;
 157   4                  }
 158   3                      if (SW2_Read() == 0u) 
 159   3                  {
 160   4                      csButtStates |= BUTT2;
 161   4                  }
 162   3                  else
 163   3                  {
 164   4                      csButtStates &= ~BUTT2;
 165   4                  }
 166   3                  /* Process any button changes */
 167   3                      if ((csButtChange = csButtStates ^ csButtStates_old) != 0u) 
 168   3                  {
 169   4                              csButtStates_old = csButtStates;
 170   4      
 171   4                              /* All buttons are mapped to Note-On/Off messages */
 172   4                              midiMsg[0] = USB_MIDI_NOTE_ON;
 173   4                              
 174   4                              /* Button 1 */
 175   4                              if ((csButtChange & BUTT1) != 0u) 
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 4   

 176   4                      {
 177   5                                      /* Button determines note number */
 178   5                                      midiMsg[1] = 72u;
 179   5                                      if (csButtStates & BUTT1)
 180   5                          {
 181   6                              midiMsg[2] = 100u;              /* Note On */
 182   6                          }
 183   5                                      else
 184   5                          {
 185   6                              midiMsg[2] = 0u;                        /* Note Off */
 186   6                          }    
 187   5                                      /* Put the MIDI Note-On/Off message into the input endpoint */
 188   5                          USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 189   5                              }
 190   4      
 191   4                              /* Button 2 */
 192   4                              if ((csButtChange & BUTT2) != 0u)
 193   4                      {
 194   5                                      /* Button determines note number */
 195   5                                      midiMsg[1] = 76u;
 196   5                                      if (csButtStates & BUTT2)
 197   5                          {
 198   6                              midiMsg[2] = 100u;                  /* Note On */
 199   6                          }
 200   5                                      else
 201   5                          {
 202   6                              midiMsg[2] = 0u;                        /* Note Off */
 203   6                          }    
 204   5                                      /* Put the MIDI Note-On/Off message into the input endpoint */
 205   5                                      USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 206   5                          /* Second Note message */
 207   5                          midiMsg[0] = USB_MIDI_NOTE_ON;
 208   5                              midiMsg[1] = 72u;
 209   5                          if (csButtStates & BUTT2)
 210   5                          {
 211   6                              midiMsg[2] = 100u;                  /* Note On */
 212   6                          }
 213   5                                      else
 214   5                          {
 215   6                              midiMsg[2] = 0u;                        /* Note Off */
 216   6                          }    
 217   5                                      /* Put the MIDI Note-On/Off message into the input endpoint */
 218   5                          USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 219   5                              }
 220   4                      #if(USB_EP_MM == USB__EP_DMAAUTO) 
                                 #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
                                      MIDI1_UART_DisableRxInt();
                                      #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
                                          MIDI2_UART_DisableRxInt();
                                      #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
                                  #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */            
                                  USB_MIDI_IN_Service();
                                  #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
                                      MIDI1_UART_EnableRxInt();
                                      #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
                                          MIDI2_UART_EnableRxInt();
                                      #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
                                  #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */                
                              #endif
 235   4                      }
 236   3              
 237   3                  /* Check if the Host requested USB Suspend */
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 5   

 238   3                  if( usbActivityCounter >= 2u ) 
 239   3                  {
 240   4                      MIDI1_UART_Sleep();
 241   4                      MIDI2_UART_Sleep();
 242   4                      MIDI_PWR_Write(1u);     /* Power OFF CY8CKIT-044 board */
 243   4                      
 244   4                      /*******************************************************************
 245   4                      * Disable the USBFS block and set DP Interrupt for wake-up 
 246   4                      * from sleep mode. 
 247   4                      *******************************************************************/
 248   4                      USB_Suspend(); 
 249   4                      /* Prepares system clocks for the Sleep mode */
 250   4                      CyPmSaveClocks();
 251   4                      /*******************************************************************
 252   4                      * Switch to the Sleep Mode for the PSoC 3 or PSoC 5LP devices:
 253   4                      *  - PM_SLEEP_TIME_NONE: wakeup time is defined by PICU source
 254   4                      *  - PM_SLEEP_SRC_PICU: PICU wakeup source 
 255   4                      *******************************************************************/
 256   4                      CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_PICU);
 257   4                      /* Restore clock configuration */
 258   4                      CyPmRestoreClocks();
 259   4                      /* Enable the USBFS block after power down mode */
 260   4                      USB_Resume();
 261   4                      
 262   4                      /* Enable the output endpoint */
 263   4                      USB_MIDI_EP_Init();
 264   4                      MIDI_PWR_Write(0u);     /* Power ON CY8CKIT-044 board */
 265   4                      MIDI1_UART_Wakeup();
 266   4                      MIDI2_UART_Wakeup();
 267   4                      usbActivityCounter = 0u; /* Re-init USB Activity Counter*/
 268   4                  }
 269   3              }
 270   2          }
 271   1      }
 272          
 273          
 274          /* Local processing of USB MIDI out events here */
 275          void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
 276          {
 277   1          /* Support General System On/Off Message. */
 278   1          if(((USB_MIDI1_InqFlags & USB_INQ_SYSEX_FLAG) == 0u) && ((inqFlags_old & USB_INQ_SYSEX_FLAG) != 0u))
 279   1          {
 280   2              if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX_GEN_MESSAGE)
 281   2              {
 282   3                  if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_ON)
 283   3                  {
 284   4                      MIDI_PWR_Write(0u); /* Power ON */
 285   4                  }
 286   3                  else if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_OFF)
 287   3                  {
 288   4                      MIDI_PWR_Write(1u); /* Power OFF */
 289   4                  }
 290   3              }
 291   2          }
 292   1          inqFlags_old = USB_MIDI1_InqFlags;
 293   1          cable = cable;
 294   1      }    
 295          
 296          
 297          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION SleepIsr (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C085              PUSH    DPH1
000A C084              PUSH    DPL1
000C C086              PUSH    DPS
000E 758600            MOV     DPS,#00H
0011 C000        E     PUSH    ?C?XPAGE1SFR
0013 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0016 C0D0              PUSH    PSW
0018 75D000            MOV     PSW,#00H
001B C000              PUSH    AR0
001D C001              PUSH    AR1
001F C002              PUSH    AR2
0021 C003              PUSH    AR3
0023 C004              PUSH    AR4
0025 C005              PUSH    AR5
0027 C006              PUSH    AR6
0029 C007              PUSH    AR7
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 78
002B 120000      E     LCALL   USB_CheckActivity
002E EF                MOV     A,R7
002F 6007              JZ      ?C0001
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
0031 900000      R     MOV     DPTR,#usbActivityCounter
0034 E4                CLR     A
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 81
0036 8006              SJMP    ?C0002
0038         ?C0001:
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
0038 900000      R     MOV     DPTR,#usbActivityCounter
003B E0                MOVX    A,@DPTR
003C 04                INC     A
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 85
003E         ?C0002:
                                           ; SOURCE LINE # 87
003E 120000      E     LCALL   SleepTimer_GetStatus
                                           ; SOURCE LINE # 88
0041 D007              POP     AR7
0043 D006              POP     AR6
0045 D005              POP     AR5
0047 D004              POP     AR4
0049 D003              POP     AR3
004B D002              POP     AR2
004D D001              POP     AR1
004F D000              POP     AR0
0051 D0D0              POP     PSW
0053 D000        E     POP     ?C?XPAGE1SFR
0055 D086              POP     DPS
0057 D084              POP     DPL1
0059 D085              POP     DPH1
005B D082              POP     DPL
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 7   

005D D083              POP     DPH
005F D0F0              POP     B
0061 D0E0              POP     ACC
0063 32                RETI    
             ; FUNCTION SleepIsr (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 96
0000 D2AF              SETB    EA
0002 9044F4            MOV     DPTR,#044F4H
0005 74FD              MOV     A,#0FDH
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 99
0008 7D02              MOV     R5,#02H
000A 7F00              MOV     R7,#00H
000C 120000      E     LCALL   _USB_Start
000F         ?C0004:
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 104
000F 120000      E     LCALL   USB_IsConfigurationChanged
0012 EF                MOV     A,R7
0013 601D              JZ      ?C0006
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
0015 120000      E     LCALL   USB_GetConfiguration
0018 EF                MOV     A,R7
0019 6014              JZ      ?C0007
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
001B 7F00              MOV     R7,#00H
001D 120000      E     LCALL   _?MIDI_PWR_Write
                                           ; SOURCE LINE # 110
0020 7E00        R     MOV     R6,#HIGH SleepIsr
0022 7F00        R     MOV     R7,#LOW SleepIsr
0024 120000      E     LCALL   _Sleep_isr_StartEx
                                           ; SOURCE LINE # 112
0027 120000      E     LCALL   SleepTimer_Start
                                           ; SOURCE LINE # 114
002A 120000      E     LCALL   USB_MIDI_EP_Init
                                           ; SOURCE LINE # 115
002D 8003              SJMP    ?C0006
002F         ?C0007:
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
002F 120000      E     LCALL   SleepTimer_Stop
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
0032         ?C0006:
                                           ; SOURCE LINE # 122
0032 120000      E     LCALL   USB_GetConfiguration
0035 EF                MOV     A,R7
0036 60D7              JZ      ?C0004
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 126
0038 120000      E     LCALL   _?USB_MIDI_IN_Service
                                           ; SOURCE LINE # 132
003B 120000      E     LCALL   _?USB_MIDI_OUT_EP_Service
                                           ; SOURCE LINE # 136
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 8   

003E 900000      E     MOV     DPTR,#USB_MIDI1_InqFlags
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 EF                MOV     A,R7
0044 5402              ANL     A,#02H
0046 FF                MOV     R7,A
0047 7E00              MOV     R6,#00H
0049 EF                MOV     A,R7
004A 4E                ORL     A,R6
004B 601E              JZ      ?C0010
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
004D 7BFF              MOV     R3,#0FFH
004F 7A00        R     MOV     R2,#HIGH MIDI_IDENTITY_REPLY
0051 7900        R     MOV     R1,#LOW MIDI_IDENTITY_REPLY
0053 900000      E     MOV     DPTR,#?_USB_PutUsbMidiIn?BYTE+04H
0056 E4                CLR     A
0057 F0                MOVX    @DPTR,A
0058 7F0E              MOV     R7,#0EH
005A 120000      E     LCALL   _USB_PutUsbMidiIn
                                           ; SOURCE LINE # 139
005D 900000      E     MOV     DPTR,#USB_MIDI1_InqFlags
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 EF                MOV     A,R7
0063 54FD              ANL     A,#0FDH
0065 FF                MOV     R7,A
0066 900000      E     MOV     DPTR,#USB_MIDI1_InqFlags
0069 EF                MOV     A,R7
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
006B         ?C0010:
                                           ; SOURCE LINE # 142
006B 900000      E     MOV     DPTR,#USB_MIDI2_InqFlags
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 EF                MOV     A,R7
0071 5402              ANL     A,#02H
0073 FF                MOV     R7,A
0074 7E00              MOV     R6,#00H
0076 EF                MOV     A,R7
0077 4E                ORL     A,R6
0078 601F              JZ      ?C0011
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
007A 7BFF              MOV     R3,#0FFH
007C 7A00        R     MOV     R2,#HIGH MIDI_IDENTITY_REPLY
007E 7900        R     MOV     R1,#LOW MIDI_IDENTITY_REPLY
0080 900000      E     MOV     DPTR,#?_USB_PutUsbMidiIn?BYTE+04H
0083 7410              MOV     A,#010H
0085 F0                MOVX    @DPTR,A
0086 7F0E              MOV     R7,#0EH
0088 120000      E     LCALL   _USB_PutUsbMidiIn
                                           ; SOURCE LINE # 145
008B 900000      E     MOV     DPTR,#USB_MIDI2_InqFlags
008E E0                MOVX    A,@DPTR
008F FF                MOV     R7,A
0090 EF                MOV     A,R7
0091 54FD              ANL     A,#0FDH
0093 FF                MOV     R7,A
0094 900000      E     MOV     DPTR,#USB_MIDI2_InqFlags
0097 EF                MOV     A,R7
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 9   

0098 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 146
0099         ?C0011:
                                           ; SOURCE LINE # 150
0099 120000      E     LCALL   SW1_Read
009C EF                MOV     A,R7
009D 7010              JNZ     ?C0012
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 152
009F 900000      R     MOV     DPTR,#csButtStates
00A2 E0                MOVX    A,@DPTR
00A3 FF                MOV     R7,A
00A4 EF                MOV     A,R7
00A5 4401              ORL     A,#01H
00A7 FF                MOV     R7,A
00A8 900000      R     MOV     DPTR,#csButtStates
00AB EF                MOV     A,R7
00AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 153
00AD 800E              SJMP    ?C0013
00AF         ?C0012:
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
00AF 900000      R     MOV     DPTR,#csButtStates
00B2 E0                MOVX    A,@DPTR
00B3 FF                MOV     R7,A
00B4 EF                MOV     A,R7
00B5 54FE              ANL     A,#0FEH
00B7 FF                MOV     R7,A
00B8 900000      R     MOV     DPTR,#csButtStates
00BB EF                MOV     A,R7
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
00BD         ?C0013:
                                           ; SOURCE LINE # 158
00BD 120000      E     LCALL   SW2_Read
00C0 EF                MOV     A,R7
00C1 7010              JNZ     ?C0014
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 160
00C3 900000      R     MOV     DPTR,#csButtStates
00C6 E0                MOVX    A,@DPTR
00C7 FF                MOV     R7,A
00C8 EF                MOV     A,R7
00C9 4402              ORL     A,#02H
00CB FF                MOV     R7,A
00CC 900000      R     MOV     DPTR,#csButtStates
00CF EF                MOV     A,R7
00D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
00D1 800E              SJMP    ?C0015
00D3         ?C0014:
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
00D3 900000      R     MOV     DPTR,#csButtStates
00D6 E0                MOVX    A,@DPTR
00D7 FF                MOV     R7,A
00D8 EF                MOV     A,R7
00D9 54FD              ANL     A,#0FDH
00DB FF                MOV     R7,A
00DC 900000      R     MOV     DPTR,#csButtStates
00DF EF                MOV     A,R7
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 10  

00E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
00E1         ?C0015:
                                           ; SOURCE LINE # 167
00E1 900000      R     MOV     DPTR,#csButtStates_old
00E4 E0                MOVX    A,@DPTR
00E5 FF                MOV     R7,A
00E6 900000      R     MOV     DPTR,#csButtStates
00E9 E0                MOVX    A,@DPTR
00EA FE                MOV     R6,A
00EB EE                MOV     A,R6
00EC 6F                XRL     A,R7
00ED FF                MOV     R7,A
00EE 900000      R     MOV     DPTR,#csButtChange
00F1 EF                MOV     A,R7
00F2 F0                MOVX    @DPTR,A
00F3 FF                MOV     R7,A
00F4 EF                MOV     A,R7
00F5 7003              JNZ     $ + 5H
00F7 020000      R     LJMP    ?C0016
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
00FA 900000      R     MOV     DPTR,#csButtStates
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF 900000      R     MOV     DPTR,#csButtStates_old
0102 EF                MOV     A,R7
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
0104 900000      R     MOV     DPTR,#midiMsg
0107 7490              MOV     A,#090H
0109 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 175
010A 900000      R     MOV     DPTR,#csButtChange
010D E0                MOVX    A,@DPTR
010E FF                MOV     R7,A
010F EF                MOV     A,R7
0110 5401              ANL     A,#01H
0112 FF                MOV     R7,A
0113 7E00              MOV     R6,#00H
0115 EF                MOV     A,R7
0116 4E                ORL     A,R6
0117 602C              JZ      ?C0017
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 178
0119 900000      R     MOV     DPTR,#midiMsg+01H
011C 7448              MOV     A,#048H
011E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 179
011F 900000      R     MOV     DPTR,#csButtStates
0122 E0                MOVX    A,@DPTR
0123 FF                MOV     R7,A
0124 EF                MOV     A,R7
0125 30E008            JNB     ACC.0,?C0018
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
0128 900000      R     MOV     DPTR,#midiMsg+02H
012B 7464              MOV     A,#064H
012D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
012E 8005              SJMP    ?C0019
0130         ?C0018:
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 11  

                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
0130 900000      R     MOV     DPTR,#midiMsg+02H
0133 E4                CLR     A
0134 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
0135         ?C0019:
                                           ; SOURCE LINE # 188
0135 7B01              MOV     R3,#01H
0137 7A00        R     MOV     R2,#HIGH midiMsg
0139 7900        R     MOV     R1,#LOW midiMsg
013B 900000      E     MOV     DPTR,#?_USB_PutUsbMidiIn?BYTE+04H
013E E4                CLR     A
013F F0                MOVX    @DPTR,A
0140 7F03              MOV     R7,#03H
0142 120000      E     LCALL   _USB_PutUsbMidiIn
                                           ; SOURCE LINE # 189
0145         ?C0017:
                                           ; SOURCE LINE # 192
0145 900000      R     MOV     DPTR,#csButtChange
0148 E0                MOVX    A,@DPTR
0149 FF                MOV     R7,A
014A EF                MOV     A,R7
014B 5402              ANL     A,#02H
014D FF                MOV     R7,A
014E 7E00              MOV     R6,#00H
0150 EF                MOV     A,R7
0151 4E                ORL     A,R6
0152 605E              JZ      ?C0016
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 195
0154 900000      R     MOV     DPTR,#midiMsg+01H
0157 744C              MOV     A,#04CH
0159 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
015A 900000      R     MOV     DPTR,#csButtStates
015D E0                MOVX    A,@DPTR
015E FF                MOV     R7,A
015F EF                MOV     A,R7
0160 30E108            JNB     ACC.1,?C0021
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 198
0163 900000      R     MOV     DPTR,#midiMsg+02H
0166 7464              MOV     A,#064H
0168 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 199
0169 8005              SJMP    ?C0022
016B         ?C0021:
                                           ; SOURCE LINE # 201
                                           ; SOURCE LINE # 202
016B 900000      R     MOV     DPTR,#midiMsg+02H
016E E4                CLR     A
016F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
0170         ?C0022:
                                           ; SOURCE LINE # 205
0170 7B01              MOV     R3,#01H
0172 7A00        R     MOV     R2,#HIGH midiMsg
0174 7900        R     MOV     R1,#LOW midiMsg
0176 900000      E     MOV     DPTR,#?_USB_PutUsbMidiIn?BYTE+04H
0179 E4                CLR     A
017A F0                MOVX    @DPTR,A
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 12  

017B 7F03              MOV     R7,#03H
017D 120000      E     LCALL   _USB_PutUsbMidiIn
                                           ; SOURCE LINE # 207
0180 900000      R     MOV     DPTR,#midiMsg
0183 7490              MOV     A,#090H
0185 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 208
0186 900000      R     MOV     DPTR,#midiMsg+01H
0189 7448              MOV     A,#048H
018B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
018C 900000      R     MOV     DPTR,#csButtStates
018F E0                MOVX    A,@DPTR
0190 FF                MOV     R7,A
0191 EF                MOV     A,R7
0192 30E108            JNB     ACC.1,?C0023
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 211
0195 900000      R     MOV     DPTR,#midiMsg+02H
0198 7464              MOV     A,#064H
019A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 212
019B 8005              SJMP    ?C0024
019D         ?C0023:
                                           ; SOURCE LINE # 214
                                           ; SOURCE LINE # 215
019D 900000      R     MOV     DPTR,#midiMsg+02H
01A0 E4                CLR     A
01A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 216
01A2         ?C0024:
                                           ; SOURCE LINE # 218
01A2 7B01              MOV     R3,#01H
01A4 7A00        R     MOV     R2,#HIGH midiMsg
01A6 7900        R     MOV     R1,#LOW midiMsg
01A8 900000      E     MOV     DPTR,#?_USB_PutUsbMidiIn?BYTE+04H
01AB E4                CLR     A
01AC F0                MOVX    @DPTR,A
01AD 7F03              MOV     R7,#03H
01AF 120000      E     LCALL   _USB_PutUsbMidiIn
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 235
01B2         ?C0016:
                                           ; SOURCE LINE # 238
01B2 900000      R     MOV     DPTR,#usbActivityCounter
01B5 E0                MOVX    A,@DPTR
01B6 FF                MOV     R7,A
01B7 EF                MOV     A,R7
01B8 C3                CLR     C
01B9 9402              SUBB    A,#02H
01BB 5003              JNC     $ + 5H
01BD 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 240
01C0 120000      E     LCALL   MIDI1_UART_Sleep
                                           ; SOURCE LINE # 241
01C3 120000      E     LCALL   MIDI2_UART_Sleep
                                           ; SOURCE LINE # 242
01C6 7F01              MOV     R7,#01H
01C8 120000      E     LCALL   _?MIDI_PWR_Write
                                           ; SOURCE LINE # 248
01CB 120000      E     LCALL   USB_Suspend
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 13  

                                           ; SOURCE LINE # 250
01CE 120000      E     LCALL   CyPmSaveClocks
                                           ; SOURCE LINE # 256
01D1 7D40              MOV     R5,#040H
01D3 7C00              MOV     R4,#00H
01D5 7F00              MOV     R7,#00H
01D7 120000      E     LCALL   _CyPmSleep
                                           ; SOURCE LINE # 258
01DA 120000      E     LCALL   CyPmRestoreClocks
                                           ; SOURCE LINE # 260
01DD 120000      E     LCALL   USB_Resume
                                           ; SOURCE LINE # 263
01E0 120000      E     LCALL   USB_MIDI_EP_Init
                                           ; SOURCE LINE # 264
01E3 7F00              MOV     R7,#00H
01E5 120000      E     LCALL   _?MIDI_PWR_Write
                                           ; SOURCE LINE # 265
01E8 120000      E     LCALL   MIDI1_UART_Wakeup
                                           ; SOURCE LINE # 266
01EB 120000      E     LCALL   MIDI2_UART_Wakeup
                                           ; SOURCE LINE # 267
01EE 900000      R     MOV     DPTR,#usbActivityCounter
01F1 E4                CLR     A
01F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 268
                                           ; SOURCE LINE # 269
                                           ; SOURCE LINE # 270
01F3 020000      R     LJMP    ?C0004
01F6 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION _?USB_callbackLocalMidiEvent (BEGIN)
                                           ; SOURCE LINE # 275
0000 90FFFD            MOV     DPTR,#0FFFDH
0003 120000      E     LCALL   ?C?ADDXBP
0006 120000      E     LCALL   ?C?PSTXDATA
0009 90FFFF            MOV     DPTR,#0FFFFH
000C 120000      E     LCALL   ?C?ADDXBP
000F EF                MOV     A,R7
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 278
0011 900000      E     MOV     DPTR,#USB_MIDI1_InqFlags
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 EF                MOV     A,R7
0017 5401              ANL     A,#01H
0019 FF                MOV     R7,A
001A 7E00              MOV     R6,#00H
001C EF                MOV     A,R7
001D 4E                ORL     A,R6
001E 7062              JNZ     ?C0027
0020 900000      R     MOV     DPTR,#inqFlags_old
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 EF                MOV     A,R7
0026 5401              ANL     A,#01H
0028 FF                MOV     R7,A
0029 7E00              MOV     R6,#00H
002B EF                MOV     A,R7
002C 4E                ORL     A,R6
002D 6053              JZ      ?C0027
                                           ; SOURCE LINE # 279
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 14  

                                           ; SOURCE LINE # 280
002F 850083      E     MOV     DPH,?C_XBP
0032 850082      E     MOV     DPL,?C_XBP+01H
0035 A3                INC     DPTR
0036 120000      E     LCALL   ?C?PLDXDATA
0039 120000      E     LCALL   ?C?CLDPTR
003C FF                MOV     R7,A
003D EF                MOV     A,R7
003E 6409              XRL     A,#09H
0040 7040              JNZ     ?C0027
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 282
0042 850083      E     MOV     DPH,?C_XBP
0045 850082      E     MOV     DPL,?C_XBP+01H
0048 A3                INC     DPTR
0049 120000      E     LCALL   ?C?PLDXDATA
004C E9                MOV     A,R1
004D 2401              ADD     A,#01H
004F F9                MOV     R1,A
0050 EA                MOV     A,R2
0051 3400              ADDC    A,#00H
0053 FA                MOV     R2,A
0054 120000      E     LCALL   ?C?CLDPTR
0057 FF                MOV     R7,A
0058 EF                MOV     A,R7
0059 B40107            CJNE    A,#01H,?C0029
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
005C 7F00              MOV     R7,#00H
005E 120000      E     LCALL   _?MIDI_PWR_Write
                                           ; SOURCE LINE # 285
0061 801F              SJMP    ?C0027
0063         ?C0029:
                                           ; SOURCE LINE # 286
0063 850083      E     MOV     DPH,?C_XBP
0066 850082      E     MOV     DPL,?C_XBP+01H
0069 A3                INC     DPTR
006A 120000      E     LCALL   ?C?PLDXDATA
006D E9                MOV     A,R1
006E 2401              ADD     A,#01H
0070 F9                MOV     R1,A
0071 EA                MOV     A,R2
0072 3400              ADDC    A,#00H
0074 FA                MOV     R2,A
0075 120000      E     LCALL   ?C?CLDPTR
0078 FF                MOV     R7,A
0079 EF                MOV     A,R7
007A B40205            CJNE    A,#02H,?C0027
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 288
007D 7F01              MOV     R7,#01H
007F 120000      E     LCALL   _?MIDI_PWR_Write
                                           ; SOURCE LINE # 289
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 291
0082         ?C0027:
                                           ; SOURCE LINE # 292
0082 900000      E     MOV     DPTR,#USB_MIDI1_InqFlags
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 900000      R     MOV     DPTR,#inqFlags_old
008A EF                MOV     A,R7
C51 COMPILER V9.51   MAIN                                                                  02/21/2017 15:19:22 PAGE 15  

008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 293
008C 850083      E     MOV     DPH,?C_XBP
008F 850082      E     MOV     DPL,?C_XBP+01H
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 850083      E     MOV     DPH,?C_XBP
0097 850082      E     MOV     DPL,?C_XBP+01H
009A EF                MOV     A,R7
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
009C 900004            MOV     DPTR,#04H
009F 120000      E     LCALL   ?C?ADDXBP
00A2 22                RET     
             ; FUNCTION _?USB_callbackLocalMidiEvent (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    766    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =      5       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
